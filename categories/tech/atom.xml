<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | K]]></title>
  <link href="http://k.arttechresearch.com/categories/tech/atom.xml" rel="self"/>
  <link href="http://k.arttechresearch.com/"/>
  <updated>2016-04-09T00:30:45+08:00</updated>
  <id>http://k.arttechresearch.com/</id>
  <author>
    <name><![CDATA[K]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Programming Languages Comparison: Conditional Statements]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/04/09/programming-languages-comparison-conditional-statements/"/>
    <updated>2016-04-09T00:05:56+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/04/09/programming-languages-comparison-conditional-statements</id>
    <content type="html"><![CDATA[<h2>Task</h2>

<p>Given an integer n, perform the following conditonal actions:</p>

<ul>
<li>if n is odd, print <code>Weird</code>;</li>
<li>if n is even, and in the inclusive range of 2 to 5, print <code>Not Weird</code>;</li>
<li>if n is even, and in the inclusive range of 6 to 20, print <code>Weird</code>;</li>
<li>if n is even, and greater than 20, print <code>Not Weird</code>.</li>
</ul>


<h2>Solutions</h2>

<h3>C</h3>

<pre><code class="c">#include &lt;math.h&gt;
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;assert.h&gt;
#include &lt;limits.h&gt;
#include &lt;stdbool.h&gt;

int main(){
    int N; 
    scanf("%d",&amp;N);

    if (N%2==1){
        printf("Weird");
    }
    else{
        if (N%2==0 &amp;&amp; N&gt;=6 &amp;&amp; N&lt;=20){
            printf("Weird");
        }
        else{
            printf("Not Weird");
        }
    }

    return 0;
}
</code></pre>

<h3>C++</h3>

<pre><code class="cpp">#include &lt;map&gt;
#include &lt;set&gt;
#include &lt;list&gt;
#include &lt;cmath&gt;
#include &lt;ctime&gt;
#include &lt;deque&gt;
#include &lt;queue&gt;
#include &lt;stack&gt;
#include &lt;string&gt;
#include &lt;bitset&gt;
#include &lt;cstdio&gt;
#include &lt;limits&gt;
#include &lt;vector&gt;
#include &lt;climits&gt;
#include &lt;cstring&gt;
#include &lt;cstdlib&gt;
#include &lt;fstream&gt;
#include &lt;numeric&gt;
#include &lt;sstream&gt;
#include &lt;iostream&gt;
#include &lt;algorithm&gt;
using namespace std;


int main(){
    int N;
    cin &gt;&gt; N;

    string ans = "";
    if (N%2==1){
        ans = "Weird";
    }
    else {
        if (N%2==0 &amp;&amp; (N &gt;= 6 &amp;&amp; N &lt;= 20)){
            ans = "Weird";
        }
        else{
            ans = "Not Weird";
        }
    }
    cout &lt;&lt; ans &lt;&lt; endl;

    return 0;
}
</code></pre>

<h3>Java</h3>

<pre><code class="java">import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
public class Solution {

   public static void main(String[] args) {
      Scanner scan = new Scanner(System.in);
      int n = scan.nextInt(); 
      scan.close();
      String ans="";

      // if 'n' is NOT evenly divisible by 2 (i.e.: n is odd)
      if(n%2==1){
         ans = "Weird";
      }
      else{
         // Complete the code 
         if (n%2==0 &amp;&amp; (n &gt;=6 &amp;&amp; n &lt;=20)){
             ans = "Weird";
         }
         else {
             ans = "Not Weird";
         }
      }
      System.out.println(ans);
   }
}
</code></pre>

<h3>Python</h3>

<p>Python 2</p>

<pre><code class="python">#!/bin/python

import sys


N = int(raw_input().strip())

if N % 2 == 0 and (2 &lt;= N &lt;= 5 or N &gt; 20):
    print "Not Weird"
else:
    print "Weird"
</code></pre>

<p>Python 3</p>

<pre><code class="python">#!/bin/python3

import sys


N = int(input().strip())

if N % 2 == 0 and (2 &lt;= N &lt;= 5 or N &gt; 20):
    print("Not Weird")
else:
    print("Weird")
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programming Languages Comparison: Operators]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/04/07/programming-languages-comparison-operators/"/>
    <updated>2016-04-07T23:57:09+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/04/07/programming-languages-comparison-operators</id>
    <content type="html"><![CDATA[<h2>Task</h2>

<ul>
<li>get the input: mealCost, tipPercent, taxPercent</li>
<li>calculate the tip: tip = mealCost * tipPercent / 100</li>
<li>calculate the tax: tax = mealCost * taxPercent / 100</li>
<li>calculate the totalCost: totalCost = mealCost + tip + tax</li>
<li>round the totalCost</li>
<li>print the output</li>
</ul>


<h2>Solutions</h2>

<h3>C</h3>

<pre><code class="c">#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;math.h&gt;
#include &lt;stdlib.h&gt;

int main() {

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    float mealCost;
    float tipPercent;
    float taxPercent;

    scanf("%f", &amp;mealCost);
    scanf("\n%f\n", &amp;tipPercent);
    scanf("%f", &amp;taxPercent);

    double tip = mealCost * tipPercent / 100.0;
    double tax = mealCost * taxPercent / 100.0;
    int totalCost = round(mealCost + tip + tax);

    printf("The total meal cost is %d dollars.", totalCost);

    return 0;
}
</code></pre>

<h3>C++</h3>

<pre><code class="cpp">#include &lt;cmath&gt;
#include &lt;cstdio&gt;
#include &lt;vector&gt;
#include &lt;iostream&gt;
#include &lt;algorithm&gt;
using namespace std;


int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ 
    double mealCost;
    double tipPercent;
    double taxPercent;

    cin &gt;&gt; mealCost;
    cin &gt;&gt; tipPercent;
    cin &gt;&gt; taxPercent;

    double tip = mealCost * tipPercent / 100;
    double tax = mealCost * taxPercent / 100;
    double totalCost = mealCost + tip + tax;
    cout &lt;&lt; "The total meal cost is " &lt;&lt; round(totalCost) &lt;&lt; " dollars." &lt;&lt; endl;

    return 0;
}
</code></pre>

<h3>Java</h3>

<pre><code class="java">import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
public class Arithmetic {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        double mealCost = scan.nextDouble(); // original meal price
        double tipPercent = scan.nextInt(); // tip percentage
        double taxPercent = scan.nextInt(); // tax percentage
        scan.close();

        // Write your calculation code here.
        double tip = mealCost * (tipPercent/100);
        double tax = mealCost * (taxPercent/100);

        // cast the result of the rounding operation to an int and save it as totalCost
        int totalCost = (int) Math.round(mealCost+tip+tax);

        // Print your result
        System.out.println("The total meal cost is " + totalCost + " dollars.");
    }
}
</code></pre>

<h3>Python</h3>

<p>Python 2</p>

<pre><code class="python">mealCost = float(raw_input())
tipPercent = float(raw_input())
taxPercent = float(raw_input())

tip = mealCost * ( tipPercent/100)
tax = mealCost * (taxPercent/100)

totalCost = round(mealCost + tip + tax)

print "The total meal cost is %d dollars." % totalCost
</code></pre>

<p>Python 3</p>

<pre><code class="python">mealCost = float(input())
tipPercent = float(input())
taxPercent = float(input())

tip = mealCost * (tipPercent/100)
tax = mealCost * (taxPercent/100)

totalCost = round(mealCost + tip + tax)
print("The total meal cost is %d dollars." % totalCost)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programming Languages Comparison: Data Types]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/04/07/programming-languages-comparison-data-types/"/>
    <updated>2016-04-07T01:55:32+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/04/07/programming-languages-comparison-data-types</id>
    <content type="html"><![CDATA[<h2>Task</h2>

<ul>
<li>get the variables: int, double, string</li>
<li>calculate the sum of the digits and concat the strings</li>
<li>print the results</li>
</ul>


<h2>Solutions</h2>

<h3>C</h3>

<pre><code class="c">#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;math.h&gt;
#include &lt;stdlib.h&gt;

int main() {
    int i = 4;
    double d = 4.0;
    char s[] = "HackerRank ";

    // Declare second integer, double, and String variables.
    int num;
    float digit;
    char string[100];

    // Read and save an integer, double, and String to your variables.
    scanf("%d", &amp;num);
    scanf("\n%f\n", &amp;digit);
    scanf("%[^\n]", string);

    // Print the sum of both integer variables on a new line.
    printf("%d\n", i+num);    

    // Print the sum of the double variables on a new line.
    printf("%.1f\n", d+digit);    

    // Concatenate and print the String variables on a new line
    // The 's' variable above should be printed first.
    printf("%s%s", s, string);

    return 0;
}
</code></pre>

<h3>C++</h3>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;iomanip&gt;
#include &lt;limits&gt;

using namespace std;

int main() {
    int i = 4;
    double d = 4.0;
    string s = "HackerRank ";

    return 0;
}
</code></pre>

<h3>Java</h3>

<pre><code class="java">import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        int i = 4;
        double d = 4.0;
        String s = "HackerRank ";

        Scanner scan = new Scanner(System.in);

        /* Declare second integer, double, and String variables. */
        int i2 = scan.nextInt();
        double d2 = scan.nextDouble();
        String empty = scan.nextLine();
        String s2 = scan.nextLine();

        /* Read and save an integer, double, and String to your variables.*/
        int int_sum = i + i2;
        double double_sum = d + d2;
        String combine_s = s + s2;

        /* Print the sum of both integer variables on a new line. */
        System.out.println(int_sum);
        /* Print the sum of the double variables on a new line. */
        System.out.println(double_sum);
        /* Concatenate and print the String variables on a new line; 
            the 's' variable above should be printed first. */
        System.out.println(combine_s);

        scan.close();
    }
}
</code></pre>

<h3>Python</h3>

<p>python 2</p>

<pre><code class="python">i = 4
d = 4.0
s = 'HackerRank '

# Declare second integer, double, and String variables.
i2 = int(raw_input())
d2 = float(raw_input())
s2 = str(raw_input())

# Read and save an integer, double, and String to your variables.
total_i = i + i2
total_d = d + d2
strings = s + s2

# Print the sum of both integer variables on a new line.
print str(total_i)

# Print the sum of the double variables on a new line.
print str(total_d)

# Concatenate and print the String variables on a new line
# The 's' variable above should be printed first.
print strings
</code></pre>

<p>python 3</p>

<pre><code>i = 4
d = 4.0
s = 'HackerRank '

# Declare second integer, double, and String variables.
i2 = int(input())
d2 = float(input())
s2 = str(input())

# Read and save an integer, double, and String to your variables.
total_i = i + i2
total_d = d + d2
strings = s + s2

# Print the sum of both integer variables on a new line.
print(total_i)

# Print the sum of the double variables on a new line.
print(total_d)

# Concatenate and print the String variables on a new line
# The 's' variable above should be printed first.
print(strings)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programming Languages Comparison: Print]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/04/05/programming-languages-comparison-print/"/>
    <updated>2016-04-05T17:08:53+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/04/05/programming-languages-comparison-print</id>
    <content type="html"><![CDATA[<h2>Task</h2>

<ul>
<li>Save a line of input from stdin to a variable</li>
<li>Print <code>Hello, World</code> on a single line</li>
<li>Print the value of the variable on a second line</li>
</ul>


<h2>Solutions</h2>

<h3>C</h3>

<pre><code class="c">#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;math.h&gt;
#include &lt;stdlib.h&gt;
int main() {
   char inputString[105]; // declare a variable to hold our input
   scanf("%[^\n]", inputString); // get a line of input from stdin and save it to our variable

   // Your first line of output goes here
   printf("Hello, World.\n");

   // Write the second line of output
   printf(inputString);

   return 0;
}
</code></pre>

<h3>C++</h3>

<pre><code class="cpp">#include &lt;cmath&gt;
#include &lt;cstdio&gt;
#include &lt;vector&gt;
#include &lt;iostream&gt;
#include &lt;algorithm&gt;
using namespace std;

int main() {
   string inputString; // declare a variable to hold our input
   getline(cin, inputString); // get a line of input from cin and save it to our variable

   // Your first line of output goes here
   cout &lt;&lt; "Hello, World." &lt;&lt; endl;

   // Write the second line of output
   cout &lt;&lt; inputString &lt;&lt; endl;

   return 0;
}
</code></pre>

<h3>Java</h3>

<pre><code class="java">import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
   public static void main(String[] args) {
      Scanner scan = new Scanner(System.in); // use the Scanner class to read from stdin
      String inputString = scan.nextLine(); // read a line of input and save it to a variable
      scan.close(); // close the scanner

      // Your first line of output goes here
      System.out.println("Hello, World.");

      // Write the second line of output
      System.out.println(inputString);
   }
}
</code></pre>

<h3>Python</h3>

<p>python2</p>

<pre><code class="python">inputString = raw_input() # get a line of input from stdin and save it to our variable

# Your first line of output goes here
print 'Hello, World.'

# Write the second line of output
print inputString
</code></pre>

<p>python3</p>

<pre><code class="python">inputString = input() # get a line of input from stdin and save it to our variable

# Your first line of output goes here
print('Hello, World.')

# Write the second line of output
print(inputString)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Algorithms]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/28/algorithms/"/>
    <updated>2016-03-28T21:50:20+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/28/algorithms</id>
    <content type="html"><![CDATA[<h2>Analysis of Algorithms</h2>

<h2>Data Structure</h2>

<h3>Array: Searching and Sorting</h3>

<p>searching:</p>

<ul>
<li>Binary Search</li>
</ul>


<p>sorting:</p>

<ul>
<li>Selection Sort</li>
<li>Bubble Sort</li>
<li>Insertion Sort</li>
<li>Merge Sort</li>
<li>Heap Sort</li>
<li>Quick Sort</li>
<li>Radix Sort</li>
<li>Counting Sort</li>
<li>Bucket Sort</li>
<li>Shell Sort</li>
<li>Comb Sort</li>
<li>Pigeonhole Sort</li>
</ul>


<h3>Tree &amp; Graph: Greedy and Graph</h3>

<h4>Search</h4>

<ul>
<li>DFS</li>
<li>BFS</li>
</ul>


<h4>Greedy Algorithms</h4>

<ul>
<li>Activity selectioin problem</li>
<li>spanning tree

<ul>
<li>Kruskal’s minimum spanning tree</li>
<li>Prim’s minimum spanning tree</li>
<li>Prim’s MST for Adjacency list representation</li>
</ul>
</li>
<li>path

<ul>
<li>Dijkstra’s shortest path algorithm</li>
<li>Dijkstra’s algorithm for Adjacency list representation</li>
</ul>
</li>
<li>value

<ul>
<li>Huffman coding</li>
<li>Efficient Huffman coding for sorted input</li>
</ul>
</li>
</ul>


<h4>Graph Algorithms</h4>

<ul>
<li>Connectivity</li>
<li>Hard Problems</li>
<li>Maximum Flow</li>
<li>Misc</li>
</ul>


<h2>String</h2>

<h3>Pattern Searching</h3>

<h3>String Algorithms</h3>

<h2>Strategics</h2>

<h3>Divide and Conquer</h3>

<h2>Mathematics</h2>

<h3>Backtracking</h3>

<h3>Geometric Algorithms</h3>

<h3>Mathematical Algorithms</h3>

<h3>Bit Algorithms</h3>

<h2>Reference</h2>

<ul>
<li><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#SearchingandSorting">Algorithms</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
