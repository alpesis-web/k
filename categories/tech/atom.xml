<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | K]]></title>
  <link href="http://k.arttechresearch.com/categories/tech/atom.xml" rel="self"/>
  <link href="http://k.arttechresearch.com/"/>
  <updated>2016-02-14T20:27:20+08:00</updated>
  <id>http://k.arttechresearch.com/</id>
  <author>
    <name><![CDATA[K]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting Started With Spring MVC]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/02/14/getting-started-with-spring-mvc/"/>
    <updated>2016-02-14T18:04:37+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/02/14/getting-started-with-spring-mvc</id>
    <content type="html"><![CDATA[<p>Steps</p>

<ul>
<li>Installations</li>
<li>Project creation</li>
</ul>


<h2>Installations</h2>

<ul>
<li>Java 8</li>
<li>Maven 3: a build tool</li>
<li>Tomcat 8: a web server</li>
<li>Eclipse: IDE</li>
</ul>


<h3>Java</h3>

<pre><code class="bash">$ sudo add-apt-repository -y ppa:webupd8team/java
$ sudo apt-get update
$ sudo apt-get install -y oracle-java8-installer
$ java -version
</code></pre>

<h3>Maven</h3>

<p><a href="http://maven.apache.org/download.cgi">maven</a></p>

<pre><code class="bash">$ wget http://apache.mirror.anlx.net/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.zip
$ sudo unzip apache-maven-3.3.9-bin.zip
$ sudo mv apache-maven-3.3.9/ /usr/local/maven/
$ vim ~/.bashrc
$ source ~/.bashrc
$ mvn -v
</code></pre>

<p><code>~/.bashrc</code></p>

<pre><code class="bash"># maven
export MAVEN_HOME=/usr/local/maven
export PATH=$PATH:$MAVEN_HOME/bin
</code></pre>

<h3>Tomcat</h3>

<p><a href="http://tomcat.apache.org/download-80.cgi">Tomcat</a></p>

<pre><code class="bash">$ wget http://www.mirrorservice.org/sites/ftp.apache.org/tomcat/tomcat-8/v8.0.32/bin/apache-tomcat-8.0.32.zip
$ sudo unzip apache-tomcat-8.0.32.zip
$ sudo mv apache-tomcat-8.0.32/ /usr/local/tomcat/
$ cd /usr/local/tomcat/
$ sudo chmod +x bin/*.sh
$ sudo bin/catalina.sh run
$ cd /tmp
$ curl http://localhost:8080
</code></pre>

<h3>Eclipse</h3>

<p><a href="http://www.eclipse.org/downloads/">Eclipse IDE for Java EE Developers</a></p>

<h2>Project Creation</h2>

<ul>
<li>creating a maven project</li>
</ul>


<h3>Maven Project</h3>

<p><a href="https://maven.apache.org/guides/getting-started/">Maven Getting Started</a></p>

<h4>mvn</h4>

<pre><code class="bash">$ mvn -B archetype:generate \
      -DarchetypeGroupId=org.apache.maven.archetypes \
      -DgroupId=com.mycompany.app \
      -DartifactId=my-app \
      -DarchetypeArtifactId=maven-archetype-quickstart \
      -DinteractiveMode=false \
      -Dpackaging=war
</code></pre>

<p>folder</p>

<pre><code>my-app
|-- pom.xml
`-- src
    |-- main
    |   `-- java
    |       `-- com
    |           `-- mycompany
    |               `-- app
    |                   `-- App.java
    `-- test
        `-- java
            `-- com
                `-- mycompany
                    `-- app
                        `-- AppTest.java
</code></pre>

<h4>pom.xml</h4>

<p>Dependencies:</p>

<ul>
<li>Servlet</li>
<li>Spring</li>
</ul>


<p>edit pom.xml</p>

<p>```xml
<properties>
    &lt;java.version>1.8&lt;/java.version>
    &lt;spring.version>4.1.6.RELEASE&lt;/spring.version>
</properties></p>

<p><dependencies></p>

<pre><code>&lt;!-- Servlet API --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;javax.servlet&lt;/groupId&gt;
    &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;
    &lt;version&gt;3.1.0&lt;/version&gt;
    &lt;scope&gt;provided&lt;/scope&gt;
&lt;/dependency&gt;

&lt;!-- Spring Core --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework&lt;/groupId&gt;
    &lt;artifactId&gt;spring-context&lt;/artifactId&gt;
    &lt;version&gt;${spring.version}&lt;/version&gt;
&lt;/dependency&gt;

&lt;!-- Spring MVC --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework&lt;/groupId&gt;
    &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;
    &lt;version&gt;${spring.version}&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>

<p></dependencies></p>

<!-- boilerplate code allowing Maven to generate a .war archive without requiring a web.xml file -->


<p><build>
    <finalName>springwebapp</finalName></p>

<pre><code>&lt;plugins&gt;
    &lt;plugin&gt;
        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
        &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;
        &lt;version&gt;2.6&lt;/version&gt;
        &lt;configuration&gt;
            &lt;failOnMissingWebXml&gt;false&lt;/failOnMissingWebXml&gt;
        &lt;/configuration&gt;
    &lt;/plugin&gt;
&lt;/plugins&gt;
</code></pre>

<p></build>
```</p>

<h3>Spring MVC</h3>

<pre><code class="bash">$ cd src/main/java/com/&lt;groupId&gt;/
$ mkdir config
$ mkdir controller
</code></pre>

<h4>Config</h4>

<pre><code class="java AppConfig.java">package com.todo.config;

import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;

@Configuration
@EnableWebMvc
@ComponentScan(basePackages = {"com.todo.controller"})
public class AppConfig{
}
</code></pre>

<pre><code class="java ServletInitializer.java">package com.todo.config;

import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;

public class ServletInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {

  @Override
  protected Class&lt;?&gt;[] getRootConfigClasses() {
    return new Class&lt;?&gt;[0];
  }

  @Override
  protected Class&lt;?&gt;[] getServletConfigClasses() {
    return new Class&lt;?&gt;[]{AppConfig.class};
  }

  @Override
  protected String[] getServletMappings() {
    return new String[]{"/"};
  }
}
</code></pre>

<h4>Controller</h4>

<pre><code class="java HelloController.java">package com.todo.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class HelloController {
  @RequestMapping("hi")
  @ResponseBody
  public String hi() {
    return "Hello world.";
  }
}
</code></pre>

<h3>Run</h3>

<pre><code class="bash">$ mvn clean install
$ sudo cp target/springwebapp.war /usr/local/tomcat/webapps/
$ curl http://localhost:8080/springwebapp/hi
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Caffe on Ubuntu 14.04]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/02/03/installing-caffe-on-ubuntu-14-dot-04/"/>
    <updated>2016-02-03T05:07:12+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/02/03/installing-caffe-on-ubuntu-14-dot-04</id>
    <content type="html"><![CDATA[<h2>Prequisitions</h2>

<ul>
<li>Vagrant/VirtualBox</li>
<li>Ubuntu 14.04</li>
<li>VM Memory: 4096 MB</li>
</ul>


<h2>Caffe Installation</h2>

<p>Requirements</p>

<ul>
<li>CUDA</li>
<li>BLAS</li>
<li>OpenCV</li>
<li>Anaconda</li>
<li>Boost</li>
<li>Caffe dependencies</li>
<li>Protobuf</li>
<li>Caffe</li>
</ul>


<h3>CUDA</h3>

<pre><code class="bash"># reference: https://gist.github.com/titipata/f0ef48ad2f0ebc07bcb9
# check version
$ lspci | grep -i nvidia
$ uname -m &amp;&amp; cat /etc/*release
$ gcc --version

# CUDA
$ cd /tmp
$ wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_6.5-14_amd64.deb
$ sudo dpkg -i cuda-repo-ubuntu1404_6.5-14_amd64.deb
$ sudo apt-get update
$ sudo apt-get install cuda
$ sudo reboot
</code></pre>

<h3>BLAS</h3>

<pre><code class="bash">$ sudo apt-get install libopenblas-dev
</code></pre>

<h3>OpenCV</h3>

<pre><code class="bash">$ sudo apt-get install git unzip
$ cd /tmp
$ wget https://raw.githubusercontent.com/jayrambhia/Install-OpenCV/master/Ubuntu/2.4/opencv2_4_9.sh
$ sudo chmod +x opencv2_4_9.sh
$ ./opencv2_4_9.sh
</code></pre>

<h3>Anaconda</h3>

<pre><code class="bash">$ cd /tmp
$ wget http://09c8d0b2229f813c1b93-c95ac804525aac4b6dba79b00b39d1d3.r79.cf1.rackcdn.com/Anaconda-2.1.0-Linux-x86_64.sh
$ sudo bash Anaconda-2.1.0-Linux-x86.sh
# path: /usr/local/anaconda
</code></pre>

<h3>Boost</h3>

<pre><code class="bash">$ sudo apt-get install libboost-all-dev
</code></pre>

<h3>Caffe dependencies</h3>

<pre><code class="bash"># reference: http://caffe.berkeleyvision.org/install_apt.html
$ sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-devlibhdf5-serial-dev
$ sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev protobuf-compiler
</code></pre>

<h3>Protobuf</h3>

<pre><code class="bash">$ sudo apt-get install python-pip
$ sudo pip install protobuf
</code></pre>

<h3>Caffe</h3>

<pre><code class="bash">$ cd /usr/local
$ sudo git clone https://github.com/BVLC/caffe
$ cd caffe/
$ sudo cp Makefile.config.example Makefile.config
# modify Makefile.config if needed
###################################################
# CPU-only switch (uncomment to build without GPU support).
CPU_ONLY := 1
###################################################

$ sudo make all
$ sudo make test
$ sudo vim ~/.bashrc              # update paths
$ source ~/.bashrc
$ make runtest
...
[----------] Global test environment tear-down
[==========] 1019 tests from 144 test cases ran. (34669 ms total)
[  PASSED  ] 1019 tests.
</code></pre>

<p><code>~/.bashrc</code> config:</p>

<pre><code class="bash"># CUDA
export PATH=/usr/local/cuda-7.5/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda-7.5/lib64:$LD_LIBRARY_PATH
export PATH
# Anaconda
export PATH=/usr/local/anaconda/bin:$PATH
# Caffe Root
export CAFFE_ROOT=/usr/local/caffe
</code></pre>

<p>config python library</p>

<pre><code class="bash">$ sudo make pycaffe
$ sudo make distribute
# make dir for custom python modules, install caffe
$ mkdir ~/pycaffe
$ mv distribute/python/caffe ~/pycaffe
#################################################################
# set PYTHONPATH (this should go in your .bashrc or whatever
# export PYTHONPATH=${HOME}/pycaffe:$PYTHONPATH
export PYTHONPATH=/usr/local/caffe/python:$PYTHONPATH
#################################################################
</code></pre>

<p>Install the python dependencies</p>

<pre><code class="bash">$ cd /usr/local/cafffe/python
$ sudo pip install -r requirements.txt
</code></pre>

<p>import caffe on IPython</p>

<pre><code class="bash"># fixed Anaconda issue
$ sudo rm /usr/local/anaconda/lib/libm.*
$ ipython
$ conda install protobuf
# import caffe
$ cd /usr/local/caffe/python
$ import caffe
</code></pre>

<p>import caffe on python script</p>

<pre><code># import matplotlib for fixing the issue when importing caffe
# so, matplotlib is a must
import matplotlib
matplotlib.use('Agg')

import sys
sys.path.insert(0, '/usr/local/caffe/python/')
import caffe
</code></pre>

<h2>DeepDream</h2>

<h3>IPython Notebook (Optional)</h3>

<pre><code class="bash">$ sudo pip install ipython
$ sudo pip install jupyter
$ ipython notebook --ip 0.0.0.0
</code></pre>

<p>ipython notebook url: <a href="http://localhost:8888">http://localhost:8888</a></p>

<h3>Dependencies</h3>

<ul>
<li>Python: scipy, numpy, pillow</li>
</ul>


<pre><code class="bash"># python
$ sudo apt-get install python-dev python-virtualenv
# pillow
$ sudo apt-get install libtiff5-dev libjpeg8-dev zlib1g-dev \
libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python-tk
# scipy
$ sudo apt-get install libblas-dev liblapack-dev libatlas-base-dev gfortran
</code></pre>

<p><code>base.txt</code>: python requirements</p>

<pre><code># NOTE: if it doesn't run on anaconda, `scikit-image` and `cython` 
# must be installed on PYTHONPATH. Otherwise, it will show some 
# errors when `import caffe`.
numpy==1.10.4
Pillow==3.1.0
scipy==0.17.0
protobuf==2.6.1
scikit-image==0.11.3
cython==0.23.4
</code></pre>

<pre><code class="bash">$ sudo pip install -r base.txt
</code></pre>

<h3>Repo</h3>

<pre><code class="bash">$ git clone https://github.com/google/deepdream.git
$ cd deepdream
</code></pre>

<h3>Models</h3>

<pre><code class="bash">$ wget wget -P /usr/local/caffe/models/bvlc_googlenet http://dl.caffe.berkeleyvision.org/bvlc_googlenet.caffemodel
</code></pre>

<h3>Run</h3>

<pre><code class="bash">$ ipython notebook ./dream.ipynb
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solving a Technical Question]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/14/solving-a-technical-question/"/>
    <updated>2016-01-14T15:24:40+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/14/solving-a-technical-question</id>
    <content type="html"><![CDATA[<p>Source: Cracking the Coding Interview</p>

<p>5 Steps</p>

<ol>
<li>Ask questions.</li>
<li>Design a algorithm.</li>
<li>Pseudocode</li>
<li>Code</li>
<li>Test</li>
</ol>


<h2>1. Ask Questions</h2>

<ul>
<li>What are the data types?</li>
<li>How much data is there?</li>
<li>What assuptions do you need to solve the problem?</li>
<li>WHo is the user?</li>
</ul>


<h2>2. Design a algorithm</h2>

<ul>
<li>What are its space and time complexity?</li>
<li>What happens if there is a lot of data?</li>
<li>Does your design cause other issues? For example, if you&rsquo;re creating a modified version of a binary search tree, did your design impact the time for insert, find, or delete?</li>
<li>If there are other issues or limitations, did you make the right trade-offs? For which scenarios might the trade-off be less optimal?</li>
<li>If they gave you specific data (e.g., mentioned that the data is ages, or in sorted order), have you leveraged that information? Usually there&rsquo;s a reason that an inter- viewer gave you specific information.</li>
</ul>


<p>approaches</p>

<ul>
<li>examplify</li>
<li>pattern matching</li>
<li>simplify and generalize</li>
<li>base case and build</li>
<li>data structure brainstorm</li>
</ul>


<h2>3. Pseudocode</h2>

<h2>4. Code</h2>

<ul>
<li>correct: expected and unexpected inputs</li>
<li>efficient: time and space</li>
<li>simple</li>
<li>readable</li>
<li>maintainable</li>
</ul>


<h2>5. Test</h2>

<ul>
<li>Extremecases: 0, negative, null, maximums, minimums.</li>
<li>User error:What happens if the user passes in null or a negative value?</li>
<li>General cases: Test the normal case.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Power Table]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/14/power-table/"/>
    <updated>2016-01-14T15:08:07+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/14/power-table</id>
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:left;"> Power of 2 </th>
<th style="text-align:left;"> Exact Value (X)   </th>
<th style="text-align:left;"> Approx. Value </th>
<th style="text-align:left;"> X Bytes into MB, GB, etc </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> 7          </td>
<td style="text-align:left;"> 128               </td>
<td style="text-align:left;">               </td>
<td style="text-align:left;">                          </td>
</tr>
<tr>
<td style="text-align:left;"> 8          </td>
<td style="text-align:left;"> 256               </td>
<td style="text-align:left;">               </td>
<td style="text-align:left;">                          </td>
</tr>
<tr>
<td style="text-align:left;"> 10         </td>
<td style="text-align:left;"> 1024              </td>
<td style="text-align:left;"> 1 thousand    </td>
<td style="text-align:left;"> 1 K                      </td>
</tr>
<tr>
<td style="text-align:left;"> 16         </td>
<td style="text-align:left;"> 65,536            </td>
<td style="text-align:left;">               </td>
<td style="text-align:left;"> 64 K                     </td>
</tr>
<tr>
<td style="text-align:left;"> 20         </td>
<td style="text-align:left;"> 1,048,576         </td>
<td style="text-align:left;"> 1 million     </td>
<td style="text-align:left;"> 1 MB                     </td>
</tr>
<tr>
<td style="text-align:left;"> 30         </td>
<td style="text-align:left;"> 1,073,741,824     </td>
<td style="text-align:left;"> 1 billion     </td>
<td style="text-align:left;"> 1 GB                     </td>
</tr>
<tr>
<td style="text-align:left;"> 32         </td>
<td style="text-align:left;"> 4,294,967,296     </td>
<td style="text-align:left;">               </td>
<td style="text-align:left;"> 4 GB                     </td>
</tr>
<tr>
<td style="text-align:left;"> 40         </td>
<td style="text-align:left;"> 1,099,511,627,776 </td>
<td style="text-align:left;"> 1 trillion    </td>
<td style="text-align:left;"> 1 TB                     </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Data Visualization With D3]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/14/data-visualization-with-d3/"/>
    <updated>2016-01-14T13:06:49+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/14/data-visualization-with-d3</id>
    <content type="html"><![CDATA[<ul>
<li>Data Visualization</li>
<li>Charting</li>
<li>D3</li>
</ul>


<h2>Data Visualization</h2>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/19/7b/75/197b75f0249050370e5b248e6e854be2.jpg" /></p>

<h2>Charting</h2>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/ba/b3/69/bab36904d402394edb45d3cb15756fdf.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/94/6b/25/946b252a45ff38bbadfed39bf12b6acc.jpg" /></p>

<h2>D3</h2>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/d3/2e/19/d32e192b8b34ca65d646f774ae67ce91.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/c1/09/e7/c109e7bd15ea7b7a53ff1cdea2563d24.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/b6/38/72/b638722c1fd3b4ae0a612f9d0fca208b.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/87/75/ac/8775ac7f7c6313e014445fcf979b88c2.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/91/3a/d1/913ad1590890d42d7a351b51806c5d68.jpg" /></p>
]]></content>
  </entry>
  
</feed>
