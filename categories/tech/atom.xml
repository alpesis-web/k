<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | K]]></title>
  <link href="http://k.arttechresearch.com/categories/tech/atom.xml" rel="self"/>
  <link href="http://k.arttechresearch.com/"/>
  <updated>2015-10-25T00:27:35+08:00</updated>
  <id>http://k.arttechresearch.com/</id>
  <author>
    <name><![CDATA[K]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Converting Markdown to PDF With NodeJS]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/10/21/converting-markdown-to-pdf-with-nodejs/"/>
    <updated>2015-10-21T19:57:50+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/10/21/converting-markdown-to-pdf-with-nodejs</id>
    <content type="html"><![CDATA[<h2>Requirements</h2>

<ul>
<li>OS: OS X</li>
<li>Language: Node.js/npm</li>
<li>Dependency: markdown-pdf</li>
</ul>


<h2>Example</h2>

<p>install dependency</p>

<pre><code class="bash">$ npm install markdown-pdf
</code></pre>

<p>convert markdown to pdf</p>

<pre><code class="javascript md2pdf.js">var md_file = "./file_name.md"
var output_file = "./outputs/file_name.pdf"

var markdownpdf = require("markdown-pdf")
var fs = require("fs")

fs.createReadStream(md_file)
  .pipe(markdownpdf())
  .pipe(fs.createWriteStream(output_file))
</code></pre>

<p>testing</p>

<pre><code class="bash">$ node md2pdf.js
</code></pre>

<h2>Reference</h2>

<ul>
<li><a href="https://www.npmjs.com/package/markdown-pdf">markdown-pdf</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Summary on edX Devkits]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/10/19/summary-on-edx-devkits/"/>
    <updated>2015-10-19T14:13:04+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/10/19/summary-on-edx-devkits</id>
    <content type="html"><![CDATA[<ul>
<li>edX Platform</li>
<li>edX Analytics</li>
<li>edX Certificates</li>
<li>edX eCommerce</li>
<li>edX Mobiles</li>
<li>edX Ansible</li>
<li>Devkits</li>
</ul>


<h2>1. edX Platform</h2>

<p>sub-projects</p>

<ul>
<li>edx-platform</li>
<li>forum / cs_comments_service</li>
<li>hipchat</li>
<li>ora</li>
<li>xblock</li>
</ul>


<p>toolkits</p>

<ul>
<li>backend: Python/Django, Ruby</li>
<li>frontend: Node.js</li>
</ul>


<p>techniques</p>

<ul>
<li>OAuth2.0</li>
<li>RESTful API</li>
<li>ElasticSearch</li>
</ul>


<h2>2. edX Analytics</h2>

<p>sub-projects</p>

<ul>
<li>edx-analytics-pipeline</li>
<li>edx-analytics-data-api</li>
<li>edx-analytics-data-api-client</li>
<li>edx-analytics-dashboard</li>
</ul>


<p>toolkits:</p>

<ul>
<li>backend: Python/Django</li>
<li>frontend: Node.js</li>
</ul>


<p>techniques</p>

<ul>
<li>Hadoop</li>
<li>HDFS</li>
<li>MapReduce / Yarn</li>
<li>Hive</li>
<li>Sqoop</li>
<li>Python/Luigi</li>
</ul>


<h2>3. edX Certificates</h2>

<p>sub-projects</p>

<ul>
<li>edx-certs</li>
<li>xqueue</li>
<li>xqwatcher</li>
<li>xqwatcher-client</li>
</ul>


<p>toolkits</p>

<ul>
<li>backend: Python/Django</li>
<li>frontend: Node.js</li>
</ul>


<p>techniques</p>

<ul>
<li>RabbitMQ</li>
</ul>


<h2>4. edX eCommerce</h2>

<h2>5. edX Mobiles</h2>

<ul>
<li>ios</li>
<li>android</li>
</ul>


<h2>6. edX Ansible</h2>

<ul>
<li>ansible</li>
<li>openstack / aws</li>
</ul>


<h2>Devkits</h2>

<ul>
<li>IDE: PyCharm</li>
<li>DBs: MySQL, MongoDB</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup the Devstack for edX Alton]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/10/18/setup-the-devstack-for-edx-alton/"/>
    <updated>2015-10-18T16:24:54+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/10/18/setup-the-devstack-for-edx-alton</id>
    <content type="html"><![CDATA[<h2>Prequisitions</h2>

<ul>
<li>Ubuntu 14.04</li>
<li>Docker</li>
<li>Git</li>
</ul>


<h2>1. Installation</h2>

<pre><code class="bash">$ cd /path/to/project
$ git clone https://github.com/edx/alton.git
$ cd althon
$ sudo docker build -t alton .
</code></pre>

<p>Once done, check the image with <code>docker images</code></p>

<pre><code class="bash">vagrant@vagrant-ubuntu-trusty-64:/tmp/alton$ sudo docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
alton               latest              367fc778d527        29 seconds ago      1.084 GB
python              2.7.7               a87a2288ce78        15 months ago       1.043 GB
</code></pre>

<h2>References</h2>

<ul>
<li><a href="https://github.com/edx/alton">alton</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Docker Key Concepts]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/10/18/docker-key-concepts/"/>
    <updated>2015-10-18T14:43:07+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/10/18/docker-key-concepts</id>
    <content type="html"><![CDATA[<h2>1. Docker Host and Docker Client</h2>

<h3>1.1. Linux</h3>

<p><img src="https://docs.docker.com/installation/images/linux_docker_host.svg" /></p>

<p>In a Docker installation on Linux, your physical machine is both the localhost and the Docker host.</p>

<ul>
<li>networking, (localhost) your computer, (docker host) the computer which the containers run</li>
<li>(localhost) runs docker client, docker daemon, any containers</li>
<li>(port) docker containers using standard <code>localhost</code> addressing such as <code>localhost:8000</code> or <code>0.0.0.0:8376</code></li>
</ul>


<h3>1.2. OS X</h3>

<p><img src="https://docs.docker.com/installation/images/mac_docker_host.svg" /></p>

<p>In an OS X installation, the docker daemon is running inside a Linux VM called i<code>default</code>.
The <code>default</code> is a lightweight Linux VM made specifically to run the Docker daemon on Mac OS X.
The VM runs completely from RAM, is a small ~24MB download, and boots in approximately 5s.</p>

<p>In OS X, the Docker host address is the address of the Linux VM.</p>

<ul>
<li>OS X &lt;=> VM &lt;=> containers</li>
<li>When you start the VM with docker-machine it is assigned an IP address.</li>
<li>When you start a container, the ports on a container map to ports on the VM.</li>
</ul>


<h2>Docker vs Vagrant/VirtualBox + Git</h2>

<table>
<thead>
<tr>
<th style="text-align:left;"> Docker     </th>
<th style="text-align:left;"> Vagrant         </th>
<th style="text-align:left;"> VirtualBox  </th>
<th style="text-align:left;"> Git   </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> Dockerfile </td>
<td style="text-align:left;"> Vagrantfile     </td>
<td style="text-align:left;">             </td>
<td style="text-align:left;">       </td>
</tr>
<tr>
<td style="text-align:left;"> image      </td>
<td style="text-align:left;"> box             </td>
<td style="text-align:left;">             </td>
<td style="text-align:left;">       </td>
</tr>
<tr>
<td style="text-align:left;"> container  </td>
<td style="text-align:left;">                 </td>
<td style="text-align:left;">             </td>
<td style="text-align:left;">       </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Generating TOC With Javascript for Octopress]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/10/17/generating-toc-with-javascript-for-octopress/"/>
    <updated>2015-10-17T12:37:04+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/10/17/generating-toc-with-javascript-for-octopress</id>
    <content type="html"><![CDATA[<p>Features:</p>

<ul>
<li>genearting a table of contents in a article</li>
<li>user can set toc if true/false</li>
</ul>


<p>Devkits:</p>

<ul>
<li>javascript</li>
<li>html</li>
<li>sass</li>
</ul>


<h2>1. HTML</h2>

<h3>1.1. toc_generator.html</h3>

<p>octopress/source/_includes/toc_generator.html</p>

<pre><code class="html toc_generator.html">    {\% if index %\}
      {\% comment %\}
        No table of contents on the index page.
      {\% endcomment %\}

    {\% elsif page.toc == true %\}
      &lt;script type="text/javascript"&gt;
      jQuery(document).ready(function() {
        // Put a TOC right before the entry content.
        generateTOC('.entry-content', 'Table of Contents');
      });
      &lt;/script&gt;
    {\% endif %\}
</code></pre>

<h3>1.2. article.html</h3>

<p>Include <code>toc_generator.html</code> at the end of <code>article.html</code></p>

<pre><code class="html article.html">...

{\% include toc_generator.html %\}
</code></pre>

<h2>2. Javascript</h2>

<h3>2.1. update the libraries</h3>

<p>octopress/source/_includes/head.html</p>

<p>```javascript head.html</p>

<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.9.1.min.js"></script>


<script src="{\{ root_url }\}/javascripts/jquery.tableofcontents.min.js" type="text/javascript"></script>


<script src="{\{ root_url }\}/javascripts/toc_generator.js" type="text/javascript"></script>


<pre><code>
### 2.2. jquery.tableofcontents.min.js

Go to [TOC jQuery Plugin](http://fuelyourcoding.com/scripts/toc/), 
download the library, and copy `jquery.tableofcontents.min.js` to `octopress/source/javascript/`.


### 2.3. toc_generator.js

octopress/source/javascript/toc_generator.js
</code></pre>

<pre><code>function generateTOC(insertBefore, heading) {
  var container = jQuery("&lt;div id='tocBlock'&gt;&lt;/div&gt;");
  var div = jQuery("&lt;ul id='toc'&gt;&lt;/ul&gt;");
  var content = $(insertBefore).first();

  if (heading != undefined &amp;&amp; heading != null) {
    container.append('&lt;span class="tocHeading"&gt;' + heading + '&lt;/span&gt;');
  }

  div.tableOfContents(content);
  container.append(div);
  container.insertBefore(insertBefore);
}
</code></pre>

<pre><code>
## 3. SASS

### 3.1. _utilities.scss

octopress/sass/base/_utilities.scss
</code></pre>

<pre><code>@mixin rounded-border($radius: 10px) {
    border-radius: $radius;
    -moz-border-radius: $radius;
   padding: $radius;
}

@mixin centered($width: auto) {
    width: $width !important;
    margin-left: auto !important;
    margin-right: auto !important;
}

@mixin drop-shadow-right-bottom($width: 5px, $color: #999) {
    box-shadow: $width $width $width $color;
    -moz-box-shadow: $width $width $width $color;
    -webkit-box-shadow: $width $width $width $color;
}
</code></pre>

<pre><code>
### 3.2. _toc_generator.scss

ocotpress/sass/partials/_toc_generator.scss
</code></pre>

<pre><code>bg: #e8e8e8;
$toc-incr: 5px;

div#tocBlock {
    @include drop-shadow-right-bottom(5px, #999);
    @include rounded-border(10px);
    float: right;
    font-size: 10pt;
    width: 300px;
    padding-left: 20px;
    padding-right: 10px;
    padding-top: 10px;
    padding-bottom: 0px;

    background: $toc-bg;
    border: solid 1px #ccc;
    margin: 0 0 10px 15px;

    .tocHeading {
    font-weight: bold;
    font-size: 125%;
    }

    ul { list-style: none; }

    #toc {
    background: $toc-bg;
    ul {
        li {
        margin-left: $toc-incr !important;
        padding: 0 !important;
        list-style: disc;
        }
    }
    }
}
</code></pre>

<pre><code>
### 3.3. _partials.scss

octopress/sass/_particials.scss
</code></pre>

<pre><code>@import "partials/toc_generator";
</code></pre>

<pre><code>
## 4. Rakefile

`octopress/Rakefile`: update the head variable for `new_post_tech`, `new_post_art` and `new_post_life`.
</code></pre>

<pre><code>post.puts "toc: false"
</code></pre>

<p>```</p>

<h2>5. Testing</h2>

<p><code>rake new_post_tech['post_name']</code>, check the header if <code>toc: false</code> exists.</p>

<p>If <code>toc: true</code>, the table of contents will be generated, if <code>toc:false</code>, no table of contents.</p>

<h2>Reference</h2>

<ul>
<li><a href="http://brizzled.clapper.org/blog/2012/02/04/generating-a-table-of-contents-in-octopress/">Generating a table of contents in Octopress</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
