<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | Kelly Chan]]></title>
  <link href="http://k.arttechresearch.com/categories/tech/atom.xml" rel="self"/>
  <link href="http://k.arttechresearch.com/"/>
  <updated>2015-10-14T20:27:39+08:00</updated>
  <id>http://k.arttechresearch.com/</id>
  <author>
    <name><![CDATA[Kelly Chan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using MathJax With Octopress]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/10/13/using-mathjax-with-octopress/"/>
    <updated>2015-10-13T10:26:29+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/10/13/using-mathjax-with-octopress</id>
    <content type="html"><![CDATA[<h2>1. Adding MathJax</h2>

<pre><code class="bash">$ vim octopress/_includes/mathjax.html
</code></pre>

<p>mathjax.html</p>

<p>```html</p>

<!-- MathJax -->


<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    tex2jax: {
      inlineMath: [ ['$','$'], ["\\(","\\)"] ],
      processEscapes: true
    }
  });
</script>


<script type="text/x-mathjax-config">
    MathJax.Hub.Config({
      tex2jax: {
        skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
      }
    });
</script>


<script type="text/x-mathjax-config">
    MathJax.Hub.Queue(function() {
        var all = MathJax.Hub.getAllJax(), i;
        for(i=0; i < all.length; i += 1) {
            all[i].SourceElement().parentNode.className += ' has-jax';
        }
    });
</script>


<script type="text/javascript"
   src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>


<pre><code>
## 2. Including MathJax in head.html
</code></pre>

<p>$ vim octopress/_includes/head.html
```</p>

<p>head.html</p>

<pre><code class="html">{\% include mathjax.html %\}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Openstack Devstack]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/10/03/installing-openstack-devstack/"/>
    <updated>2015-10-03T12:33:38+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/10/03/installing-openstack-devstack</id>
    <content type="html"><![CDATA[<h3>Prequisition</h3>

<p>Softwares:</p>

<p>&ndash; (VM) <a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox 5.0</a><br/>
&ndash; (OS) <a href="http://www.ubuntu.com/download/server">Ubuntu Server 14.04.3</a><br/>
&ndash; (SW) <a href="https://github.com/openstack-dev/devstack">Openstack</a></p>

<p>Steps:</p>

<p>&ndash; Installing VirtualBox<br/>
&ndash; Installing Ubuntu 14.04.03<br/>
&ndash; Installing Openstack<br/>
&ndash; Testing</p>

<h3>1. Installing VirtualBox</h3>

<p>Go to <a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a>, download and install on the local machine.</p>

<h3>2. Installing Ubuntu</h3>

<p>Go to <a href="http://www.ubuntu.com/download/server">Ubuntu</a> page, download the ubuntu server 14.04.03 (NOTE: Preferring 14.04.03) iso image.</p>

<p>Once done, open VirtualBox, create a vm for Ubuntu server. The vm settings are:<br/>
&ndash; memory: 2GB<br/>
&ndash; storage: 100GB<br/>
&ndash; <strong>network: briaged adapter (IMPORTANT), promiscuous mode with ALLOW ALL</strong></p>

<p>Then, attach Ubuntu server iso file to the drive, double click the vm, the system will be jumped to the installation guide.</p>

<p>When installing Ubuntu, the installation mode should be:<br/>
&ndash; <strong>multi-server with MAAS (IMPORTANT)</strong></p>

<p>Once done, restart and config the system:</p>

<pre><code class="bash config system">    $ sudo apt-get update &amp;&amp; upgrade
    $ sudo apt-get install git
    $ git config --global user.name "username"
    $ git config --global user.email "user@example.com"
</code></pre>

<h3>3. Installing Openstack</h3>

<p>Go to <a href="https://github.com/openstack-dev/devstack">Openstack</a>, download the repo and install:</p>

<pre><code class="bash installing openstack">    # create a project folder and download the repo
    $ cd /
    $ sudo mkdir openstack
    $ cd openstack
    $ git clone https://github.com/openstack-dev/devstack.git
    $ cd devstack
    $ git checkout stable/juno

    # config user
    $ sudo ./tools/create-stack-user.sh
    $ sudo chown -R stack:stack /openstack

    # install
    $ ./stack.sh
</code></pre>

<p>Trouble Shooting</p>

<p><strong>(1)</strong> If something wrong, try <code>./unstack.sh</code> and then <code>./clean.sh</code>, restart and then <code>./stack.sh</code> again.</p>

<p><strong>(2)</strong> If re-run <code>./stack.sh</code> and the python packages flag some issue, try to delete <code>/opt/stack/xxx</code>, and re-run <code>./stack.sh</code>.</p>

<h3>4. Testing</h3>

<p>Open a browser, enter the dashboard with <code>http://ip_address</code>, login with <code>admin/password</code> (NOTE: password was set at previous).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up MySQL on Ubuntu]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/05/01/setting-up-mysql-on-ubuntu/"/>
    <updated>2015-05-01T10:50:00+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/05/01/setting-up-mysql-on-ubuntu</id>
    <content type="html"><![CDATA[<p>installation</p>

<pre><code class="bash">$ sudo apt-get install mysql-server libmysql-java
</code></pre>

<p>configuration</p>

<pre><code class="bash">$ sudo nano /etc/mysql/my.cnf

# comment bind-address
# bind-address = 127.0.0.1
</code></pre>

<p>configurating database</p>

<pre><code class="bash">$ sudo service mysql restart
$ mysql -uroot -p

$ create database analytics DEFAULT CHARACTER SET utf8;
$ grant all on analytics.* TO 'insight'@'%' IDENTIFIED BY 'analytics_password';
$ grant all on analytics.* TO 'insight'@'202.120.83.105' IDENTIFIED BY 'analytics_password';
$ grant all on analytics.* TO 'insight'@'202.120.83.101' IDENTIFIED BY 'analytics_password';

$ GRANT ALL ON *.* TO insight@'localhost'  IDENTIFIED BY 'insight' WITH GRANT OPTION;

$ exit;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Emacs on Ubuntu]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/04/26/installing-emacs-on-ubuntu/"/>
    <updated>2015-04-26T23:48:00+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/04/26/installing-emacs-on-ubuntu</id>
    <content type="html"><![CDATA[<h2>Prequistions</h2>

<pre><code class="bash">$ sudo apt-get install ipython
$ sudo apt-get install texinfo
$ sudo apt-get install automake autoconf
$ sudo apt-get install texlive
$ sudo apt-get install cvs
$ sudo apt-get install mercurial
</code></pre>

<h2>1. Installation</h2>

<pre><code class="bash">$ sudo add-apt-repository ppa:cassou/emacs
$ sudo apt-get update

$ # stable version
$ sudo apt-get install emacs24 emacs24-el emacs24-common-non-dfsg

$ # latest version
$ sudo apt-get install emacs-snapshot-el emacs-snapshot-gtk emacs-snapshot
</code></pre>

<h2>2. Configuration</h2>

<pre><code class="bash">$ git clone https://github.com/jhamrick/emacs.git

$ cd emacs
$ sudo /path/to/emacs/bootstrap.sh

$ # open the emacs, it will automatically install the plugins    
$ emacs
</code></pre>

<h2>3. Trouble Shooting</h2>

<h3>3.1. error: makeinfo: command not found</h3>

<p>error message</p>

<pre><code class="bash">$ error: makeinfo: command not found
</code></pre>

<p>solution</p>

<pre><code class="bash">$ sudo apt-get install texinfo
</code></pre>

<h3>3.2. error: autogen.sh: autoconf: not found</h3>

<p>error message</p>

<pre><code class="bash">error: autogen.sh: autoconf: not found
</code></pre>

<p>solution</p>

<pre><code class="bash">$ sudo apt-get install automake autoconf
</code></pre>

<h3>3.3. error: pdftex: command not found</h3>

<p>error message</p>

<pre><code class="bash">error: pdftex: command not found
</code></pre>

<p>solution</p>

<pre><code class="bash">$ sudo apt-get install texlive
</code></pre>

<h3>3.4. error: Error (el-get): while installing matlab-mode: The command named ‘cvs’ can not be found with `executable-find’</h3>

<p>error message</p>

<pre><code class="bash">error: Error (el-get): while installing matlab-mode: The command named ‘cvs’ can not be found with `executable-find’
</code></pre>

<p>solution</p>

<pre><code class="bash">$ sudo apt-get install cvs
</code></pre>

<h3>3.5. error: Error (el-get): while installing pydoc-info: The command named ‘hg’ can not be found with `executable-find’</h3>

<p>error message</p>

<pre><code class="bash">error: Error (el-get): while installing pydoc-info: The command named ‘hg’ can not be found with `executable-find’
</code></pre>

<p>solution</p>

<pre><code class="bash">$ sudo apt-get install mercurial
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automatically Running Shell Scripts on Ubuntu]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/04/25/automatically-running-shell-scripts-on-ubuntu/"/>
    <updated>2015-04-25T14:17:14+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/04/25/automatically-running-shell-scripts-on-ubuntu</id>
    <content type="html"><![CDATA[<p>configurating script</p>

<pre><code class="bash">$ cd /path/to/folder
$ nano file_name
# save and exit

$ sudo chown user:group file_name
$ sudo chmod u+x file_name
</code></pre>

<p>editting shell script</p>

<pre><code class="bash">#!/bin/bash
...
...
</code></pre>

<p>configurating env path</p>

<pre><code class="bash">$ nano ~/.bashrc

# custom bin
# export PATH=$PATH:/path/to/bin

$ source ~/.bashrc
</code></pre>
]]></content>
  </entry>
  
</feed>
