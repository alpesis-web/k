<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[K]]></title>
  <link href="http://k.arttechresearch.com/atom.xml" rel="self"/>
  <link href="http://k.arttechresearch.com/"/>
  <updated>2016-03-28T16:21:14+08:00</updated>
  <id>http://k.arttechresearch.com/</id>
  <author>
    <name><![CDATA[K]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MongoDB Sharding]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/24/mongodb-sharding/"/>
    <updated>2016-03-24T10:59:40+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/24/mongodb-sharding</id>
    <content type="html"><![CDATA[<h2>Definitions</h2>

<p>Sharding: sharding is a method for storing data across multiple machines.</p>

<p>Purpose of sharding</p>

<ul>
<li>high query rate -> CPU capacity of the server</li>
<li>larger data sets -> storage capacity of a single machine -> RAM stress, I/O capacity of disk drives</li>
</ul>


<p>Vertical scaling V.S. Sharding</p>

<ul>
<li>vertical scaling: adds more CPU and storage resources to increase capacity. Large numbers of CPUs and large amount of RAM, expensive systems</li>
<li>horizontal scaling (sharding): divides the data set and distributes the data over multiple servers or shards. Each shard is an independent database, and collectively, the shards make up a single logical database.</li>
</ul>


<p>Advantages of sharding:</p>

<ul>
<li>sharding reduces the number of operations each shard handles. Each shard processes fewer operations as the cluster grows. As a result, a cluster can increase capacity and throughput horizontally. For example, to insert data, the application only needs to access the shard responsible for that record.</li>
<li>sharding reduces the amount of data that each server needs to store. Each shard stores less data as the cluster grows. For example, if a database has a 1 terabyte data set, and there are 4 shards, then each shard might hold only 256 GB of data. If there are 40 shards, then each shard might hold only 25GB of data.</li>
</ul>


<p><img src="https://docs.mongodb.org/manual/_images/sharded-collection.png" /></p>

<p>image source: MongoDB official site</p>

<h2>Concepts</h2>

<h3>Shared Clusters</h3>

<ul>
<li>Shards: store the data. To provide high availability and data consistency, in a production sharded cluster, each shard is a replica set.</li>
<li>Query Routers (mongos instances): interface with client applications and direct operations to the appropriate shard or shards. A client sends requests to a mongos, which then routes the operations to the shards and returns the results to the clients. A sharded cluster can contain more than one mongos to divide the client request load, and most sharded clusters have more than one mongos for this reason.</li>
<li>Config Servers: store the cluster&rsquo;s metadata. This data contains a mapping of the clusters&rsquo;s data set to the shards. The query router uses this metadata to target operations to specific shards.</li>
</ul>


<p><img src="https://docs.mongodb.org/manual/_images/sharded-cluster.png" /></p>

<p>image source: MongoDB official site</p>

<h3>Shards: Data Partitioning</h3>

<p>MongoDB distributes data, or shards, at the collection level. Sharding partitions a collection&rsquo;s data by the shard key.</p>

<ul>
<li>Shard key: A shard key is either an indexed field or an indexed compound field that exists in every document in the collection. {key: value} &ndash;> chunks (ranged/hash based partitioning)</li>
<li>ranged based sharding: documents with &ldquo;close&rdquo; shard key values are likely to be in the same chuck, and therefore on the same shard. The query router can easily determine which chunks overlap that range and route the query to only those shards that contain these chunks.</li>
<li>hash based sharding: two documents with &ldquo;close&rdquo; shard key values are unlikely to be part of the same chuck. This ensures a more random distribution of a collection in the cluster. Hash key values results in random distribution of data across chunks and therefore shards. But random distribution makes it more likely that a range query on the shard key will not be able to target a few shards but would more likely query every shard in order to return a result.</li>
</ul>


<p><img src="https://docs.mongodb.org/manual/_images/sharding-range-based.png" /></p>

<p>image source: MongoDB official site</p>

<p><img src="https://docs.mongodb.org/manual/_images/sharding-hash-based.png" /></p>

<p>image source: MongoDB official site</p>

<h3>Config Servers: Balanced Data Distribution</h3>

<ul>
<li>splitting: splitting is a background process that keeps chunks from growing too large. When a chunk grows beyond a specified chunk size, MongoDB splits the chunk in half. Inserts and updates triggers splits. Splits are an efficient meta-data change. To create splits, MongoDB does not migrate any data or affect eh shards.</li>
<li>balancer: the balancer is a background process that manages chunk migrations. The balancer can run from any of the mongos instances in a cluster. For example, if collection users has 100 chunks on shard 1 and 50 chunks on shard 2, the balancer will migrate chunks from shard 1 to shard 2 until the collection achieves balance.</li>
</ul>


<p><img src="https://docs.mongodb.org/manual/_images/sharding-splitting.png" /></p>

<p>image source: MongoDB official site</p>

<p><img src="https://docs.mongodb.org/manual/_images/sharding-migrating.png" /></p>

<p>image source: MongoDB official site</p>

<h3>Query Routers: Query Routing</h3>

<p>Routing process</p>

<ul>
<li>(mongos -> shards)</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>shard key:
</span><span class='line'>
</span><span class='line'>{ zipcode: 1, u_id: 1, c_date: 1 }
</span><span class='line'>
</span><span class='line'>targeting:
</span><span class='line'>
</span><span class='line'>{ zipcode: 1 }
</span><span class='line'>{ zipcode: 1, u_id: 1 }
</span><span class='line'>{ zipcode: 1, u_id: 1, c_date: 1 }
</span></code></pre></td></tr></table></div></figure>


<p>detect connection</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.isMaster()
</span><span class='line'>
</span><span class='line'>{
</span><span class='line'>   "ismaster" : true,
</span><span class='line'>   "msg" : "isdbgrid",
</span><span class='line'>   "maxBsonObjectSize" : 16777216,
</span><span class='line'>   "ok" : 1
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>broadcast operations and targeted operations</p>

<p><img src="https://docs.mongodb.org/manual/_images/sharded-cluster-scatter-gather-query.png" /></p>

<p>image source: MongoDB official site</p>

<p><img src="https://docs.mongodb.org/manual/_images/sharded-cluster-targeted-query.png" /></p>

<p>image source: MongoDB official site</p>

<p>shared and non-shared data</p>

<p><img src="https://docs.mongodb.org/manual/_images/sharded-cluster-mixed.png" /></p>

<p>image source: MongoDB official site</p>

<h2>Tutorials</h2>

<h3>Deployment</h3>

<h3>Maintenance</h3>

<h3>Management</h3>

<h2>Reference</h2>

<ul>
<li><a href="https://docs.mongodb.org/manual/core/sharding-introduction/">Sharding</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB Replication]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/24/mongodb-replication/"/>
    <updated>2016-03-24T10:59:23+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/24/mongodb-replication</id>
    <content type="html"><![CDATA[<h2>Definitions</h2>

<p>Replication is the process of synchronizing data across multiple servers.</p>

<p>Purposes of replication</p>

<ul>
<li>provides redundancy and increases data availability. With multiple copies of data on different database servers, replication provides a level of fault tolerance against the loss of a signle database server.</li>
<li>provides increased read capacity as clients can send read operations to different servers. Maintaining copies of data in different data centers can increase data locality and availability for distributed applications.</li>
<li>dedicated purposes, such as disaster recovery, reporting, or backup.</li>
</ul>


<h2>Concepts</h2>

<h3>Replica Set: Members</h3>

<h3>Replica Set: Deployment Architectures</h3>

<h3>Replica Set: High Availability</h3>

<h3>Replica Set: Read and Write Senmantics</h3>

<p><img src="https://docs.mongodb.org/manual/_images/crud-write-concern-w2.png" /></p>

<p>image source: MongoDB official site</p>

<p><img src="https://docs.mongodb.org/manual/_images/replica-set-read-preference.png" /></p>

<p>image source: MongoDB official site</p>

<h3>Replication Processes</h3>

<h3>Master Slave Replication</h3>

<h2>Tutorials</h2>

<h2>Reference</h2>

<ul>
<li><a href="https://docs.mongodb.org/manual/core/replication-introduction/">Replication</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB Security]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/24/mongodb-security/"/>
    <updated>2016-03-24T10:59:17+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/24/mongodb-security</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB Storage]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/24/mongodb-storage/"/>
    <updated>2016-03-24T10:59:08+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/24/mongodb-storage</id>
    <content type="html"><![CDATA[<h2>Definitions</h2>

<ul>
<li>storage engine: the primary component of MongoDB responsible for managing data.</li>
<li>journal: a log that helps the database recover in the event of a hard shutdown.</li>
<li>GridFS: a versatile storage system that is suited to handling large files, such as those exceeding the 16 MB document size limit.</li>
</ul>


<h2>Concepts</h2>

<h3>Storage Engine</h3>

<ul>
<li>WiredTiger: the default storage engine. It is well-suited for most workloads and is recommended for new deployments. WiredTiger provides a document-level concurrency model, checkpointing, and compression, among other features.</li>
<li>MMAPv1: the original storage engine. It performs well on workloads with high volumes of reads and writes, as well as in-place updates.</li>
<li>In-Memory Storage Engine: rather than storing documents on-disk, it retains them in-memory for more predictable data latencies. This storage engine is in beta.</li>
</ul>


<h3>Journal</h3>

<h3>GridFS</h3>

<h2>Tutorials</h2>

<h2>Reference</h2>

<ul>
<li><a href="https://docs.mongodb.org/manual/storage/">Storage</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB Indexes]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/24/mongodb-indexes/"/>
    <updated>2016-03-24T10:59:00+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/24/mongodb-indexes</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB Administration]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/24/mongodb-administration/"/>
    <updated>2016-03-24T10:58:48+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/24/mongodb-administration</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB Data Model]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/24/mongodb-data-model/"/>
    <updated>2016-03-24T10:58:18+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/24/mongodb-data-model</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB Aggregation]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/24/mongodb-aggregation/"/>
    <updated>2016-03-24T10:58:12+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/24/mongodb-aggregation</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB CRUD]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/24/mongodb-crud/"/>
    <updated>2016-03-24T10:49:19+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/24/mongodb-crud</id>
    <content type="html"><![CDATA[<h2>Definitions</h2>

<ul>
<li>BSON: BSON is a binary representation of JSON with additional type information.</li>
<li>Document (record): a record with {key, value}</li>
<li>Collection (table): a collection is a group of related documents that have a set of shared common indexes.</li>
</ul>


<h3>CRUD</h3>

<h2>Reference</h2>

<ul>
<li><a href="https://docs.mongodb.org/manual/core/crud-introduction/">MongoDB CRUD Operations</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mongo Shell]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/24/mongo-shell/"/>
    <updated>2016-03-24T09:54:30+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/24/mongo-shell</id>
    <content type="html"><![CDATA[<h2>What is Mongo Shell</h2>

<p>The Mongo Shell is an interactive Javascript interface to MongoDB.</p>

<p>How to user Mongo Shell:</p>

<ul>
<li>query and update data</li>
<li>perform administrative operations</li>
</ul>


<h3>Start Shell</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mongo
</span><span class='line'>&gt; show dbs
</span><span class='line'>&gt; use &lt;dbname&gt;
</span><span class='line'>&gt; db.&lt;mycollection&gt;.insert({&lt;key&gt;: &lt;value&gt;});
</span><span class='line'>&gt; db[&lt;mycollection&gt;].find();
</span><span class='line'>&gt; db.getCollection(&lt;mycollection&gt;).find();
</span><span class='line'>&gt; db.&lt;mycollection&gt;.find().pretty();
</span><span class='line'>&gt; quit()</span></code></pre></td></tr></table></div></figure>


<h2>Customizing Mongo Shell</h2>

<ul>
<li>config file: <code>.mongorc.js</code></li>
</ul>


<p>display # of operations</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">cmdCount</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="nx">prompt</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>             <span class="k">return</span> <span class="p">(</span><span class="nx">cmdCount</span><span class="o">++</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;&gt; &quot;</span><span class="p">;</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="o">&gt;</span>
</span><span class='line'><span class="mi">2</span><span class="o">&gt;</span>
</span><span class='line'><span class="mi">3</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>display database and hostname</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">host</span> <span class="o">=</span> <span class="nx">db</span><span class="p">.</span><span class="nx">serverStatus</span><span class="p">().</span><span class="nx">host</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">prompt</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>             <span class="k">return</span> <span class="nx">db</span><span class="o">+</span><span class="s2">&quot;@&quot;</span><span class="o">+</span><span class="nx">host</span><span class="o">+</span><span class="s2">&quot;$ &quot;</span><span class="p">;</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">test</span><span class="err">@</span><span class="nx">myHost1$</span>
</span></code></pre></td></tr></table></div></figure>


<p>display up time and document count</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">prompt</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>           <span class="k">return</span> <span class="s2">&quot;Uptime:&quot;</span><span class="o">+</span><span class="nx">db</span><span class="p">.</span><span class="nx">serverStatus</span><span class="p">().</span><span class="nx">uptime</span><span class="o">+</span><span class="s2">&quot; Documents:&quot;</span><span class="o">+</span><span class="nx">db</span><span class="p">.</span><span class="nx">stats</span><span class="p">().</span><span class="nx">objects</span><span class="o">+</span><span class="s2">&quot; &gt; &quot;</span><span class="p">;</span>
</span><span class='line'>         <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Uptime</span><span class="o">:</span><span class="mi">5897</span> <span class="nx">Documents</span><span class="o">:</span><span class="mi">6</span> <span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>editor and batch size</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># editor</span>
</span><span class='line'><span class="nb">export </span><span class="nv">EDITOR</span><span class="o">=</span>vim
</span><span class='line'>mongo
</span><span class='line'>
</span><span class='line'><span class="c"># batch size</span>
</span><span class='line'>DBQuery.shellBatchSize <span class="o">=</span> 10<span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Shell Help</h2>

<ul>
<li>command line</li>
<li>shell</li>
<li>database</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># command line</span>
</span><span class='line'>&gt; mongo --help
</span><span class='line'>
</span><span class='line'><span class="c"># shell</span>
</span><span class='line'>&gt; <span class="nb">help</span>
</span></code></pre></td></tr></table></div></figure>


<p>database help</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># mongo</span>
</span><span class='line'>&gt; show dbs
</span><span class='line'>&gt; db.help<span class="o">()</span>
</span><span class='line'>&gt; db.updateUser
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># collections</span>
</span><span class='line'>&gt; show collections
</span><span class='line'>&gt; db.collection.help<span class="o">()</span>
</span><span class='line'>&gt; db.collection.save
</span><span class='line'>
</span><span class='line'><span class="c"># cursor</span>
</span><span class='line'>&gt; db.collection.find<span class="o">()</span>.help<span class="o">()</span>
</span><span class='line'>&gt; db.collection.find<span class="o">()</span>.toArray
</span><span class='line'>
</span><span class='line'><span class="c"># wrapper object</span>
</span><span class='line'>&gt; <span class="nb">help </span>misc
</span></code></pre></td></tr></table></div></figure>


<h2>Scripting</h2>

<p>sripts: <code>*.js</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">new</span> <span class="nx">Mongo</span><span class="p">()</span>
</span><span class='line'><span class="k">new</span> <span class="nx">Mongo</span><span class="p">(</span><span class="o">&lt;</span><span class="nx">host</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'><span class="k">new</span> <span class="nx">Mongo</span><span class="p">(</span><span class="o">&lt;</span><span class="nx">host</span><span class="o">:</span><span class="nx">port</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nx">conn</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Mongo</span><span class="p">();</span>
</span><span class='line'><span class="nx">db</span> <span class="o">=</span> <span class="nx">conn</span><span class="p">.</span><span class="nx">getDB</span><span class="p">(</span><span class="s2">&quot;myDatabase&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">db</span> <span class="o">=</span> <span class="nx">connect</span><span class="p">(</span><span class="s2">&quot;localhost:27020/myDatabase&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">cursor</span> <span class="o">=</span> <span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">find</span><span class="p">();</span>
</span><span class='line'><span class="k">while</span> <span class="p">(</span> <span class="nx">cursor</span><span class="p">.</span><span class="nx">hasNext</span><span class="p">()</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>   <span class="nx">printjson</span><span class="p">(</span> <span class="nx">cursor</span><span class="p">.</span><span class="nx">next</span><span class="p">()</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>how to run</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; mongo <span class="nb">test</span> --eval <span class="s2">&quot;printjson(db.getCollectionNames())&quot;</span>
</span><span class='line'>&gt; mongo localhost:27017/test myjsfile.js
</span><span class='line'>&gt; load<span class="o">(</span><span class="s2">&quot;myjstest.js&quot;</span><span class="o">)</span>
</span><span class='line'>&gt; load<span class="o">(</span><span class="s2">&quot;scripts/myjstest.js&quot;</span><span class="o">)</span>
</span><span class='line'>&gt; load<span class="o">(</span><span class="s2">&quot;/data/db/scripts/myjstest.js&quot;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Data Types</h2>

<p>Date</p>

<ul>
<li>Date() method which returns the current date as a string.</li>
<li>new Date() constructor which returns a Date object using the ISODate() wrapper.</li>
<li>ISODate() constructor which returns a Date object using the ISODate() wrapper.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">myDateString</span> <span class="o">=</span> <span class="nb">Date</span><span class="p">();</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">myDateString</span>
</span><span class='line'><span class="nx">Wed</span> <span class="nx">Dec</span> <span class="mi">19</span> <span class="mi">2012</span> <span class="mi">01</span><span class="o">:</span><span class="mi">03</span><span class="o">:</span><span class="mi">25</span> <span class="nx">GMT</span><span class="o">-</span><span class="mi">0500</span> <span class="p">(</span><span class="nx">EST</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> <span class="k">typeof</span> <span class="nx">myDateString</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">myDate</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
</span><span class='line'><span class="o">&gt;</span> <span class="kd">var</span> <span class="nx">myDateInitUsingISODateWrapper</span> <span class="o">=</span> <span class="nx">ISODate</span><span class="p">();</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">myDate</span>
</span><span class='line'><span class="nx">ISODate</span><span class="p">(</span><span class="s2">&quot;2012-12-19T06:01:17.171Z&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">myDate</span> <span class="k">instanceof</span> <span class="nb">Date</span>
</span><span class='line'><span class="o">&gt;</span> <span class="nx">myDateInitUsingISODateWrapper</span> <span class="k">instanceof</span> <span class="nb">Date</span>
</span></code></pre></td></tr></table></div></figure>


<p>ObjectId</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="k">new</span> <span class="nx">ObjectId</span>
</span></code></pre></td></tr></table></div></figure>


<p>NumberLong</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">NumberLong</span><span class="p">(</span><span class="s2">&quot;2090845886852&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">insert</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span> <span class="nx">calc</span><span class="o">:</span> <span class="nx">NumberLong</span><span class="p">(</span><span class="s2">&quot;2090845886852&quot;</span><span class="p">)</span> <span class="p">}</span> <span class="p">)</span>
</span><span class='line'><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">10</span> <span class="p">},</span>
</span><span class='line'>                      <span class="p">{</span> <span class="nx">$set</span><span class="o">:</span>  <span class="p">{</span> <span class="nx">calc</span><span class="o">:</span> <span class="nx">NumberLong</span><span class="p">(</span><span class="s2">&quot;2555555000000&quot;</span><span class="p">)</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</span><span class='line'><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">10</span> <span class="p">},</span>
</span><span class='line'>                      <span class="p">{</span> <span class="nx">$inc</span><span class="o">:</span> <span class="p">{</span> <span class="nx">calc</span><span class="o">:</span> <span class="nx">NumberLong</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span> <span class="p">}</span> <span class="p">}</span> <span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nx">db</span><span class="p">.</span><span class="nx">collection</span><span class="p">.</span><span class="nx">findOne</span><span class="p">(</span> <span class="p">{</span> <span class="nx">_id</span><span class="o">:</span> <span class="mi">10</span> <span class="p">}</span> <span class="p">)</span>
</span><span class='line'><span class="p">{</span> <span class="s2">&quot;_id&quot;</span> <span class="o">:</span> <span class="mi">10</span><span class="p">,</span> <span class="s2">&quot;calc&quot;</span> <span class="o">:</span> <span class="nx">NumberLong</span><span class="p">(</span><span class="s2">&quot;2555555000005&quot;</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>typeof</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">mydoc</span><span class="p">.</span><span class="nx">_id</span> <span class="k">instanceof</span> <span class="nx">ObjectId</span>
</span><span class='line'><span class="k">typeof</span> <span class="nx">mydoc</span><span class="p">.</span><span class="nx">_id</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Reference</h2>

<ul>
<li><a href="https://docs.mongodb.org/manual/mongo/">The Mongo Shell</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Seasons]]></title>
    <link href="http://k.arttechresearch.com/art/2016/03/22/seasons/"/>
    <updated>2016-03-22T22:16:16+08:00</updated>
    <id>http://k.arttechresearch.com/art/2016/03/22/seasons</id>
    <content type="html"><![CDATA[<p><img src="https://s-media-cache-ak0.pinimg.com/originals/53/78/84/53788414461813a74bfe06e12c81571d.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/originals/4f/d1/37/4fd13713eb31f2845ff3271c0f2aae5a.jpg" /></p>

<p>Tool: Autodesk Pixlr</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Data Structure and Algorithms]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/16/data-structure-and-algorithms/"/>
    <updated>2016-03-16T19:28:11+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/16/data-structure-and-algorithms</id>
    <content type="html"><![CDATA[<h2>Graph</h2>

<h3>Data Structures</h3>

<h3>Algorithms</h3>

<h2>Tree</h2>

<h3>Data Structures</h3>

<h3>Algorithms</h3>

<h2>Heap</h2>

<h3>Data Structures</h3>

<h3>Algorithms</h3>

<h2>Hash</h2>

<h2>Stack</h2>

<h2>List</h2>

<h2>References</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GIL in Python]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/15/gil-in-python/"/>
    <updated>2016-03-15T17:57:57+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/15/gil-in-python</id>
    <content type="html"><![CDATA[<h2>GIL</h2>

<p>GIL: Global Interpreter Lock</p>

<ul>
<li>it limits thread performance</li>
</ul>


<h2>GIL and Python Threads</h2>

<p>GIL</p>

<ul>
<li>parallel execution is forbidden</li>
<li>there is a &ldquo;global interpreter lock&rdquo;</li>
<li>the GIL ensures that only one thread runs in the interpreter at once</li>
<li>simplified many low-level details (memory management, callouts to C extensions, etc.)</li>
</ul>


<p>Python Threads</p>

<ul>
<li>Python threads are real system threads</li>
<li>fully managed by the host operating system</li>
<li>represent threaded execution of the Python interpreter process (written in C)</li>
</ul>


<p>Thread execution model</p>

<h2>References</h2>

<ul>
<li><a href="http://www.dabeaz.com/python/UnderstandingGIL.pdf">Understanding the Python GIL</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An Array to Balanced Binary Tree]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/15/an-array-to-balanced-binary-tree/"/>
    <updated>2016-03-15T02:02:23+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/15/an-array-to-balanced-binary-tree</id>
    <content type="html"><![CDATA[<p>Write a function to convert a non-decreasing list of ints to a balanced binary tree.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Input</span><span class="p">:</span>  <span class="n">Linked</span> <span class="n">List</span> <span class="mi">1</span><span class="o">-&gt;</span><span class="mi">2</span><span class="o">-&gt;</span><span class="mi">3</span>
</span><span class='line'><span class="n">Output</span><span class="p">:</span> <span class="n">A</span> <span class="n">Balanced</span> <span class="n">BST</span>
</span><span class='line'>     <span class="mi">2</span>
</span><span class='line'>   <span class="o">/</span>  \
</span><span class='line'>  <span class="mi">1</span>    <span class="mi">3</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">Input</span><span class="p">:</span> <span class="n">Linked</span> <span class="n">List</span> <span class="mi">1</span><span class="o">-&gt;</span><span class="mi">2</span><span class="o">-&gt;</span><span class="mi">3</span><span class="o">-&gt;</span><span class="mi">4</span><span class="o">-&gt;</span><span class="mi">5</span><span class="o">-&gt;</span><span class="mi">6</span><span class="o">-&gt;</span><span class="mi">7</span>
</span><span class='line'><span class="n">Output</span><span class="p">:</span> <span class="n">A</span> <span class="n">Balanced</span> <span class="n">BST</span>
</span><span class='line'>        <span class="mi">4</span>
</span><span class='line'>      <span class="o">/</span>   \
</span><span class='line'>     <span class="mi">2</span>     <span class="mi">6</span>
</span><span class='line'>   <span class="o">/</span>  \   <span class="o">/</span> \
</span><span class='line'>  <span class="mi">1</span>   <span class="mi">3</span>  <span class="mi">5</span>   <span class="mi">7</span>
</span><span class='line'>
</span><span class='line'><span class="n">Preorder</span> <span class="n">traversal</span> <span class="n">of</span> <span class="n">constructed</span> <span class="n">BST</span>
</span><span class='line'><span class="mi">4</span> <span class="mi">2</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">6</span> <span class="mi">5</span> <span class="mi">7</span>
</span><span class='line'>
</span><span class='line'><span class="n">Input</span><span class="p">:</span> <span class="n">Linked</span> <span class="n">List</span> <span class="mi">1</span><span class="o">-&gt;</span><span class="mi">2</span><span class="o">-&gt;</span><span class="mi">3</span><span class="o">-&gt;</span><span class="mi">4</span>
</span><span class='line'><span class="n">Output</span><span class="p">:</span> <span class="n">A</span> <span class="n">Balanced</span> <span class="n">BST</span>
</span><span class='line'>      <span class="mi">3</span>
</span><span class='line'>    <span class="o">/</span>  \
</span><span class='line'>   <span class="mi">2</span>    <span class="mi">4</span>
</span><span class='line'> <span class="o">/</span>
</span><span class='line'><span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="n">Input</span><span class="p">:</span>  <span class="n">Linked</span> <span class="n">List</span> <span class="mi">1</span><span class="o">-&gt;</span><span class="mi">2</span><span class="o">-&gt;</span><span class="mi">3</span><span class="o">-&gt;</span><span class="mi">4</span><span class="o">-&gt;</span><span class="mi">5</span><span class="o">-&gt;</span><span class="mi">6</span>
</span><span class='line'><span class="n">Output</span><span class="p">:</span> <span class="n">A</span> <span class="n">Balanced</span> <span class="n">BST</span>
</span><span class='line'>      <span class="mi">4</span>
</span><span class='line'>    <span class="o">/</span>   \
</span><span class='line'>   <span class="mi">2</span>     <span class="mi">6</span>
</span><span class='line'> <span class="o">/</span>  \   <span class="o">/</span>
</span><span class='line'><span class="mi">1</span>   <span class="mi">3</span>  <span class="mi">5</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="p">)</span> <span class="n">Get</span> <span class="n">the</span> <span class="n">Middle</span> <span class="n">of</span> <span class="n">the</span> <span class="n">linked</span> <span class="nb">list</span> <span class="ow">and</span> <span class="n">make</span> <span class="n">it</span> <span class="n">root</span><span class="o">.</span>
</span><span class='line'><span class="mi">2</span><span class="p">)</span> <span class="n">Recursively</span> <span class="n">do</span> <span class="n">same</span> <span class="k">for</span> <span class="n">left</span> <span class="n">half</span> <span class="ow">and</span> <span class="n">right</span> <span class="n">half</span><span class="o">.</span>
</span><span class='line'>       <span class="n">a</span><span class="p">)</span> <span class="n">Get</span> <span class="n">the</span> <span class="n">middle</span> <span class="n">of</span> <span class="n">left</span> <span class="n">half</span> <span class="ow">and</span> <span class="n">make</span> <span class="n">it</span> <span class="n">left</span> <span class="n">child</span> <span class="n">of</span> <span class="n">the</span> <span class="n">root</span>
</span><span class='line'>          <span class="n">created</span> <span class="ow">in</span> <span class="n">step</span> <span class="mf">1.</span>
</span><span class='line'>       <span class="n">b</span><span class="p">)</span> <span class="n">Get</span> <span class="n">the</span> <span class="n">middle</span> <span class="n">of</span> <span class="n">right</span> <span class="n">half</span> <span class="ow">and</span> <span class="n">make</span> <span class="n">it</span> <span class="n">right</span> <span class="n">child</span> <span class="n">of</span> <span class="n">the</span>
</span><span class='line'>          <span class="n">root</span> <span class="n">created</span> <span class="ow">in</span> <span class="n">step</span> <span class="mf">1.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Coding</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">Node</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="p">):</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">left</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">right</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">data</span> <span class="o">=</span> <span class="n">data</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">list2BST</span><span class="p">(</span><span class="n">num_list</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">end</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">start</span> <span class="o">&gt;</span> <span class="n">end</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">middle</span> <span class="o">=</span> <span class="p">(</span><span class="n">start</span> <span class="o">+</span> <span class="n">end</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span>
</span><span class='line'>    <span class="c">#print start, end, middle</span>
</span><span class='line'>    <span class="n">node</span> <span class="o">=</span> <span class="n">Node</span><span class="p">(</span><span class="n">num_list</span><span class="p">[</span><span class="n">middle</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">node</span><span class="o">.</span><span class="n">left</span> <span class="o">=</span> <span class="n">list2BST</span><span class="p">(</span><span class="n">num_list</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">middle</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">node</span><span class="o">.</span><span class="n">right</span> <span class="o">=</span> <span class="n">list2BST</span><span class="p">(</span><span class="n">num_list</span><span class="p">,</span> <span class="n">middle</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">end</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">node</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">traverse</span><span class="p">(</span><span class="n">node</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">node</span> <span class="o">==</span> <span class="bp">None</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>    <span class="k">print</span> <span class="nb">str</span><span class="p">(</span><span class="n">node</span><span class="o">.</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>    <span class="n">traverse</span><span class="p">(</span><span class="n">node</span><span class="o">.</span><span class="n">left</span><span class="p">)</span>
</span><span class='line'>    <span class="n">traverse</span><span class="p">(</span><span class="n">node</span><span class="o">.</span><span class="n">right</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">num_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">]</span>
</span><span class='line'>    <span class="n">list_len</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">num_list</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">root</span> <span class="o">=</span> <span class="n">list2BST</span><span class="p">(</span><span class="n">num_list</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">list_len</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">traverse</span><span class="p">(</span><span class="n">root</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Time Complexity: O(n)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>  <span class="n">T</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="o">=</span> <span class="mi">2</span><span class="n">T</span><span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="n">C</span>
</span><span class='line'>  <span class="n">T</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="o">--&gt;</span>  <span class="n">Time</span> <span class="n">taken</span> <span class="k">for</span> <span class="n">an</span> <span class="n">array</span> <span class="n">of</span> <span class="n">size</span> <span class="n">n</span>
</span><span class='line'>   <span class="n">C</span>   <span class="o">--&gt;</span>  <span class="n">Constant</span> <span class="p">(</span><span class="n">Finding</span> <span class="n">middle</span> <span class="n">of</span> <span class="n">array</span> <span class="ow">and</span> <span class="n">linking</span> <span class="n">root</span> <span class="n">to</span> <span class="n">left</span>
</span><span class='line'>                      <span class="ow">and</span> <span class="n">right</span> <span class="n">subtrees</span> <span class="n">take</span> <span class="n">constant</span> <span class="n">time</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Cool Features You May Not Know]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/14/python-cool-features-you-may-not-know/"/>
    <updated>2016-03-14T22:22:48+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/14/python-cool-features-you-may-not-know</id>
    <content type="html"><![CDATA[<h2>Lists</h2>

<h3>Reverse</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">num_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">num_list</span><span class="o">.</span><span class="n">reverse</span><span class="p">()</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">num_list</span>
</span><span class='line'><span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Set</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">num_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">set</span><span class="p">(</span><span class="n">num_list</span><span class="p">)</span>
</span><span class='line'><span class="nb">set</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<h3>iter</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">l</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">iter</span><span class="p">(</span><span class="n">l</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">listiterator</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x106caab90</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="p">[</span><span class="n">i</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">iter</span><span class="p">(</span><span class="n">l</span><span class="p">)]</span>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Zip</h3>

<p>This function returns a list of tuples, where the i-th tuple contains the i-th element from each of the argument sequences or iterables.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">x</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">y</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">zip</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>
</span><span class='line'><span class="p">[(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">)]</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">num_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="p">[</span><span class="nb">iter</span><span class="p">(</span><span class="n">num_list</span><span class="p">)]</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="p">[(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">)]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="p">[</span><span class="nb">iter</span><span class="p">(</span><span class="n">num_list</span><span class="p">)]</span> <span class="o">*</span> <span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="p">[(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">)]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="p">[</span><span class="nb">iter</span><span class="p">(</span><span class="n">num_list</span><span class="p">)]</span> <span class="o">*</span> <span class="mi">4</span><span class="p">)</span>
</span><span class='line'><span class="p">[(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">)]</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">make_ngrams</span><span class="p">(</span><span class="n">alist</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
</span><span class='line'><span class="o">...</span>     <span class="k">return</span> <span class="nb">zip</span><span class="p">(</span><span class="o">*</span><span class="p">(</span><span class="n">alist</span><span class="p">[</span><span class="n">i</span><span class="p">:]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="n">n</span><span class="p">)))</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">make_ngrams</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="p">[(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span> <span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">)]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">make_ngrams</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'><span class="p">[(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">)]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Join</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">names</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;John&#39;</span><span class="p">,</span> <span class="s">&#39;Bob&#39;</span><span class="p">,</span> <span class="s">&#39;Alice&#39;</span><span class="p">]</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="s">&#39;+&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">names</span><span class="p">)</span>
</span><span class='line'><span class="s">&#39;John+Bob+Alice&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Next</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">num_list</span> <span class="o">=</span> <span class="p">(</span><span class="n">x</span> <span class="o">**</span> <span class="mi">2</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">num_list</span><span class="p">)</span>
</span><span class='line'><span class="mi">0</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">num_list</span><span class="p">)</span>
</span><span class='line'><span class="mi">1</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">num_list</span><span class="p">)</span>
</span><span class='line'><span class="mi">4</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">num_list</span><span class="p">)</span>
</span><span class='line'><span class="mi">9</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">num_list</span><span class="p">)</span>
</span><span class='line'><span class="mi">16</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">num_list</span><span class="p">)</span>
</span><span class='line'><span class="mi">25</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Unpacking</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">foo</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">):</span>
</span><span class='line'><span class="o">...</span>     <span class="k">print</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">mydict</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;a&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&#39;b&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">&#39;c&#39;</span><span class="p">:</span> <span class="mi">3</span><span class="p">}</span>
</span><span class='line'><span class="n">mylist</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;John&#39;</span><span class="p">,</span> <span class="s">&#39;Bob&#39;</span><span class="p">,</span> <span class="s">&#39;Alice&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">foo</span><span class="p">(</span><span class="o">*</span><span class="n">mydict</span><span class="p">)</span>
</span><span class='line'><span class="n">a</span> <span class="n">c</span> <span class="n">b</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">foo</span><span class="p">(</span><span class="o">**</span><span class="n">mydict</span><span class="p">)</span>
</span><span class='line'><span class="mi">1</span> <span class="mi">2</span> <span class="mi">3</span>
</span><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">foo</span><span class="p">(</span><span class="o">*</span><span class="n">mylist</span><span class="p">)</span>
</span><span class='line'><span class="n">John</span> <span class="n">Bob</span> <span class="n">Alice</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Libraries</h2>

<h3>import this</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">this</span>
</span><span class='line'><span class="n">The</span> <span class="n">Zen</span> <span class="n">of</span> <span class="n">Python</span><span class="p">,</span> <span class="n">by</span> <span class="n">Tim</span> <span class="n">Peters</span>
</span><span class='line'>
</span><span class='line'><span class="n">Beautiful</span> <span class="ow">is</span> <span class="n">better</span> <span class="n">than</span> <span class="n">ugly</span><span class="o">.</span>
</span><span class='line'><span class="n">Explicit</span> <span class="ow">is</span> <span class="n">better</span> <span class="n">than</span> <span class="n">implicit</span><span class="o">.</span>
</span><span class='line'><span class="n">Simple</span> <span class="ow">is</span> <span class="n">better</span> <span class="n">than</span> <span class="nb">complex</span><span class="o">.</span>
</span><span class='line'><span class="n">Complex</span> <span class="ow">is</span> <span class="n">better</span> <span class="n">than</span> <span class="n">complicated</span><span class="o">.</span>
</span><span class='line'><span class="n">Flat</span> <span class="ow">is</span> <span class="n">better</span> <span class="n">than</span> <span class="n">nested</span><span class="o">.</span>
</span><span class='line'><span class="n">Sparse</span> <span class="ow">is</span> <span class="n">better</span> <span class="n">than</span> <span class="n">dense</span><span class="o">.</span>
</span><span class='line'><span class="n">Readability</span> <span class="n">counts</span><span class="o">.</span>
</span><span class='line'><span class="n">Special</span> <span class="n">cases</span> <span class="n">aren</span><span class="s">&#39;t special enough to break the rules.</span>
</span><span class='line'><span class="n">Although</span> <span class="n">practicality</span> <span class="n">beats</span> <span class="n">purity</span><span class="o">.</span>
</span><span class='line'><span class="n">Errors</span> <span class="n">should</span> <span class="n">never</span> <span class="k">pass</span> <span class="n">silently</span><span class="o">.</span>
</span><span class='line'><span class="n">Unless</span> <span class="n">explicitly</span> <span class="n">silenced</span><span class="o">.</span>
</span><span class='line'><span class="n">In</span> <span class="n">the</span> <span class="n">face</span> <span class="n">of</span> <span class="n">ambiguity</span><span class="p">,</span> <span class="n">refuse</span> <span class="n">the</span> <span class="n">temptation</span> <span class="n">to</span> <span class="n">guess</span><span class="o">.</span>
</span><span class='line'><span class="n">There</span> <span class="n">should</span> <span class="n">be</span> <span class="n">one</span><span class="o">--</span> <span class="ow">and</span> <span class="n">preferably</span> <span class="n">only</span> <span class="n">one</span> <span class="o">--</span><span class="n">obvious</span> <span class="n">way</span> <span class="n">to</span> <span class="n">do</span> <span class="n">it</span><span class="o">.</span>
</span><span class='line'><span class="n">Although</span> <span class="n">that</span> <span class="n">way</span> <span class="n">may</span> <span class="ow">not</span> <span class="n">be</span> <span class="n">obvious</span> <span class="n">at</span> <span class="n">first</span> <span class="n">unless</span> <span class="n">you</span><span class="s">&#39;re Dutch.</span>
</span><span class='line'><span class="n">Now</span> <span class="ow">is</span> <span class="n">better</span> <span class="n">than</span> <span class="n">never</span><span class="o">.</span>
</span><span class='line'><span class="n">Although</span> <span class="n">never</span> <span class="ow">is</span> <span class="n">often</span> <span class="n">better</span> <span class="n">than</span> <span class="o">*</span><span class="n">right</span><span class="o">*</span> <span class="n">now</span><span class="o">.</span>
</span><span class='line'><span class="n">If</span> <span class="n">the</span> <span class="n">implementation</span> <span class="ow">is</span> <span class="n">hard</span> <span class="n">to</span> <span class="n">explain</span><span class="p">,</span> <span class="n">it</span><span class="s">&#39;s a bad idea.</span>
</span><span class='line'><span class="n">If</span> <span class="n">the</span> <span class="n">implementation</span> <span class="ow">is</span> <span class="n">easy</span> <span class="n">to</span> <span class="n">explain</span><span class="p">,</span> <span class="n">it</span> <span class="n">may</span> <span class="n">be</span> <span class="n">a</span> <span class="n">good</span> <span class="n">idea</span><span class="o">.</span>
</span><span class='line'><span class="n">Namespaces</span> <span class="n">are</span> <span class="n">one</span> <span class="n">honking</span> <span class="n">great</span> <span class="n">idea</span> <span class="o">--</span> <span class="n">let</span><span class="s">&#39;s do more of those!</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Complexity of Python Operations]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/14/complexity-of-python-operations/"/>
    <updated>2016-03-14T21:25:46+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/14/complexity-of-python-operations</id>
    <content type="html"><![CDATA[<p>Types of the operations:</p>

<ul>
<li>lists</li>
<li>sets</li>
<li>dictionary</li>
</ul>


<h2>Lists</h2>

<table>
<thead>
<tr>
<th> Operation     </th>
<th> Example      </th>
<th> Class         </th>
<th> Notes                             </th>
</tr>
</thead>
<tbody>
<tr>
<td> Index         </td>
<td> l[i]         </td>
<td> O(1)          </td>
<td>                                   </td>
</tr>
<tr>
<td> Store         </td>
<td> l[i] = 0     </td>
<td> O(1)          </td>
<td>                                   </td>
</tr>
<tr>
<td> Length        </td>
<td> len(l)       </td>
<td> O(1)          </td>
<td>                                   </td>
</tr>
<tr>
<td> Append        </td>
<td> l.append(5)  </td>
<td> O(1)          </td>
<td>                                   </td>
</tr>
<tr>
<td> Pop           </td>
<td> l.pop()      </td>
<td> O(1)          </td>
<td> same as l.pop(-1), popping at end </td>
</tr>
<tr>
<td> Clear         </td>
<td> l.clear()    </td>
<td> O(1)          </td>
<td> similar to l = []                 </td>
</tr>
<tr>
<td> Slice         </td>
<td> l[a:b]       </td>
<td> O(b-a)        </td>
<td> l[1:5]:O(l)/l[:]:O(len(l)-0)=O(N) </td>
</tr>
<tr>
<td> Extend        </td>
<td> l.extend(&hellip;)</td>
<td> O(len(&hellip;))   </td>
<td> depends only on len of extension  </td>
</tr>
<tr>
<td> Construction  </td>
<td> list(&hellip;)    </td>
<td> O(len(&hellip;))   </td>
<td> depends on length of argument     </td>
</tr>
<tr>
<td> check ==, !=  </td>
<td> l1 == l2     </td>
<td> O(N)          </td>
<td>                                   </td>
</tr>
<tr>
<td> Insert        </td>
<td> l[a:b] = &hellip; </td>
<td> O(N)          </td>
<td>                                   </td>
</tr>
<tr>
<td> Delete        </td>
<td> del l[i]     </td>
<td> O(N)          </td>
<td>                                   </td>
</tr>
<tr>
<td> Remove        </td>
<td> l.remove(&hellip;)</td>
<td> O(N)          </td>
<td>                                   </td>
</tr>
<tr>
<td> Containment   </td>
<td> x in/not in l</td>
<td> O(N)          </td>
<td> searches list                     </td>
</tr>
<tr>
<td> Copy          </td>
<td> l.copy()     </td>
<td> O(N)          </td>
<td> Same as l[:] which is O(N)        </td>
</tr>
<tr>
<td> Pop           </td>
<td> l.pop(0)     </td>
<td> O(N)          </td>
<td>                                   </td>
</tr>
<tr>
<td> Extreme value </td>
<td> min(l)/max(l)</td>
<td> O(N)          </td>
<td>                                   </td>
</tr>
<tr>
<td> Reverse       </td>
<td> l.reverse()  </td>
<td> O(N)          </td>
<td>                                   </td>
</tr>
<tr>
<td> Iteration     </td>
<td> for v in l:  </td>
<td> O(N)          </td>
<td>                                   </td>
</tr>
<tr>
<td> Sort          </td>
<td> l.sort()     </td>
<td> O(N Log N)    </td>
<td> key/reverse doesn&rsquo;t change this   </td>
</tr>
<tr>
<td> Multiply      </td>
<td> k*l          </td>
<td> O(k N)        </td>
<td> 5<em>l is O(N): len(l)</em>l is O(N**2)  </td>
</tr>
</tbody>
</table>


<h2>Sets</h2>

<table>
<thead>
<tr>
<th> Operation     </th>
<th> Example      </th>
<th> Class         </th>
<th> Notes                         </th>
</tr>
</thead>
<tbody>
<tr>
<td> Length        </td>
<td> len(s)       </td>
<td> O(1)          </td>
<td>                               </td>
</tr>
<tr>
<td> Add           </td>
<td> s.add(5)     </td>
<td> O(1)          </td>
<td>                               </td>
</tr>
<tr>
<td> Containment   </td>
<td> x in/not in s</td>
<td> O(1)          </td>
<td> compare to list/tuple - O(N)  </td>
</tr>
<tr>
<td> Remove        </td>
<td> s.remove(5)  </td>
<td> O(1)          </td>
<td> compare to list/tuple - O(N)  </td>
</tr>
<tr>
<td> Discard       </td>
<td> s.discard(5) </td>
<td> O(1)          </td>
<td>                               </td>
</tr>
<tr>
<td> Pop           </td>
<td> s.pop()      </td>
<td> O(1)          </td>
<td> compare to list - O(N)        </td>
</tr>
<tr>
<td> Clear         </td>
<td> s.clear()    </td>
<td> O(1)          </td>
<td> similar to s = set()          </td>
</tr>
<tr>
<td> Construction  </td>
<td> set(&hellip;)     </td>
<td> len(&hellip;)      </td>
<td>                               </td>
</tr>
<tr>
<td> check ==, !=  </td>
<td> s != t       </td>
<td> O(min(len(s),lent(t))</td>
<td>                        </td>
</tr>
<tr>
<td> &lt;=/&lt;          </td>
<td> s &lt;= t       </td>
<td> O(len(s1))    </td>
<td> issubset                      </td>
</tr>
<tr>
<td> >=/>          </td>
<td> s >= t       </td>
<td> O(len(s2))    </td>
<td> issuperset s &lt;= t == t >= s   </td>
</tr>
<tr>
<td> Union         </td>
<td> s </td>
<td> t        </td>
<td> O(len(s)+len(t))|                             </td>
</tr>
<tr>
<td> Intersection  </td>
<td> s &amp; t        </td>
<td> O(min(len(s),lent(t))</td>
<td>                        </td>
</tr>
<tr>
<td> Difference    </td>
<td> s - t        </td>
<td> O(len(t))     </td>
<td>                               </td>
</tr>
<tr>
<td> Symmetric Diff</td>
<td> s ^ t        </td>
<td> O(len(s))     </td>
<td>                               </td>
</tr>
<tr>
<td> Iteration     </td>
<td> for v in s:  </td>
<td> O(N)          </td>
<td>                               </td>
</tr>
<tr>
<td> Copy          </td>
<td> s.copy()     </td>
<td> O(N)          </td>
<td>                               </td>
</tr>
</tbody>
</table>


<h2>Dictionary</h2>

<table>
<thead>
<tr>
<th> Operation     </th>
<th> Example      </th>
<th> Class         </th>
<th> Notes                         </th>
</tr>
</thead>
<tbody>
<tr>
<td> Index         </td>
<td> d[k]         </td>
<td> O(1)          </td>
<td>                               </td>
</tr>
<tr>
<td> Store         </td>
<td> d[k] = v     </td>
<td> O(1)          </td>
<td>                               </td>
</tr>
<tr>
<td> Length        </td>
<td> len(d)       </td>
<td> O(1)          </td>
<td>                               </td>
</tr>
<tr>
<td> Delete        </td>
<td> del d[k]     </td>
<td> O(1)          </td>
<td>                               </td>
</tr>
<tr>
<td> get/setdefault</td>
<td> d.method     </td>
<td> O(1)          </td>
<td>                               </td>
</tr>
<tr>
<td> Pop           </td>
<td> d.pop(k)     </td>
<td> O(1)          </td>
<td>                               </td>
</tr>
<tr>
<td> Pop item      </td>
<td> d.popitem()  </td>
<td> O(1)          </td>
<td>                               </td>
</tr>
<tr>
<td> Clear         </td>
<td> d.clear()    </td>
<td> O(1)          </td>
<td> similar to s = {} or = dict() </td>
</tr>
<tr>
<td> Views         </td>
<td> d.keys()     </td>
<td> O(1)          </td>
<td>                               </td>
</tr>
<tr>
<td> Construction  </td>
<td> dict(&hellip;)    </td>
<td> len(&hellip;)      </td>
<td>                               </td>
</tr>
<tr>
<td> Iteration     </td>
<td> for k in d:  </td>
<td> O(N)          </td>
<td> all forms: keys, values, items</td>
</tr>
</tbody>
</table>


<h2>References</h2>

<ul>
<li><a href="https://www.ics.uci.edu/~pattis/ICS-33/lectures/complexitypython.txt">Complexity of Python Operations</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Databases]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/13/databases/"/>
    <updated>2016-03-13T21:23:22+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/13/databases</id>
    <content type="html"><![CDATA[<h2>Database Overviews</h2>

<h3>What is Database</h3>

<p>Database - any collection of related data, a persistent, logically coherent collection of inherently meaningful data, relevant to some aspects of the real world.</p>

<p>Database Management System (DBMS) - a collection of programs that enables useres to create and maintain a database.</p>

<p>Relational Database Management System (RDBMS) - a database that treats all of its data as a collection of relations:</p>

<ul>
<li>SET: A = {1,2,3,4}</li>
<li>Cartesian Product: B * C = {&lt;H,R>, &lt;H,B>, &lt;T,R>, &lt;T,B>}</li>
<li>Relation: Q = {&lt;H,R>, &lt;H,B>}</li>
</ul>


<p>Non-Relational Database Management System (NoRDBMS) - xxx</p>

<h3>Types of Databases</h3>

<h4>SQL</h4>

<h4>NoSQL</h4>

<p>General</p>

<ul>
<li><strong>Key-Value/Ordered Key-Value</strong>: the simplest NoSQL databases, every single item in the database is stored as an attribute name or key, together with its value.</li>
<li><strong>BigTable (wide-column)</strong>: optimized for queries over large datasetes, and store columns of data together, instead of rows.</li>
<li><strong>Document, Full-Text Search</strong>: pair each key with a complex data structure known as a document, documents can contain many diffferent key-value pairs, or key-array pairs, or even nested documents.</li>
<li><strong>Graph</strong>: used to store information about networks, such as social connections.</li>
</ul>


<p>Others</p>

<ul>
<li>Multimodel</li>
<li>Object</li>
<li>Grid &amp; Cloud</li>
<li>XML</li>
<li>Multidimensional</li>
<li>Network Model</li>
</ul>


<table>
<thead>
<tr>
<th style="text-align:left;"> Type                       </th>
<th style="text-align:left;"> Databases                                               </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> Key-Value/Ordered Key-Value</td>
<td style="text-align:left;"> Amazon DynamoDB, Azure Table storage, Riak, Redis, Oracle NoSQL Database, MemcacheDB, PickleDB, Aerospike, FoundationDB, Berkeley DB, GenieDB, BangDB, Scalaris, Tokyo Cabnit/Tyrant, Voldemort, Dynomite, c-treeACE database, KitaroDB, hamsterdb, STSdb, Tarantool, quasardb, RaptorDB, TIBCO ActiveSpaces DB, NessDB, HyperDex, Symas Lightning Memory Mapped Database (LMDB), Light Cloud, Hibari, Genome </td>
</tr>
<tr>
<td style="text-align:left;"> BigTable (column-based)    </td>
<td style="text-align:left;"> Hadoop/HBase, Cassandra, Hypertable, Accumulo, Amazon SimpleDB, Cloud Data, HPCC, Flink, Splice </td>
</tr>
<tr>
<td style="text-align:left;"> Document, Full-Text Search </td>
<td style="text-align:left;"> MongoDB, Elastic Search, Couchbase Server, CouchDB, RethinkDB, RavenDB, MarkLogic Server, Clusterpoint Server, NeDB, Terrastore, JasDB, RaptorDB, Djondb, EDB, Amisa Server, DensoDB, SisoDB, SDB, UnQLite, ThruDB </td>
</tr>
<tr>
<td style="text-align:left;"> Graph                       </td>
<td style="text-align:left;"> Neo4J, InfiniteGraph, DEX, Titan, Infogrid, HypergraphDB, Trinity, AllegroGraph, WHITE Database, Virtuoso, VertxDB, FlockDB, BrightstarDB </td>
</tr>
<tr>
<td style="text-align:left;"> Multimodel                 </td>
<td style="text-align:left;"> ArangoDB, OrientDB, DatomicDB, FatDB, AlchemyDB, coretxDB </td>
</tr>
<tr>
<td style="text-align:left;"> Object                     </td>
<td style="text-align:left;"> VersantDB, Objectivity, Gemstone, NinjaDB, ObjectDB, Starcounter, HSS Database, ZODB, Magma, NEODB, Streling, EyeDB, FarmerD </td>
</tr>
<tr>
<td style="text-align:left;"> Grid &amp; Cloud               </td>
<td style="text-align:left;"> Oracle Coherence, GemfireDB, Infinispan, Hazelcast </td>
</tr>
<tr>
<td style="text-align:left;"> XML                        </td>
<td style="text-align:left;"> EMC Documentum xDB, eXist, Sedna, BaseX, Qizx/db, BerkeleyDB </td>
</tr>
<tr>
<td style="text-align:left;"> Multidimensional           </td>
<td style="text-align:left;"> Global, Intersystem cache, GT.M, SciDB, Rasdaman </td>
</tr>
<tr>
<td style="text-align:left;"> Network Model              </td>
<td style="text-align:left;"> Vyhodb </td>
</tr>
</tbody>
</table>


<h3>Database Systems</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(fontend) SQL user interface     forms interface     report generation tools     data mining & analysis
</span><span class='line'>--------------------------------------------------------------------------------------------------------
</span><span class='line'>(SQL API) interface
</span><span class='line'>--------------------------------------------------------------------------------------------------------
</span><span class='line'>(backend) SQL Engine</span></code></pre></td></tr></table></div></figure>


<h2>Frontend: User Level</h2>

<h3>Database Design</h3>

<p>steps:</p>

<ul>
<li>entities &ndash;> relationships (1..1, 1..n, n..1, n..m) &ndash;> ERM (entity-relationship model)</li>
<li>attributes &ndash;> keys &ndash;> data type</li>
<li><p>normalization (normal forms: 1NF, 2NF, 3NF)</p></li>
<li><p>identifying entities: (types of entities) people, things, events, locations.</p></li>
<li>identifying relationships: 1:1, 1:N, M:1, and M:N</li>
<li>normalization:

<ul>
<li>1NF: there may be no repeating grouops of columns in an entity.</li>
<li>2NF: all attributes of an entity shoudl be fully dependent on the whole primary key.</li>
<li>3NF: all sttributes need to be directly dependent on the primary key, and not on other attributes. 2NF you point out attributes through the PK, in 3NF every attribute needs to be dependent on the PK, and nothing else.</li>
</ul>
</li>
</ul>


<h3>Database Languages</h3>

<ul>
<li>Data Languages

<ul>
<li>DDL (Data Definition Language): create/drop/alter/rename table</li>
<li>DML (Data Manipulation Langauge): CRUD - select, insert, update, delete</li>
<li>DQL (Data Query Language): select, show, help</li>
<li>DCL (Data Control Language): grant, revoke</li>
<li>DTL (Data Transaction Language): ACID - start transaction, savepoint, commit, rollback</li>
</ul>
</li>
<li>VDL (View Definition Language): user views</li>
<li>SDL (Storage Definition Language): internal schemas</li>
</ul>


<h4>Data Languages</h4>

<h5>DDL</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="p">[</span><span class="k">table</span> <span class="n">name</span><span class="p">]</span> <span class="p">(</span> <span class="p">[</span><span class="k">column</span> <span class="n">definitions</span><span class="p">]</span> <span class="p">)</span> <span class="p">[</span><span class="k">table</span> <span class="k">parameters</span><span class="p">]</span>
</span><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">employees</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">id</span>            <span class="nb">INTEGER</span>      <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">,</span>
</span><span class='line'>    <span class="n">first_name</span>    <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
</span><span class='line'>    <span class="n">last_name</span>     <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">75</span><span class="p">)</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
</span><span class='line'>    <span class="n">fname</span>         <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
</span><span class='line'>    <span class="n">dateofbirth</span>   <span class="nb">DATE</span>         <span class="k">not</span> <span class="k">null</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">DROP</span> <span class="n">objecttype</span> <span class="n">objectname</span>
</span><span class='line'><span class="k">DROP</span> <span class="k">TABLE</span> <span class="n">employees</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">ALTER</span> <span class="n">objecttype</span> <span class="n">objectname</span> <span class="k">parameters</span>
</span><span class='line'><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">sink</span> <span class="k">ADD</span> <span class="n">bubbles</span> <span class="nb">INTEGER</span><span class="p">;</span>
</span><span class='line'><span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">sink</span> <span class="k">DROP</span> <span class="k">COLUMN</span> <span class="n">bubbles</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">RENAME</span> <span class="k">TABLE</span> <span class="n">old_name</span> <span class="k">TO</span> <span class="n">new_name</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>DML</h5>

<p>CRUD: Create, Read, Update, Delete</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">Operation</span>          <span class="k">SQL</span>      <span class="n">HTTP</span>              <span class="n">DDS</span>
</span><span class='line'><span class="k">Create</span>             <span class="k">INSERT</span>   <span class="n">PUT</span><span class="o">/</span><span class="n">POST</span>          <span class="k">write</span>
</span><span class='line'><span class="k">Read</span> <span class="p">(</span><span class="n">Retrieve</span><span class="p">)</span>    <span class="k">SELECT</span>   <span class="k">GET</span>               <span class="k">read</span><span class="o">/</span><span class="n">take</span>
</span><span class='line'><span class="k">Update</span> <span class="p">(</span><span class="k">Modify</span><span class="p">)</span>    <span class="k">UPDATE</span>   <span class="n">POST</span><span class="o">/</span><span class="n">PUT</span><span class="o">/</span><span class="n">PATCH</span>    <span class="k">write</span>
</span><span class='line'><span class="k">Delete</span> <span class="p">(</span><span class="k">Destroy</span><span class="p">)</span>   <span class="k">DELETE</span>   <span class="k">DELETE</span>            <span class="n">dispose</span>
</span></code></pre></td></tr></table></div></figure>


<p>Syntax</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="p">...</span> <span class="k">FROM</span> <span class="p">...</span> <span class="k">WHERE</span> <span class="p">...</span>
</span><span class='line'><span class="k">INSERT</span> <span class="k">INTO</span> <span class="p">...</span> <span class="k">VALUES</span> <span class="p">...</span>
</span><span class='line'><span class="k">UPDATE</span> <span class="p">...</span> <span class="k">SET</span> <span class="p">...</span> <span class="k">WHERE</span> <span class="p">...</span>
</span><span class='line'><span class="k">DELETE</span> <span class="k">FROM</span> <span class="p">...</span> <span class="k">WHERE</span> <span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="k">SELECT</span> <span class="n">nom</span><span class="p">,</span> <span class="n">service</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">employe</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">status</span> <span class="o">=</span> <span class="s1">&#39;stagiaire&#39;</span>
</span><span class='line'><span class="k">ORDER</span> <span class="k">BY</span> <span class="n">nom</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">employees</span><span class="p">(</span><span class="n">first_name</span><span class="p">,</span> <span class="n">last_name</span><span class="p">,</span> <span class="n">fname</span><span class="p">)</span> <span class="k">VALUES</span> <span class="p">(</span><span class="s1">&#39;John&#39;</span><span class="p">,</span> <span class="s1">&#39;Capita&#39;</span><span class="p">,</span> <span class="s1">&#39;xcapit00&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">UPDATE</span> <span class="n">a_table</span> <span class="k">SET</span> <span class="n">field1</span> <span class="o">=</span> <span class="s1">&#39;updated value&#39;</span> <span class="k">WHERE</span> <span class="n">field2</span> <span class="o">=</span> <span class="s1">&#39;N&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">DELETE</span> <span class="k">FROM</span> <span class="n">a_table</span> <span class="k">WHERE</span> <span class="n">field2</span> <span class="o">=</span> <span class="s1">&#39;N&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">MERGE</span> <span class="k">INTO</span> <span class="k">table_name</span> <span class="k">USING</span> <span class="n">table_reference</span> <span class="k">ON</span> <span class="p">(</span><span class="n">condition</span><span class="p">)</span>
</span><span class='line'>   <span class="k">WHEN</span> <span class="n">MATCHED</span> <span class="k">THEN</span>
</span><span class='line'>   <span class="k">UPDATE</span> <span class="k">SET</span> <span class="n">column1</span> <span class="o">=</span> <span class="n">value1</span> <span class="p">[,</span> <span class="n">column2</span> <span class="o">=</span> <span class="n">value2</span> <span class="p">...]</span>
</span><span class='line'>   <span class="k">WHEN</span> <span class="k">NOT</span> <span class="n">MATCHED</span> <span class="k">THEN</span>
</span><span class='line'>   <span class="k">INSERT</span> <span class="p">(</span><span class="n">column1</span> <span class="p">[,</span> <span class="n">column2</span> <span class="p">...])</span> <span class="k">VALUES</span> <span class="p">(</span><span class="n">value1</span> <span class="p">[,</span> <span class="n">value2</span> <span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<h5>DQL</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="o">-</span> <span class="n">functions</span><span class="p">:</span> <span class="k">COUNT</span><span class="p">,</span> <span class="k">AVG</span><span class="p">,</span> <span class="k">MIN</span><span class="p">,</span> <span class="k">MAX</span><span class="p">,</span> <span class="k">SUM</span>
</span><span class='line'>
</span><span class='line'><span class="k">SELECT</span> <span class="o">*</span>    <span class="k">column</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span><span class='line'><span class="k">FROM</span> <span class="o">*</span>
</span><span class='line'>            <span class="k">table</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span><span class='line'>            <span class="k">FULL</span> <span class="k">OUTER</span> <span class="k">JOIN</span>
</span><span class='line'>            <span class="k">RIGHT</span> <span class="k">OUTER</span> <span class="k">JOIN</span>
</span><span class='line'>            <span class="k">LEFT</span> <span class="k">OUTER</span> <span class="k">JOIN</span>
</span><span class='line'>            <span class="k">INNER</span> <span class="k">JOIN</span>
</span><span class='line'>            <span class="k">Alias</span> <span class="p">(</span><span class="k">AS</span><span class="p">)</span>
</span><span class='line'><span class="k">WHERE</span> <span class="o">*</span>
</span><span class='line'>            <span class="n">Predicate</span> <span class="p">(</span><span class="o">=</span><span class="p">,</span><span class="o">&lt;&gt;</span><span class="p">,</span><span class="o">&lt;</span><span class="p">,</span><span class="o">&lt;=</span><span class="p">,</span><span class="o">&gt;</span><span class="p">,</span><span class="o">&gt;=</span><span class="p">)</span>
</span><span class='line'>            <span class="n">Operators</span> <span class="p">(</span><span class="k">AND</span><span class="p">,</span> <span class="k">OR</span><span class="p">,</span> <span class="k">NOT</span><span class="p">)</span>
</span><span class='line'>            <span class="k">LIKE</span> <span class="p">(</span><span class="o">%</span><span class="p">,</span><span class="n">_</span><span class="p">)</span>
</span><span class='line'>            <span class="k">BETWEEN</span> <span class="p">...</span> <span class="k">IN</span> <span class="p">...</span>
</span><span class='line'>            <span class="k">EXISTS</span>
</span><span class='line'>            <span class="k">IS</span> <span class="k">NULL</span>
</span><span class='line'><span class="k">ORDER</span> <span class="k">BY</span> <span class="o">*</span>
</span><span class='line'>            <span class="k">ASC</span><span class="o">/</span><span class="k">DESC</span>
</span><span class='line'><span class="k">GROUP</span> <span class="k">BY</span> <span class="o">*</span>
</span><span class='line'>            <span class="k">column</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span><span class='line'><span class="k">HAVING</span> <span class="o">*</span>
</span><span class='line'>            <span class="n">clause</span>
</span><span class='line'><span class="k">FETCH</span> <span class="o">*</span>
</span><span class='line'>            <span class="n">clause</span>
</span></code></pre></td></tr></table></div></figure>


<h5>DCL</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">GRANT</span> <span class="k">SELECT</span><span class="p">,</span> <span class="k">UPDATE</span>
</span><span class='line'><span class="k">ON</span> <span class="n">example</span>
</span><span class='line'><span class="k">TO</span> <span class="n">some_user</span><span class="p">,</span> <span class="n">another_user</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">REVOKE</span> <span class="k">SELECT</span><span class="p">,</span> <span class="k">UPDATE</span>
</span><span class='line'><span class="k">ON</span> <span class="n">example</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">some_user</span><span class="p">,</span> <span class="n">another_user</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h5>DTL</h5>

<p>ACID: Atomicity, Consistency, Isolation, Durability</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">commit</span><span class="p">;</span>
</span><span class='line'><span class="n">savepoint</span><span class="p">;</span>
</span><span class='line'><span class="k">rollback</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>VDL</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">CREATE</span> <span class="k">VIEW</span> <span class="ss">&quot;VIEW_NAME&quot;</span> <span class="k">AS</span> <span class="ss">&quot;SQL Statement&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="k">VIEW</span> <span class="n">V_Customer</span>
</span><span class='line'><span class="k">AS</span> <span class="k">SELECT</span> <span class="n">First_Name</span><span class="p">,</span> <span class="n">Last_Name</span><span class="p">,</span> <span class="n">Country</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">Customer</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="k">VIEW</span> <span class="n">V_REGION_SALES</span>
</span><span class='line'><span class="k">AS</span> <span class="k">SELECT</span> <span class="n">A1</span><span class="p">.</span><span class="n">Region_Name</span> <span class="n">REGION</span><span class="p">,</span> <span class="k">SUM</span><span class="p">(</span><span class="n">A2</span><span class="p">.</span><span class="n">Sales</span><span class="p">)</span> <span class="n">SALES</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">Geography</span> <span class="n">A1</span><span class="p">,</span> <span class="n">Store_Information</span> <span class="n">A2</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">A1</span><span class="p">.</span><span class="n">Store_Name</span> <span class="o">=</span> <span class="n">A2</span><span class="p">.</span><span class="n">Store_Name</span>
</span><span class='line'><span class="k">GROUP</span> <span class="k">BY</span> <span class="n">A1</span><span class="p">.</span><span class="n">Region_Name</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">V_REGION_SALES</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>SDL</h4>

<pre><code class="sql"></code></pre>

<h3>Database Management</h3>

<h4>Best Practice</h4>

<h4>Performance</h4>

<h4>Scalability</h4>

<h4>Troubleshooting</h4>

<p>The causes for performance problems can be various, but the most common are a poorly designed databse, incorrectly configured system, insufficient disk space or other system resources, excessive query complication and recomplication, bad execution plans due to missing or outdated statistics, and queries or stored procedures that have long execution times due to improper design.</p>

<p>The most common SQL Server performance symptoms are</p>

<ul>
<li>CPU</li>
<li>Memory</li>
<li>Network</li>
<li>I/O</li>
<li>Slow running queries</li>
</ul>


<h3>Database Users</h3>

<ul>
<li>designer: database design</li>
<li>Developer: write programs to CRUB from/to database</li>
<li>DBA: admin database of information, users, security/integrity, backup/recovery, performance</li>
<li>Analyst: Modeling</li>
<li>Users: query and manipulation</li>
</ul>


<h2>Middleware: API Level</h2>

<h3>Types of API</h3>

<h2>Backend: Database Level</h2>

<h3>Database Architecture</h3>

<h2>References</h2>

<h3>SQL</h3>

<ul>
<li><a href="http://www.esp.org/db-fund.pdf">Database Fundamentals</a></li>
<li><a href="http://db.cs.berkeley.edu/papers/fntdb07-architecture.pdf">Architecture of A Database System</a></li>
<li><a href="http://codex.cs.yale.edu/avi/db-book/db6/slide-dir/PDF-dir/ch17.pdf">Database System Architectures</a></li>
</ul>


<h3>NoSQL</h3>

<p>databases:</p>

<ul>
<li><a href="http://bigdata-madesimple.com/a-deep-dive-into-nosql-a-complete-list-of-nosql-databases/">A Deep Dive Into NoSQL: A Complete List of NoSQL Databases</a></li>
</ul>


<h3>Database Design and Modeling</h3>

<ul>
<li><a href="http://www.datanamic.com/support/lt-dez005-introduction-db-modeling.html">Introuction DB Modeling</a></li>
<li><a href="https://highlyscalable.wordpress.com/2012/03/01/nosql-data-modeling-techniques/">NoSQL Data Modeling Techniques</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MongoDB]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/10/mongodb/"/>
    <updated>2016-03-10T23:13:54+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/10/mongodb</id>
    <content type="html"><![CDATA[<p>This article aims at overviewing the MongoDB.</p>

<h2>What is MongoDB</h2>

<p>MongoDB is a NoSQL document database that is apdating to the agile application development.</p>

<p>MongoDB Components</p>

<ul>
<li>user level: MongoShell, MongoCompass, MongoBI</li>
<li>develop level: Mongo Drivers, MongoDB</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Developers        DBA                     Users                      Analyst
</span><span class='line'>---------------------------------------------------------------------------------
</span><span class='line'>Mongo Drivers     MongoShell               MongoCompass               MongoBI
</span><span class='line'>---------------------------------------------------------------------------------
</span><span class='line'>MongoDB
</span><span class='line'>---------------------------------------------------------------------------------</span></code></pre></td></tr></table></div></figure>


<h3>Installation</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># mongodb</span>
</span><span class='line'><span class="nv">$ </span>sudo apt-get install mongodb
</span><span class='line'><span class="nv">$ </span>mongo
</span><span class='line'>&gt; <span class="nb">help</span>
</span><span class='line'><span class="nb"> </span>db.help<span class="o">()</span>                    <span class="nb">help </span>on db methods
</span><span class='line'>  db.mycoll.help<span class="o">()</span>             <span class="nb">help </span>on collection methods
</span><span class='line'>  sh.help<span class="o">()</span>                    sharding helpers
</span><span class='line'>  rs.help<span class="o">()</span>                    replica <span class="nb">set </span>helpers
</span><span class='line'>  <span class="nb">help </span>admin                   administrative <span class="nb">help</span>
</span><span class='line'><span class="nb"> help </span>connect                 connecting to a db <span class="nb">help</span>
</span><span class='line'><span class="nb"> help </span>keys                    key shortcuts
</span><span class='line'>  <span class="nb">help </span>misc                    misc things to know
</span><span class='line'>  <span class="nb">help </span>mr                      mapreduce
</span><span class='line'>
</span><span class='line'>  show dbs                     show database names
</span><span class='line'>  show collections             show collections in current database
</span><span class='line'>  show users                   show users in current database
</span><span class='line'>  show profile                 show most recent system.profile entries with <span class="nb">time</span> &gt;<span class="o">=</span> 1ms
</span><span class='line'>  show logs                    show the accessible logger names
</span><span class='line'>  show log <span class="o">[</span>name<span class="o">]</span>              prints out the last segment of log in memory, <span class="s1">&#39;global&#39;</span> is default
</span><span class='line'>  use &lt;db_name&gt;                <span class="nb">set </span>current database
</span><span class='line'>  db.foo.find<span class="o">()</span>                list objects in collection foo
</span><span class='line'>  db.foo.find<span class="o">(</span> <span class="o">{</span> a : <span class="m">1</span> <span class="o">}</span> <span class="o">)</span>     list objects in foo where <span class="nv">a</span> <span class="o">==</span> 1
</span><span class='line'>  it                           result of the last line evaluated<span class="p">;</span> use to further iterate
</span><span class='line'>  DBQuery.shellBatchSize <span class="o">=</span> x   <span class="nb">set </span>default number of items to display on shell
</span><span class='line'>  <span class="nb">exit                         </span>quit the mongo shell
</span><span class='line'>
</span><span class='line'>&gt; show dbs
</span><span class='line'>&gt; use demo
</span></code></pre></td></tr></table></div></figure>


<h2>MongoDB User Level</h2>

<h3>Database Design</h3>

<h3>Database Languages</h3>

<ul>
<li>DML</li>
<li>DQL</li>
</ul>


<h4>DML</h4>

<p>CRUD</p>

<ul>
<li>Create:</li>
<li>Read:</li>
<li>Update:</li>
<li>Delete:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">insertOne</span><span class="p">()</span>
</span><span class='line'><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">insertMany</span><span class="p">()</span>
</span><span class='line'><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="k">insert</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">updateOne</span><span class="p">()</span>
</span><span class='line'><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">updateMany</span><span class="p">()</span>
</span><span class='line'><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">replaceOne</span><span class="p">()</span>
</span><span class='line'><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="k">update</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">deleteOne</span><span class="p">()</span>
</span><span class='line'><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">deleteMany</span><span class="p">()</span>
</span><span class='line'><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">remove</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">db</span><span class="p">.</span><span class="n">users</span><span class="p">.</span><span class="k">insert</span><span class="p">(</span>
</span><span class='line'>   <span class="err">{</span>
</span><span class='line'>      <span class="n">name</span><span class="p">:</span> <span class="ss">&quot;sue&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">age</span><span class="p">:</span> <span class="mi">26</span><span class="p">,</span>
</span><span class='line'>      <span class="n">status</span><span class="p">:</span> <span class="ss">&quot;A&quot;</span>
</span><span class='line'>   <span class="err">}</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">db</span><span class="p">.</span><span class="n">users</span><span class="p">.</span><span class="n">find</span><span class="p">(</span>
</span><span class='line'>    <span class="err">{</span> <span class="n">age</span><span class="p">:</span> <span class="err">{</span> <span class="err">$</span><span class="n">gt</span><span class="p">:</span> <span class="mi">18</span>  <span class="err">}</span> <span class="err">}</span><span class="p">,</span>
</span><span class='line'>    <span class="err">{</span> <span class="n">name</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="n">address</span><span class="p">:</span> <span class="mi">1</span> <span class="err">}</span>
</span><span class='line'><span class="p">).</span><span class="k">limit</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>DQL</h4>

<p>queries</p>

<ul>
<li>key-value:</li>
<li>range: greater than, less than, equal to, between</li>
<li>geospatial: point, line, circle, polygon</li>
<li>text search: AND, OR, NOT</li>
<li>aggregation: count, min, max, average, $lookup</li>
<li>mapreduce: complex data processing</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Database Management</h3>

<h4>Mongo Shell</h4>

<p>help</p>

<ul>
<li>xxx.help(): db/coll methods, sharding, replica</li>
<li>help xxx: admin, connect, keys, misc, mr</li>
<li>show xxx: dbs, collections, users, profile, logs, log [name]</li>
<li>db: use xxx, db.foo.find(), it</li>
<li>shell: DBQuery.shellBatchSize, exit</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; <span class="nb">help</span>
</span><span class='line'><span class="nb"> </span>db.help<span class="o">()</span>                    <span class="nb">help </span>on db methods
</span><span class='line'>  db.mycoll.help<span class="o">()</span>             <span class="nb">help </span>on collection methods
</span><span class='line'>  sh.help<span class="o">()</span>                    sharding helpers
</span><span class='line'>  rs.help<span class="o">()</span>                    replica <span class="nb">set </span>helpers
</span><span class='line'>  <span class="nb">help </span>admin                   administrative <span class="nb">help</span>
</span><span class='line'><span class="nb"> help </span>connect                 connecting to a db <span class="nb">help</span>
</span><span class='line'><span class="nb"> help </span>keys                    key shortcuts
</span><span class='line'>  <span class="nb">help </span>misc                    misc things to know
</span><span class='line'>  <span class="nb">help </span>mr                      mapreduce
</span><span class='line'>
</span><span class='line'>  show dbs                     show database names
</span><span class='line'>  show collections             show collections in current database
</span><span class='line'>  show users                   show users in current database
</span><span class='line'>  show profile                 show most recent system.profile entries with <span class="nb">time</span> &gt;<span class="o">=</span> 1ms
</span><span class='line'>  show logs                    show the accessible logger names
</span><span class='line'>  show log <span class="o">[</span>name<span class="o">]</span>              prints out the last segment of log in memory, <span class="s1">&#39;global&#39;</span> is default
</span><span class='line'>  use &lt;db_name&gt;                <span class="nb">set </span>current database
</span><span class='line'>  db.foo.find<span class="o">()</span>                list objects in collection foo
</span><span class='line'>  db.foo.find<span class="o">(</span> <span class="o">{</span> a : <span class="m">1</span> <span class="o">}</span> <span class="o">)</span>     list objects in foo where <span class="nv">a</span> <span class="o">==</span> 1
</span><span class='line'>  it                           result of the last line evaluated<span class="p">;</span> use to further iterate
</span><span class='line'>  DBQuery.shellBatchSize <span class="o">=</span> x   <span class="nb">set </span>default number of items to display on shell
</span><span class='line'>  <span class="nb">exit                         </span>quit the mongo shell
</span></code></pre></td></tr></table></div></figure>


<p>DB methods</p>

<ul>
<li>admin:

<ul>
<li>admin: <code>db.adminCommand()</code>,</li>
<li>user: <code>db.addUser()</code>, <code>db.auth()</code>, <code>db.removeUser()</code></li>
<li>operation: <code>db.currentOp()</code>, <code>db.eval()</code>, <code>db.killOp()</code>, <code>db.loadServerScripts()</code>, <code>db.runCommand(cmdObj)</code></li>
<li>lock: <code>db.fsyncLock()</code>, <code>db.fsyncUnlock()</code>, <code>db.repairDatabase()</code></li>
<li>err: <code>db.getLastError()</code>, <code>db.getLastErrorObj()</code>, <code>db.getPrevError()</code>, <code>db.resetError()</code></li>
<li>connection: <code>db.getMongo()</code>, <code>db.getMongo().setSlaveOk()</code>, <code>db.shutdownServer()</code></li>
<li>profiling: <code>db.getProfilingLevel()</code>, <code>db.getProfilingStatus()</code>, <code>db.setProfilingLevel()</code></li>
<li>sharding: <code>db.getSiblingDB(name)</code>, <code>db.hostInfo()</code>, <code>db.isMaster()</code>, <code>db.printReplicationInfo()</code>, <code>db.printSlaveReplicationInfo()</code>, <code>db.serverStatus()</code></li>
</ul>
</li>
<li>user:

<ul>
<li>db: <code>db.cloneDatabase()</code>, <code>db.dropDatabase()</code>, <code>db.getName()</code>, <code>db.logout()</code>, <code>db.stats()</code></li>
<li>collection: <code>db.createCollection()</code>, <code>db.getCollection()</code>, <code>db.getCollectionNames()</code>, <code>db.printCollectionStats()</code></li>
</ul>
</li>
<li>shell: <code>db.commandHelp()</code>, <code>db.listCommands()</code>, <code>db.setVerboseShell(flag)</code>, <code>db.version()</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; show dbs
</span><span class='line'>&gt; use <span class="nb">test</span>
</span><span class='line'>
</span><span class='line'>&gt; db.help<span class="o">()</span>
</span><span class='line'>DB methods:
</span><span class='line'>  db.addUser<span class="o">(</span>userDocument<span class="o">)</span>
</span><span class='line'>  db.adminCommand<span class="o">(</span>nameOrDocument<span class="o">)</span> - switches to <span class="s1">&#39;admin&#39;</span> db, and runs <span class="nb">command</span> <span class="o">[</span> just calls db.runCommand<span class="o">(</span>...<span class="o">)</span> <span class="o">]</span>
</span><span class='line'>  db.auth<span class="o">(</span>username, password<span class="o">)</span>
</span><span class='line'>  db.cloneDatabase<span class="o">(</span>fromhost<span class="o">)</span>
</span><span class='line'>  db.commandHelp<span class="o">(</span>name<span class="o">)</span> returns the <span class="nb">help </span><span class="k">for</span> the <span class="nb">command</span>
</span><span class='line'><span class="nb"> </span>db.copyDatabase<span class="o">(</span>fromdb, todb, fromhost<span class="o">)</span>
</span><span class='line'>  db.createCollection<span class="o">(</span>name, <span class="o">{</span> size : ..., capped : ..., max : ... <span class="o">}</span> <span class="o">)</span>
</span><span class='line'>  db.currentOp<span class="o">()</span> displays currently executing operations in the db
</span><span class='line'>  db.dropDatabase<span class="o">()</span>
</span><span class='line'>  db.eval<span class="o">(</span>func, args<span class="o">)</span> run code server-side
</span><span class='line'>  db.fsyncLock<span class="o">()</span> flush data to disk and lock server <span class="k">for</span> backups
</span><span class='line'>  db.fsyncUnlock<span class="o">()</span> unlocks server following a db.fsyncLock<span class="o">()</span>
</span><span class='line'>  db.getCollection<span class="o">(</span>cname<span class="o">)</span> same as db<span class="o">[</span><span class="s1">&#39;cname&#39;</span><span class="o">]</span> or db.cname
</span><span class='line'>  db.getCollectionNames<span class="o">()</span>
</span><span class='line'>  db.getLastError<span class="o">()</span> - just returns the err msg string
</span><span class='line'>  db.getLastErrorObj<span class="o">()</span> - <span class="k">return</span> full status object
</span><span class='line'>  db.getMongo<span class="o">()</span> get the server connection object
</span><span class='line'>  db.getMongo<span class="o">()</span>.setSlaveOk<span class="o">()</span> allow queries on a replication slave server
</span><span class='line'>  db.getName<span class="o">()</span>
</span><span class='line'>  db.getPrevError<span class="o">()</span>
</span><span class='line'>  db.getProfilingLevel<span class="o">()</span> - deprecated
</span><span class='line'>  db.getProfilingStatus<span class="o">()</span> - returns <span class="k">if</span> profiling is on and slow threshold
</span><span class='line'>  db.getReplicationInfo<span class="o">()</span>
</span><span class='line'>  db.getSiblingDB<span class="o">(</span>name<span class="o">)</span> get the db at the same server as this one
</span><span class='line'>  db.hostInfo<span class="o">()</span> get details about the server<span class="err">&#39;</span>s host
</span><span class='line'>  db.isMaster<span class="o">()</span> check replica primary status
</span><span class='line'>  db.killOp<span class="o">(</span>opid<span class="o">)</span> kills the current operation in the db
</span><span class='line'>  db.listCommands<span class="o">()</span> lists all the db commands
</span><span class='line'>  db.loadServerScripts<span class="o">()</span> loads all the scripts in db.system.js
</span><span class='line'>  db.logout<span class="o">()</span>
</span><span class='line'>  db.printCollectionStats<span class="o">()</span>
</span><span class='line'>  db.printReplicationInfo<span class="o">()</span>
</span><span class='line'>  db.printShardingStatus<span class="o">()</span>
</span><span class='line'>  db.printSlaveReplicationInfo<span class="o">()</span>
</span><span class='line'>  db.removeUser<span class="o">(</span>username<span class="o">)</span>
</span><span class='line'>  db.repairDatabase<span class="o">()</span>
</span><span class='line'>  db.resetError<span class="o">()</span>
</span><span class='line'>  db.runCommand<span class="o">(</span>cmdObj<span class="o">)</span> run a database command.  <span class="k">if</span> cmdObj is a string, turns it into <span class="o">{</span> cmdObj : <span class="m">1</span> <span class="o">}</span>
</span><span class='line'>  db.serverStatus<span class="o">()</span>
</span><span class='line'>  db.setProfilingLevel<span class="o">(</span>level,&lt;slowms&gt;<span class="o">)</span> <span class="nv">0</span><span class="o">=</span>off <span class="nv">1</span><span class="o">=</span>slow <span class="nv">2</span><span class="o">=</span>all
</span><span class='line'>  db.setVerboseShell<span class="o">(</span>flag<span class="o">)</span> display extra information in shell output
</span><span class='line'>  db.shutdownServer<span class="o">()</span>
</span><span class='line'>  db.stats<span class="o">()</span>
</span><span class='line'>  db.version<span class="o">()</span> current version of the server
</span></code></pre></td></tr></table></div></figure>


<p>DBCollection</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.mycoll.help<span class="o">()</span>
</span><span class='line'>DBCollection <span class="nb">help</span>
</span><span class='line'><span class="nb"> </span>db.mycoll.find<span class="o">()</span>.help<span class="o">()</span> - show DBCursor <span class="nb">help</span>
</span><span class='line'><span class="nb"> </span>db.mycoll.count<span class="o">()</span>
</span><span class='line'>  db.mycoll.copyTo<span class="o">(</span>newColl<span class="o">)</span> - duplicates collection by copying all documents to newColl<span class="p">;</span> no indexes are copied.
</span><span class='line'>  db.mycoll.convertToCapped<span class="o">(</span>maxBytes<span class="o">)</span> - calls <span class="o">{</span>convertToCapped:<span class="s1">&#39;mycoll&#39;</span>, size:maxBytes<span class="o">}}</span> <span class="nb">command</span>
</span><span class='line'><span class="nb"> </span>db.mycoll.dataSize<span class="o">()</span>
</span><span class='line'>  db.mycoll.distinct<span class="o">(</span> key <span class="o">)</span> - e.g. db.mycoll.distinct<span class="o">(</span> <span class="s1">&#39;x&#39;</span> <span class="o">)</span>
</span><span class='line'>  db.mycoll.drop<span class="o">()</span> drop the collection
</span><span class='line'>  db.mycoll.dropIndex<span class="o">(</span>index<span class="o">)</span> - e.g. db.mycoll.dropIndex<span class="o">(</span> <span class="s2">&quot;indexName&quot;</span> <span class="o">)</span> or db.mycoll.dropIndex<span class="o">(</span> <span class="o">{</span> <span class="s2">&quot;indexKey&quot;</span> : <span class="m">1</span> <span class="o">}</span> <span class="o">)</span>
</span><span class='line'>  db.mycoll.dropIndexes<span class="o">()</span>
</span><span class='line'>  db.mycoll.ensureIndex<span class="o">(</span>keypattern<span class="o">[</span>,options<span class="o">])</span> - options is an object with these possible fields: name, unique, dropDups
</span><span class='line'>  db.mycoll.reIndex<span class="o">()</span>
</span><span class='line'>  db.mycoll.find<span class="o">([</span>query<span class="o">]</span>,<span class="o">[</span>fields<span class="o">])</span> - query is an optional query filter. fields is optional <span class="nb">set </span>of fields to <span class="k">return</span>.
</span><span class='line'>                                                e.g. db.mycoll.find<span class="o">(</span> <span class="o">{</span>x:77<span class="o">}</span> , <span class="o">{</span>name:1, x:1<span class="o">}</span> <span class="o">)</span>
</span><span class='line'>  db.mycoll.find<span class="o">(</span>...<span class="o">)</span>.count<span class="o">()</span>
</span><span class='line'>  db.mycoll.find<span class="o">(</span>...<span class="o">)</span>.limit<span class="o">(</span>n<span class="o">)</span>
</span><span class='line'>  db.mycoll.find<span class="o">(</span>...<span class="o">)</span>.skip<span class="o">(</span>n<span class="o">)</span>
</span><span class='line'>  db.mycoll.find<span class="o">(</span>...<span class="o">)</span>.sort<span class="o">(</span>...<span class="o">)</span>
</span><span class='line'>  db.mycoll.findOne<span class="o">([</span>query<span class="o">])</span>
</span><span class='line'>  db.mycoll.findAndModify<span class="o">(</span> <span class="o">{</span> update : ... , remove : bool <span class="o">[</span>, query: <span class="o">{}</span>, sort: <span class="o">{}</span>, <span class="s1">&#39;new&#39;</span>: <span class="nb">false</span><span class="o">]</span> <span class="o">}</span> <span class="o">)</span>
</span><span class='line'>  db.mycoll.getDB<span class="o">()</span> get DB object associated with collection
</span><span class='line'>  db.mycoll.getIndexes<span class="o">()</span>
</span><span class='line'>  db.mycoll.group<span class="o">(</span> <span class="o">{</span> key : ..., initial: ..., reduce : ...<span class="o">[</span>, cond: ...<span class="o">]</span> <span class="o">}</span> <span class="o">)</span>
</span><span class='line'>  db.mycoll.insert<span class="o">(</span>obj<span class="o">)</span>
</span><span class='line'>  db.mycoll.mapReduce<span class="o">(</span> mapFunction , reduceFunction , &lt;optional params&gt; <span class="o">)</span>
</span><span class='line'>  db.mycoll.remove<span class="o">(</span>query<span class="o">)</span>
</span><span class='line'>  db.mycoll.renameCollection<span class="o">(</span> newName , &lt;dropTarget&gt; <span class="o">)</span> renames the collection.
</span><span class='line'>  db.mycoll.runCommand<span class="o">(</span> name , &lt;options&gt; <span class="o">)</span> runs a db <span class="nb">command </span>with the given name where the first param is the collection name
</span><span class='line'>  db.mycoll.save<span class="o">(</span>obj<span class="o">)</span>
</span><span class='line'>  db.mycoll.stats<span class="o">()</span>
</span><span class='line'>  db.mycoll.storageSize<span class="o">()</span> - includes free space allocated to this collection
</span><span class='line'>  db.mycoll.totalIndexSize<span class="o">()</span> - size in bytes of all the indexes
</span><span class='line'>  db.mycoll.totalSize<span class="o">()</span> - storage allocated <span class="k">for</span> all data and indexes
</span><span class='line'>  db.mycoll.update<span class="o">(</span>query, object<span class="o">[</span>, upsert_bool, multi_bool<span class="o">])</span> - instead of two flags, you can pass an object with fields: upsert, multi
</span><span class='line'>  db.mycoll.validate<span class="o">(</span> &lt;full&gt; <span class="o">)</span> - SLOW
</span><span class='line'>  db.mycoll.getShardVersion<span class="o">()</span> - only <span class="k">for</span> use with sharding
</span><span class='line'>  db.mycoll.getShardDistribution<span class="o">()</span> - prints statistics about data distribution in the cluster
</span><span class='line'>  db.mycoll.getSplitKeysForChunks<span class="o">(</span> &lt;maxChunkSize&gt; <span class="o">)</span> - calculates split points over all chunks and returns splitter <span class="k">function</span>
</span></code></pre></td></tr></table></div></figure>


<p>sharding</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; sh.help<span class="o">()</span>
</span><span class='line'>  sh.addShard<span class="o">(</span> host <span class="o">)</span>                       server:port OR setname/server:port
</span><span class='line'>  sh.enableSharding<span class="o">(</span>dbname<span class="o">)</span>                 enables sharding on the database dbname
</span><span class='line'>  sh.shardCollection<span class="o">(</span>fullName,key,unique<span class="o">)</span>   shards the collection
</span><span class='line'>  sh.splitFind<span class="o">(</span>fullName,find<span class="o">)</span>               splits the chunk that find is in at the median
</span><span class='line'>  sh.splitAt<span class="o">(</span>fullName,middle<span class="o">)</span>               splits the chunk that middle is in at middle
</span><span class='line'>  sh.moveChunk<span class="o">(</span>fullName,find,to<span class="o">)</span>            move the chunk where <span class="s1">&#39;find&#39;</span> is to <span class="s1">&#39;to&#39;</span> <span class="o">(</span>name of shard<span class="o">)</span>
</span><span class='line'>  sh.setBalancerState<span class="o">(</span> &lt;bool on or not&gt; <span class="o">)</span>   turns the balancer on or off <span class="nb">true</span><span class="o">=</span>on, <span class="nb">false</span><span class="o">=</span>off
</span><span class='line'>  sh.getBalancerState<span class="o">()</span>                     <span class="k">return</span> <span class="nb">true </span><span class="k">if</span> enabled
</span><span class='line'>  sh.isBalancerRunning<span class="o">()</span>                    <span class="k">return</span> <span class="nb">true </span><span class="k">if</span> the balancer has work in progress on any mongos
</span><span class='line'>  sh.addShardTag<span class="o">(</span>shard,tag<span class="o">)</span>                 adds the tag to the shard
</span><span class='line'>  sh.removeShardTag<span class="o">(</span>shard,tag<span class="o">)</span>              removes the tag from the shard
</span><span class='line'>  sh.addTagRange<span class="o">(</span>fullName,min,max,tag<span class="o">)</span>      tags the specified range of the given collection
</span><span class='line'>  sh.status<span class="o">()</span>                               prints a general overview of the cluster
</span></code></pre></td></tr></table></div></figure>


<p>Replica</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; rs.help<span class="o">()</span>
</span><span class='line'>  rs.status<span class="o">()</span>                     <span class="o">{</span> replSetGetStatus : <span class="m">1</span> <span class="o">}</span> checks repl <span class="nb">set </span>status
</span><span class='line'>  rs.initiate<span class="o">()</span>                   <span class="o">{</span> replSetInitiate : null <span class="o">}</span> initiates <span class="nb">set </span>with default settings
</span><span class='line'>  rs.initiate<span class="o">(</span>cfg<span class="o">)</span>                <span class="o">{</span> replSetInitiate : cfg <span class="o">}</span> initiates <span class="nb">set </span>with configuration cfg
</span><span class='line'>  rs.conf<span class="o">()</span>                       get the current configuration object from local.system.replset
</span><span class='line'>  rs.reconfig<span class="o">(</span>cfg<span class="o">)</span>                updates the configuration of a running replica <span class="nb">set </span>with cfg <span class="o">(</span>disconnects<span class="o">)</span>
</span><span class='line'>  rs.add<span class="o">(</span>hostportstr<span class="o">)</span>             add a new member to the <span class="nb">set </span>with default attributes <span class="o">(</span>disconnects<span class="o">)</span>
</span><span class='line'>  rs.add<span class="o">(</span>membercfgobj<span class="o">)</span>            add a new member to the <span class="nb">set </span>with extra attributes <span class="o">(</span>disconnects<span class="o">)</span>
</span><span class='line'>  rs.addArb<span class="o">(</span>hostportstr<span class="o">)</span>          add a new member which is arbiterOnly:true <span class="o">(</span>disconnects<span class="o">)</span>
</span><span class='line'>  rs.stepDown<span class="o">([</span>secs<span class="o">])</span>             step down as primary <span class="o">(</span>momentarily<span class="o">)</span> <span class="o">(</span>disconnects<span class="o">)</span>
</span><span class='line'>  rs.syncFrom<span class="o">(</span>hostportstr<span class="o">)</span>        make a secondary to sync from the given member
</span><span class='line'>  rs.freeze<span class="o">(</span>secs<span class="o">)</span>                 make a node ineligible to become primary <span class="k">for</span> the <span class="nb">time </span>specified
</span><span class='line'>  rs.remove<span class="o">(</span>hostportstr<span class="o">)</span>          remove a host from the replica <span class="nb">set</span> <span class="o">(</span>disconnects<span class="o">)</span>
</span><span class='line'>  rs.slaveOk<span class="o">()</span>                    shorthand <span class="k">for</span> db.getMongo<span class="o">()</span>.setSlaveOk<span class="o">()</span>
</span><span class='line'>
</span><span class='line'>  db.isMaster<span class="o">()</span>                   check who is primary
</span><span class='line'>  db.printReplicationInfo<span class="o">()</span>       check oplog size and <span class="nb">time </span>range
</span><span class='line'>
</span><span class='line'>  reconfiguration helpers disconnect from the database so the shell will display
</span><span class='line'>  an error, even <span class="k">if</span> the <span class="nb">command </span>succeeds.
</span><span class='line'>  see also http://&lt;mongod_host&gt;:28017/_replSet <span class="k">for</span> additional diagnostic info
</span></code></pre></td></tr></table></div></figure>


<h4>Best Practices</h4>

<ul>
<li>query optimization</li>
</ul>


<h4>Performances</h4>

<h4>Scalability</h4>

<h2>Mongo Drivers</h2>

<h2>MongoDB Development Level</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>COMPONENTS
</span><span class='line'>
</span><span class='line'>  mongod - The database process.
</span><span class='line'>  mongos - Sharding controller.
</span><span class='line'>  mongo  - The database shell <span class="o">(</span>uses interactive javascript<span class="o">)</span>.
</span><span class='line'>
</span><span class='line'>UTILITIES
</span><span class='line'>
</span><span class='line'>  mongodump         - MongoDB dump tool - <span class="k">for</span> backups, snapshots, etc.
</span><span class='line'>  mongorestore      - MongoDB restore a dump
</span><span class='line'>  mongoexport       - Export a single collection to <span class="nb">test</span> <span class="o">(</span>JSON, CSV<span class="o">)</span>
</span><span class='line'>  mongoimport       - Import from JSON or CSV
</span><span class='line'>  mongofiles        - Utility <span class="k">for</span> putting and getting files from MongoDB GridFS
</span><span class='line'>  mongostat         - Show performance statistics
</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="https://2013.nosql-matters.org/bcn/wp-content/uploads/2013/12/storage-talk-mongodb.pdf">A Journey through the MongoDB Internals</a></li>
<li><a href="https://docs.mongodb.org/manual/core/distributed-write-operations/">MongoDB Documentation</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Troubleshooting a Slow Database]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/03/10/troubleshooting-a-slow-database/"/>
    <updated>2016-03-10T13:55:12+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/03/10/troubleshooting-a-slow-database</id>
    <content type="html"><![CDATA[<h2>SQL Server</h2>

<p>The causes for performance problems can be various, but the most common are a poorly designed databse, incorrectly configured system, insufficient disk space or other system resources, excessive query complication and recomplication, bad execution plans due to missing or outdated statistics, and queries or stored procedures that have long execution times due to improper design.</p>

<p>The most common SQL Server performance symptoms are</p>

<ul>
<li>CPU</li>
<li>Memory</li>
<li>Network</li>
<li>I/O</li>
<li>Slow running queries</li>
</ul>


<h3>CPU</h3>

<p>CPU bottlenecks are cuased by insufficient hardware resources. Troubleshooting starts with identifying the biggest CPU resource users. Occasional peaks in processor usage can be ignored, but if the processor is constantly under pressure, investigation is needed. Adding additional processors or using a more powerful one might not fix the problem, as badly designed processes can always use all CPU time. Query tuning, improving execution plans, and system reconfiguration can help. To avoid bottlenecks, it&rsquo;s recommended to have a dedicated server that will run only SQL Server, and to remove all other software to another machine.</p>

<p>To start troubleshooting the most common CPU performance issues, monitor % Processor Time. This counter is available in Performance Monitor. If its value is constantly higher than 80%, the processor is under pressure.</p>

<p>The counters that indicate most common causes for processor pressure are Batch Requests/sec, SQL Complications/sec, and SQL Recomplications/sec. These counters are available in Performance Monitor and in the <code>sys.dm_os_performance_counters</code> view.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">select</span> <span class="o">*</span> <span class="k">from</span> <span class="n">sys</span><span class="p">.</span><span class="n">dm_os_performance_counters</span>
</span><span class='line'><span class="k">where</span> <span class="n">counter_name</span> <span class="k">in</span> <span class="p">(</span><span class="s1">&#39;Batch Requests/sec&#39;</span><span class="p">,</span> <span class="s1">&#39;SQL Complications/sec&#39;</span><span class="p">,</span> <span class="s1">&#39;SQL Re-Compilations/sec&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">///////////////////////////////////////////</span>
</span><span class='line'>
</span><span class='line'><span class="k">DECLARE</span> <span class="o">@</span><span class="n">BatchRequests</span> <span class="nb">BIGINT</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">SELECT</span> <span class="o">@</span><span class="n">BatchRequests</span> <span class="o">=</span> <span class="n">cntr_value</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">sys</span><span class="p">.</span><span class="n">dm_os_performance_counters</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">counter_name</span> <span class="o">=</span> <span class="s1">&#39;Batch Requests/sec&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">WAITFOR</span> <span class="n">DELAY</span> <span class="s1">&#39;00:00:10&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">SELECT</span> <span class="p">(</span><span class="n">cntr_value</span> <span class="o">-</span> <span class="o">@</span><span class="n">BatchRequests</span><span class="p">)</span> <span class="o">/</span> <span class="mi">10</span> <span class="k">AS</span> <span class="s1">&#39;Batch Requests/sec&#39;</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">sys</span><span class="p">.</span><span class="n">dm_os_performance_counters</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">counter_name</span> <span class="o">=</span> <span class="s1">&#39;Batch Requests/sec&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Evaluations</p>

<ul>
<li>Batch Requests/sec value depends on hardware used, but it should be under 1000</li>
<li>SQL Complications/sec is less than 10% of Batch Requests/sec</li>
<li>SQL Re-Complications/sec is less than 10% of SQL Complications/sec</li>
</ul>


<h3>Memory</h3>

<p>Memory bottlenecks can result in slow application responsiveness, overall system slowdown, or even application crashing. It&rsquo;s recommended to identify when the system runs with insufficient memory, what applications use most of memory resources, whether there are bottlenecks for other system resources. Reviewing and tuning queries, memory reconfiguration, and adding more physical memory can help.</p>

<p>Memory bottlenecks are caused by limitations in available memory and memory pressure caused by SQL Server, system, or other application activity. Poor indexing requires table scans which in case of large tables means that a large number of rows is read from disk and handled in memory.</p>

<p>For memory problems, monitor the Memory Available KB performance counter. The normal values should be over 200 MB. If the value of Memory Available KB counter is lower than 100 MB for long time, it&rsquo;s a clear indication of insufficient memory on the server. This counter is available in Performance Monitor, and two more useful counters - Total Server Memory (KB) and Target Server Memory (KB) are available via the <code>sys.dm_os_performance_counters</code> view.</p>

<p>Another counter to monitor is Pages/sec, it is available in Performance Monitor. It shows the rate at which the pages are written from disk to RAM and read froom RAM to disk. The values higher than 50 show intensive memory activity and possible overhead and memory pressure that can lead to SQL Server performance degradation.</p>

<p>Checkpoint pages/sec and Lazy writes/sec indicate whether dirty pages are flushed to disk too often. Dirty pages are automatically flushed to disk at a checkpoint. If the available free space in the buffer cache between two checkpoints is low, a lazy write will occur to flush the pages from buffer to disk and free up memory. The Lazy Writes/sec value should be below 20. Both counters are available in Performance Monitor and the <code>sys.dm_os_performance_counters</code> view.</p>

<p>If the Lazy Writes/sec value is constantly above the threshold, check the Page Life Expectancy value. Values below 300 seconds indicate memory pressure. The counter is available in Performance Monitor and the <code>sys.dm_os_performance_counters</code> view.</p>

<p>Buffer Cache Hit Ratio shows the ratio of the data pages found and read from the SQL Server buffer cache and all data page requests.. If a page doesn&rsquo;t exist in the buffer cache, it has to be read disk, which downgrades performance. The recommended value is over 90. The counter is available in Perforamnce Monitor and the <code>sys.dm_os_performance_counter</code> view.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">Buffer</span> <span class="k">Cache</span> <span class="n">Hit</span> <span class="n">Ratio</span> <span class="o">%</span> <span class="o">=</span> <span class="mi">100</span> <span class="o">*</span> <span class="n">Buffer</span> <span class="k">Cache</span> <span class="n">Hit</span> <span class="n">Ratio</span> <span class="o">/</span> <span class="n">Buffer</span> <span class="k">Cache</span> <span class="n">Hit</span> <span class="n">Ratio</span> <span class="n">Base</span>
</span><span class='line'>                         <span class="o">=</span> <span class="mi">100</span> <span class="o">*</span> <span class="mi">1797</span> <span class="o">/</span> <span class="mi">1975</span>
</span><span class='line'>                         <span class="o">=</span> <span class="mi">90</span><span class="p">.</span><span class="mi">98</span><span class="o">%</span>
</span></code></pre></td></tr></table></div></figure>


<p>Evaluations</p>

<ul>
<li>Memory Available KB > 200 MB</li>
<li>Total Server Memory</li>
<li>Target Server Memory</li>
<li>Pages/sec &lt; 50</li>
<li>Writes/sec &lt; 20</li>
<li>Page Life Expectancy > 300 seconds</li>
<li>Buffer Cache Hit Ratio > 90</li>
</ul>


<h3>Network</h3>

<p>Network bottlenecks might not be instantly recognized, as they can at a first glance be considered as SQL Server performance issues caused by other resources. For example, a delay of data sent over a network can look like SQL Server slow response.</p>

<p>Network bottlenecks are caused by overload on a server or network, so the data cannot flow as expected.</p>

<p>Troubleshooting network problems should start with finding queries, functions, and stored procedures that have slow response time. If they are executed quickly, but with a large delay between two calls, it can be an indication of a network issue. SQL Server Profiler can be used to determine which queries, functions and stored procedures were executed.</p>

<h3>I/O</h3>

<p>I/O bottlenecks are caused by excessive reading and writing of database pages from and onto disk. A bottleneck is manifested through long response times, application slowdowns and tasks time-outs. If other applications use disk resources excessively, SQL Server might not get enogh disk reources for its normal operation and would have to wait to be able to read and write to disk.</p>

<p>I/O issues can be caused by slow hardware used, bad storage solution design, and configuration. Besides hardware components, such as disk types, disk array type, and RAID configuration that affect I/O performance, unnecessary requests made by a database also affect I/O traffic. Frequent index scans, inefficient queries, and out of date statistics can also cause I/O workload and bottlenecks.</p>

<p>For I/O problems, monitor disk-related counters: Average Disk Queue Length, Average Disk Sec/Read, Average Disk Sec/Write, % Disk Time, Average Disk Reads/Sec, and Average Disk Writes/Sec. All counters are available in Performance Monitor.</p>

<p>Average Disk Queue Length shows the average number of I/O operations that are waiting to be written to or read from disk and the number of currently processed reads and writes. The recommended value is below 2 per individual disk, and higher values indicate I/O bottlenecks.</p>

<p>Average Disk Sec/Read shows the average time in seconds needed to read data from disk. The recommended values are given for categories, where under 8ms is excellent performance, and higher than 20ms is a serious I/O issue.</p>

<p>Average Disk Sec/Write shows the average time in seconds needed to write data to disk. The performance is excellent if the value is below 1ms and bad if the counter value is higher than 4ms.</p>

<p>Average Disk Reads/Sec and Average Disk Writes/Sec show the rate of read and write operations on disk, respectively. Low values indicate slow disk I/O processing, and checking processor usage and disk-expensive queries is recommended. The normal values depend on disk specification and server configuration. These counters don&rsquo;t have a specific threshold, so it&rsquo;s recommended to monitor these metrics for a while and to determine treads and set a baseline.</p>

<p>Evaluations</p>

<ul>
<li>Average Disk Queue Length &lt; 2 per individual disk</li>
<li>Average Disk Sec/Read &lt; 8ms (if > 20ms -> serious I/O issue)</li>
<li>Average Disk Sec/Write &lt; 1ms (if > 4ms -> serious I/O issue)</li>
<li>% Disk Time</li>
<li>Average Disk Reads/Sec</li>
<li>Average Disk Writes/Sec</li>
</ul>


<h3>Slow running queries</h3>

<p>SQL Server performance is affected by many factors, the most common SQL Server performance killer are</p>

<ul>
<li>poor database design</li>
<li>poor indexing</li>
<li>poor query design</li>
<li>not reusable execution plans</li>
<li>frequent query recompilation</li>
<li>excessive fragmentation</li>
</ul>


<p>Slow running queries can be result of missing indexes, poor execution plans, bad application and schema design, etc.</p>

<p>An index is used to speed up data search and SQL query performance. The database indexes reduce the number of data pages that have to be read in order to find the specific record.</p>

<p>A table without a clustered index is called a heap, due to its unordered structure. Data in a heap table isn&rsquo;t sorted, usually the records are added one after another, as they are inserted into the table. They can also be rearranged by the database engine, but again, without a specific order. When you insert a lot of rows into a heap table, the new records are written on data pages without a specific order. Finding a record in a heap table can be compared to finding a specific leaf in a heap of leaves. It is inefficient and requires time.</p>

<p>A heap can have one or several nonclustered indexes, or no indexes at all.</p>

<p>A nonclustered index is made only of index pages that contain row locators (pointers) for records in data pages. It doesn&rsquo;t contain data pages, like clustered indexes.</p>

<p>A clustered index organizes table data, so data is queried quicker and more efficiently. A clustered index conosists of both index and data pages, while a heap table has no index pages; it consists only of data pages. In other words, it is not just an index, i.e. a pointer to the data row that contains the key value, but it also contains table data. The data in the clustered table is sorted using the values of the columns the clustered index is made of.</p>

<p>Finding a record from a table with a proper clustered index is quick and easy like finding a name in an alphabetically ordered list. A general recommendation for all SQL tables is to have a proper clustered index.</p>

<p>While there can be only one clustered index on a table, a table can have up to 999 nonclustered indexes.</p>

<p>Indexes can be created using T-SQL.</p>

<figure class='code'><figcaption><span>clustered index</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="p">[</span><span class="n">Person</span><span class="p">].[</span><span class="n">Address</span><span class="p">](</span>
</span><span class='line'>    <span class="p">[</span><span class="n">AddressID</span><span class="p">]</span> <span class="p">[</span><span class="nb">int</span><span class="p">]</span> <span class="k">IDENTITY</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">FOR</span> <span class="n">REPLICATION</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">AddressLine1</span><span class="p">]</span> <span class="p">[</span><span class="n">nvarchar</span><span class="p">](</span><span class="mi">60</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">AddressLine2</span><span class="p">]</span> <span class="p">[</span><span class="n">nvarchar</span><span class="p">](</span><span class="mi">60</span><span class="p">)</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">City</span><span class="p">]</span> <span class="p">[</span><span class="n">nvarchar</span><span class="p">](</span><span class="mi">30</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">CONSTRAINT</span> <span class="p">[</span><span class="n">PK_Address_AddressID</span><span class="p">]</span> <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="n">CLUSTERED</span><span class="p">(</span>
</span><span class='line'>    <span class="p">[</span><span class="n">AddressID</span><span class="p">]</span> <span class="k">ASC</span>
</span><span class='line'><span class="p">)</span> <span class="k">ON</span> <span class="p">[</span><span class="k">PRIMARY</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>When you execute the select statement on a clustered table where an ascending clustered index
is created, the results will be ordered ascending by the clustered key column. In this example,
it&rsquo;s the AddressID column.</p>

<figure class='code'><figcaption><span>nonclustered index</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="p">[</span><span class="n">Person</span><span class="p">].[</span><span class="n">Address4</span><span class="p">](</span>
</span><span class='line'>    <span class="p">[</span><span class="n">AddressID</span><span class="p">]</span> <span class="p">[</span><span class="nb">int</span><span class="p">]</span> <span class="k">IDENTITY</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">FOR</span> <span class="n">REPLICATION</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">AddressLine1</span><span class="p">]</span> <span class="p">[</span><span class="n">nvarchar</span><span class="p">](</span><span class="mi">60</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">AddressLine2</span><span class="p">]</span> <span class="p">[</span><span class="n">nvarchar</span><span class="p">](</span><span class="mi">60</span><span class="p">)</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">City</span><span class="p">]</span> <span class="p">[</span><span class="n">nvarchar</span><span class="p">](</span><span class="mi">30</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="n">NONCLUSTERED</span> <span class="k">INDEX</span> <span class="p">[</span><span class="n">IX_Address_StateProvinceID4</span><span class="p">]</span> <span class="k">ON</span> <span class="p">[</span><span class="n">Person</span><span class="p">].[</span><span class="n">Address4</span><span class="p">](</span>
</span><span class='line'>    <span class="p">[</span><span class="n">AddressID</span><span class="p">]</span> <span class="k">ASC</span>
</span><span class='line'><span class="p">)</span> <span class="k">ON</span> <span class="p">[</span><span class="k">PRIMARY</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>When searching for a specific record in a heap table, SQL Server has to go through all table
rows. This can be acceptable on a table with a small number of records.</p>

<p>As rows in a heap table are unordered, they are identified by a row identifier (RID) which
consists of the file number, page number, and slot number of the row.</p>

<p>It&rsquo;s not recommended to use a heap table if you&rsquo;re going to store a large number of records
in the table. SQL query execution on a table with millions of records without a clustered
index requires a lot of time. Also, if you need to get a sorted results list, it&rsquo;s easier
to define an ascending or descending clustered index, as shown in the examples above, than
to sort the unsorted reuslts set retrieved from a heap table. The same goes for grouping,
filtering by a value range.</p>

<p>Indexing strategy is complex; it depends on many factors, including</p>

<ul>
<li>database structure</li>
<li>queries</li>
<li>stored procedures used</li>
</ul>


<p>One of general recommendations is to create a clustered index on tables where data is frequently
queried. Although some DBAs and developers don&rsquo;t prefer having clustered indexes on tables frequently inserted or updated, others consider that a clustered index on the right column can improve
performance in these situations.</p>

<p>Creating a clustered index on every table is highly recommended, the challenge is to create
the right index. With a proper clustered index, less reads are required to retrieve the
records the records requested by a query or stored procedure. Therefore, fewer disk I/O
are performed and the operation is completed faster.</p>

<p>A clustered index provides more efficient search for values in a specific range. When you
already have a table where the records are sorted ascending by e.g. AddressID, it&rsquo;s easy
to find the rows where AddressID is between 100 and 200, or lower than 500.</p>

<p>One of the rare scenarios where a heap table can be a good practice is when the row
identifier is smaller than the clustered index.</p>

<p>Poor Indexing</p>

<p>Any SQL Server table configuration where performance suffers due to excessive, improper,
or missing indexes is considered to be poor indexing.</p>

<p>If indexes are not properly created, SQL Server has to go through more records in order
to retrieve the data requested by a query. Therefore, it uses more hardware resources
(proessor, memory, disk, and network) and obtaining the data lasts longer.</p>

<p>A wrong index can be an index created on a column that doesn&rsquo;t provide easier data
manipulation or an index created on multiple columns which instead of speeding up
queries, slows them down.</p>

<p>A table without a clustered index can also be considered as a poor indexing practice.
Execution of a SELECT statement, inserting, updating and deleting records is in most
cases slower on a heap table than on a clustered one.</p>

<p>Which columns to use to build an index?</p>

<p>Both clustered and nonclustered indexes can be built from one or more table columns.</p>

<p>When you create a new table with a primary key in a SQL Server database, a unique clustered
index is automatically created on the primary key column. Although this default action is
acceptable in most cases, this might not be the optimal clustered index.</p>

<p>The column used for a clustered index should be a unique, identity, or primary key, or
any other column where the value is increased for each new entry. As clustered indexes
sort the records based on the value, using a column already ordered ascending, such
as an identity column, is a good solution.</p>

<p>If a column where new values are not higher than previous is used for a clustered index,
adding each new row would require re-ordering, i.e. moving the whole row and placing it
to its proper location in accordance with clustered index ordering, thus splitting data
pages and affecting SQL Server performance. If such clustered index is created on a table
with frequent inserts and updates, it can cause performance degradation.</p>

<p>It&rsquo;s not recommended to use the primary key as a clustered key without checking whether
that is the optimal solution in your scenario first. Also, note the difference between
a primary key and clustered index - a primary key can&rsquo;t have duplicate or null values,
while a clustered index can.</p>

<p>Using a unique column for a clustered index enables more efficient search for a specifc
value. On the other hand, a column that frequently changes its value should not used
for a clustered index. Each change of of the column used for the clustered index
requires the records to be reordered. This re-ordering can easily be avoided by using
a column that is not updated frequently, or not updated at all.</p>

<p>Using a column that stores large data, such as BLOB columns (text, nvarchar(max), image, etc.),
and GUID columns is not recommended. Using large values to sort the data is not efficient,
and in case of GUID and image columns doesn&rsquo;t seem to make sense.</p>

<p>A clustered index should not be built on a column already used in a unique index.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="p">[</span><span class="n">Person</span><span class="p">].[</span><span class="n">Address</span><span class="p">](</span>
</span><span class='line'>    <span class="p">[</span><span class="n">AddressID</span><span class="p">]</span> <span class="p">[</span><span class="nb">int</span><span class="p">]</span> <span class="k">IDENTITY</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">FOR</span> <span class="n">REPLICATION</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">AddressLine1</span><span class="p">]</span> <span class="p">[</span><span class="n">nvarchar</span><span class="p">](</span><span class="mi">60</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">AddressLine2</span><span class="p">]</span> <span class="p">[</span><span class="n">nvarchar</span><span class="p">](</span><span class="mi">60</span><span class="p">)</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">City</span><span class="p">]</span> <span class="p">[</span><span class="n">nvarchar</span><span class="p">](</span><span class="mi">30</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">StateProvinceID</span><span class="p">]</span> <span class="p">[</span><span class="nb">int</span><span class="p">]</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">PostalCode</span><span class="p">]</span> <span class="p">[</span><span class="n">nvarchar</span><span class="p">](</span><span class="mi">15</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">SpatialLocation</span><span class="p">]</span> <span class="p">[</span><span class="n">geography</span><span class="p">]</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">rowguid</span><span class="p">]</span> <span class="p">[</span><span class="n">uniqueidentifier</span><span class="p">]</span> <span class="n">ROWGUIDCOL</span> <span class="k">NOT</span> <span class="n">BULL</span><span class="p">,</span>
</span><span class='line'>    <span class="p">[</span><span class="n">ModifiedDate</span><span class="p">]</span> <span class="p">[</span><span class="n">datetime</span><span class="p">]</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="k">CONSTRAINT</span> <span class="p">[</span><span class="n">PK_Address_AddressID</span><span class="p">]</span> <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="n">CLUSTERED</span> <span class="p">([</span><span class="n">AddressID</span> <span class="k">ASC</span><span class="p">]</span> <span class="k">WITH</span><span class="p">(</span>
</span><span class='line'>        <span class="n">PAD_INDEX</span> <span class="o">=</span> <span class="k">OFF</span><span class="p">,</span>
</span><span class='line'>        <span class="n">STATISTICS_NORECOMPUTE</span> <span class="o">=</span> <span class="k">OFF</span><span class="p">,</span>
</span><span class='line'>        <span class="n">IGNORE_DUP_KEY</span> <span class="o">=</span> <span class="k">OFF</span><span class="p">,</span>
</span><span class='line'>        <span class="n">ALLOW_ROW_LOCKS</span> <span class="o">=</span> <span class="k">ON</span><span class="p">,</span>
</span><span class='line'>        <span class="n">ALLOW_PAGE_LOCKS</span> <span class="o">=</span> <span class="k">ON</span>
</span><span class='line'>        <span class="p">)</span> <span class="k">ON</span> <span class="p">[</span><span class="k">PRIMARY</span><span class="p">]</span>
</span><span class='line'>    <span class="p">)</span> <span class="k">ON</span> <span class="p">[</span><span class="k">PRIMARY</span><span class="p">]</span> <span class="n">TEXTIMAGE_ON</span> <span class="p">[</span><span class="k">PRIMARY</span><span class="p">]</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="k">GO</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="n">CLUSTERED</span> <span class="k">INDEX</span> <span class="p">[</span><span class="n">Clustered_City_Address1</span><span class="p">]</span> <span class="k">ON</span> <span class="p">[</span><span class="n">Person</span><span class="p">].[</span><span class="n">Address1</span><span class="p">](</span>
</span><span class='line'>    <span class="p">[</span><span class="n">City</span><span class="p">]</span> <span class="k">ASC</span>
</span><span class='line'><span class="p">)</span> <span class="k">WITH</span> <span class="p">(</span>
</span><span class='line'>        <span class="n">PAD_INDEX</span> <span class="o">=</span> <span class="k">OFF</span><span class="p">,</span>
</span><span class='line'>        <span class="n">STATISTICS_NORECOMPUTE</span> <span class="o">=</span> <span class="k">OFF</span><span class="p">,</span>
</span><span class='line'>        <span class="n">SORT_IN_TEMPDB</span> <span class="o">=</span> <span class="k">OFF</span><span class="p">,</span>
</span><span class='line'>        <span class="n">DROP_EXISTING</span> <span class="o">=</span> <span class="k">OFF</span><span class="p">,</span>
</span><span class='line'>        <span class="n">ONLINE</span> <span class="o">=</span> <span class="k">OFF</span><span class="p">,</span>
</span><span class='line'>        <span class="n">ALLOW_ROW_LOCKS</span> <span class="o">=</span> <span class="k">ON</span><span class="p">,</span>
</span><span class='line'>        <span class="n">ALLOW_PAGE_LOCKS</span> <span class="o">=</span> <span class="k">ON</span>
</span><span class='line'>    <span class="p">)</span> <span class="k">ON</span> <span class="p">[</span><span class="k">PRIMARY</span><span class="p">]</span>
</span><span class='line'><span class="k">GO</span>
</span></code></pre></td></tr></table></div></figure>


<p>Disadvantages of using indexes</p>

<p>As noted above, wrong indexes can significantly slow down SQL Server Performance.
But even the indexes that provide better performance for some operations, can
add overhead for others.</p>

<p>While executing a SELECT statement is faster on a clustered table, INSERTs, UPDATEs,
and DELETEs require more time, as not only data is updated, but the indexes are updated also.
For clustered indexes, the time increase is more significant, as the records have to maintain
the correct order in data pages. Whether a new record is inserted, or an existing deleted or
updated, this usually requires the records to be reordered.</p>

<p>Another cost of having indexes on tables is that more data pages and memory is used.</p>

<p>The operator costs from the Actual Query Execution Plan for the tables mentioned above
are shown below. The table with the clustered index on the primary key column is
[Person].[Address], the table with the clustered index on a non-primary key column
is [Person].[Address1]. We created two more copies of the the same table, one with
a nonclustered index on the primary key column and the other without any indexes.
The data in all four tables is identical.</p>

<p>When it comes to executing a SELECT statement, the cost is the lowest when the list
of returned columns is specified and the statement is executed on the table where
the clustered index is created on the primary key column. The cost can be higher
for a table with a non-optimal clustered index, then on tables with a nonclustered index
or no indexes at all.</p>

<p>While executing a SELECT statement is faster on a clustered table, executing DELETEs
and UPDATEs requires more time. For the latter statements, the performance of a table
with a nonclustered index is the same as for the table with a clustered index on a
column other than the primary key.</p>

<p>Note that INSERTs on a table without indexes is the fastest of all - this is expected
as neither re-ordering nor index updating is required. On the same table, executing
UPDATEs and DELETEs is the most expensive. Again, this is expected, as SQL Server
requires most time to find the specific records in such table.</p>

<p>As shown, indexes can speed up some queries and slow down others.</p>

<h4>queries</h4>

<ul>
<li>T-SQL</li>
<li>DML: SELECT, INSERT, DELETE, UPDATE</li>
<li>conditional statements: IF&hellip;THEN&hellip;ELSE</li>
<li>relational operators: table scans, aggregations, joins</li>
<li>declare cursor</li>
</ul>


<p>T-SQL statements and stored procedures are presented as tree roots. Statements called
by the stored procedure are presented as children in the tree.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">EXEC</span> <span class="n">sp_who2</span> <span class="mi">243</span>
</span></code></pre></td></tr></table></div></figure>


<p>Data manipulation language (DML) statements SELECT, INSERT, DELETE, and UPDATE are
also presented as tree roots. The first child represents the execution plan for
the statement. If the statement fires a trigger, it&rsquo;s represented as the second child.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">DELETE</span> <span class="k">FROM</span> <span class="p">[</span><span class="n">dbo</span><span class="p">].[</span><span class="n">AUDIT_LOG_TRANSACTIONS</span><span class="p">]</span>
</span><span class='line'><span class="k">WHERE</span> <span class="p">[</span><span class="n">AUDIT_LOG_TRANSACTION_ID</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>The conditional statements, such as <code>IF...THEN...ELSE</code> are presented with 3 children.
WHILE and DO-UNTIL statements are represented similarly.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">IF</span>
</span><span class='line'>    <span class="p">(</span><span class="k">SELECT</span> <span class="k">COUNT</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">FROM</span> <span class="p">[</span><span class="n">Person</span><span class="p">].[</span><span class="n">Address</span><span class="p">]</span> <span class="k">WHERE</span> <span class="n">City</span> <span class="k">LIKE</span> <span class="s1">&#39;Bothell&#39;</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span>
</span><span class='line'>    <span class="p">(</span><span class="k">SELECT</span> <span class="k">COUNT</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">FROM</span> <span class="p">[</span><span class="n">Person</span><span class="p">].[</span><span class="n">Address</span><span class="p">]</span> <span class="k">WHERE</span> <span class="n">City</span> <span class="k">LIKE</span> <span class="s1">&#39;Bothell&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">Else</span>
</span><span class='line'>    <span class="p">(</span><span class="k">SELECT</span> <span class="k">COUNT</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">FROM</span> <span class="p">[</span><span class="n">Person</span><span class="p">].[</span><span class="n">Address</span><span class="p">]</span> <span class="k">WHERE</span> <span class="n">AddressLine2</span> <span class="k">is</span> <span class="k">null</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Relational operators, such as table scans, aggregations, and joins are presented in the tree
as nodes.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="n">PrV</span><span class="p">.</span><span class="n">Standardprice</span><span class="p">,</span> <span class="n">V</span><span class="p">.</span><span class="n">Name</span><span class="p">,</span> <span class="n">V</span><span class="p">.</span><span class="n">CreditRating</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">Purchasing</span><span class="p">.</span><span class="n">ProductVendor</span> <span class="k">AS</span> <span class="n">PrV</span>
</span><span class='line'><span class="k">JOIN</span> <span class="n">Purchasing</span><span class="p">.</span><span class="n">Vendor</span> <span class="k">AS</span> <span class="n">V</span>
</span><span class='line'><span class="k">ON</span> <span class="p">(</span><span class="n">PrV</span><span class="p">.</span><span class="n">BusinessEntityID</span> <span class="o">=</span> <span class="n">V</span><span class="p">.</span><span class="n">BusinessEntityID</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The DECLARE CURSOR statement is shown as the tree root. The statement it refers to is
shown as a child.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">DECLARE</span> <span class="n">vend_cursor</span> <span class="k">CURSOR</span>
</span><span class='line'><span class="k">FOR</span> <span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">Purchasing</span><span class="p">.</span><span class="n">Vendor</span>
</span><span class='line'><span class="k">OPEN</span> <span class="n">vend_cursor</span>
</span><span class='line'><span class="k">FETCH</span> <span class="k">NEXT</span> <span class="k">FROM</span> <span class="n">vend_cursor</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ul>
<li><a href="http://www.sqlshack.com/dba-guide-sql-server-performance-troubleshooting-part-1-problems-performance-metrics/">DBA Guide: SQL Server Performance Troubleshooting</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Caffe on Ubuntu With VirtualBox]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/02/27/installing-caffe-on-ubuntu-with-virtualbox/"/>
    <updated>2016-02-27T22:47:46+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/02/27/installing-caffe-on-ubuntu-with-virtualbox</id>
    <content type="html"><![CDATA[<h2>Ubuntu + VirtualBox</h2>

<ul>
<li>download Ubuntu ISO file</li>
<li>create a new VM in VirtualBox (Linux/Ubuntu/64bit/DynamicHD/8GbRAM/…)</li>
<li>install Ubuntu OS and update and upgrade</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install build-essential
</span><span class='line'><span class="nv">$ </span>sudo apt-get install linux-headers-<span class="sb">`</span>uname -r<span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure>


<p>VirtualBox</p>

<ul>
<li>VirtualBox ToolBar -> Devices -> Insert Guest Additions CD Image -> Install GuestAddition</li>
<li>VirtualBox VM -> Preferences -> General -> Advanced -> Shared Clipboard</li>
</ul>


<h2>Cuda</h2>

<p><a href="https://developer.nvidia.com/cuda-downloads">CUDA 7.5</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install curl
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ~/Downloads/
</span><span class='line'><span class="nv">$ </span>curl -O <span class="s2">&quot;http://developer.download.nvidia.com/compute/cuda/6_5/rel/installers/cuda_6.5.14_linux_64.run&quot;</span>
</span><span class='line'><span class="nv">$ </span>chmod +x cuda_6.5.14_linux_64.run
</span><span class='line'><span class="nv">$ </span>sudo ./cuda_6.5.14_linux_64.run --kernel-source-path<span class="o">=</span>/usr/src/linux-headers-<span class="sb">`</span>uname -r<span class="sb">`</span>/
</span><span class='line'><span class="c"># - Accept the EULA</span>
</span><span class='line'><span class="c"># - DO NOT INSTALL DRIVER</span>
</span><span class='line'><span class="c"># - Install the toolkit</span>
</span><span class='line'><span class="c"># - Install the symbolic link</span>
</span><span class='line'><span class="c"># - Install samples</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;export PATH=/usr/local/cuda/bin:$PATH&#39;</span> &gt;&gt; ~/.bashrc
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/lib&#39;</span> &gt;&gt; ~/.bashrc
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bashrc
</span></code></pre></td></tr></table></div></figure>


<h2>Caffe</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-dev libhdf5-serial-dev protobuf-compiler gfortran libjpeg62 libfreeimage-dev libatlas-base-dev git python-dev python-pip libgoogle-glog-dev libbz2-dev libxml2-dev libxslt-dev libffi-dev libssl-dev libgflags-dev liblmdb-dev python-yaml
</span><span class='line'><span class="nv">$ </span>sudo easy_install pillow
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ~
</span><span class='line'><span class="nv">$ </span>git clone https://github.com/BVLC/caffe.git
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>caffe
</span><span class='line'><span class="nv">$ </span>cat python/requirements.txt <span class="p">|</span> xargs -L <span class="m">1</span> sudo pip install
</span><span class='line'><span class="nv">$ </span>sudo ln -s /usr/include/python2.7/ /usr/local/include/python2.7
</span><span class='line'><span class="nv">$ </span>sudo ln -s /usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy/ /usr/local/include/python2.7/numpy
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cp Makefile.config.example Makefile.config
</span><span class='line'><span class="nv">$ </span>nano Makefile.config
</span><span class='line'><span class="c"># - uncomment # CPU_ONLY := 1</span>
</span><span class='line'><span class="c"># - PYTHON_INCLUDE: </span>
</span><span class='line'><span class="c">#   - /usr/lib/python2.7/dist-packages/numpy/core/include -&gt; /usr/local/lib/python2.7/dist-packages/numpy/core/include</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>make pycaffe
</span><span class='line'><span class="nv">$ </span>make all
</span><span class='line'><span class="nv">$ </span>make <span class="nb">test</span>
</span><span class='line'><span class="c"># if something error, then it could not recompile, try to delete build and .build_release</span>
</span><span class='line'><span class="c"># and then rerun the commands</span>
</span><span class='line'><span class="c"># or use `make clean`</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Test</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./scripts/download_model_binary.py models/bvlc_reference_caffenet
</span><span class='line'><span class="nv">$ </span>./data/ilsvrc12/get_ilsvrc_aux.sh
</span></code></pre></td></tr></table></div></figure>


<h2>Reference</h2>

<p><a href="https://github.com/BVLC/caffe/wiki/Ubuntu-14.04-VirtualBox-VM">Ubuntu 14.04 VirtualBox VM</a></p>
]]></content>
  </entry>
  
</feed>
