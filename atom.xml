<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[K]]></title>
  <link href="http://k.arttechresearch.com/atom.xml" rel="self"/>
  <link href="http://k.arttechresearch.com/"/>
  <updated>2016-02-07T18:22:41+08:00</updated>
  <id>http://k.arttechresearch.com/</id>
  <author>
    <name><![CDATA[K]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Installing Caffe on Ubuntu 14.04]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/02/03/installing-caffe-on-ubuntu-14-dot-04/"/>
    <updated>2016-02-03T05:07:12+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/02/03/installing-caffe-on-ubuntu-14-dot-04</id>
    <content type="html"><![CDATA[<h2>Prequisitions</h2>

<ul>
<li>Vagrant/VirtualBox</li>
<li>Ubuntu 14.04</li>
<li>VM Memory: 4096 MB</li>
</ul>


<h2>Caffe Installation</h2>

<p>Requirements</p>

<ul>
<li>CUDA</li>
<li>BLAS</li>
<li>OpenCV</li>
<li>Anaconda</li>
<li>Boost</li>
<li>Caffe dependencies</li>
<li>Protobuf</li>
<li>Caffe</li>
</ul>


<h3>CUDA</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># reference: https://gist.github.com/titipata/f0ef48ad2f0ebc07bcb9</span>
</span><span class='line'><span class="c"># check version</span>
</span><span class='line'><span class="nv">$ </span>lspci <span class="p">|</span> grep -i nvidia
</span><span class='line'><span class="nv">$ </span>uname -m <span class="o">&amp;&amp;</span> cat /etc/*release
</span><span class='line'><span class="nv">$ </span>gcc --version
</span><span class='line'>
</span><span class='line'><span class="c"># CUDA</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /tmp
</span><span class='line'><span class="nv">$ </span>wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_6.5-14_amd64.deb
</span><span class='line'><span class="nv">$ </span>sudo dpkg -i cuda-repo-ubuntu1404_6.5-14_amd64.deb
</span><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudo apt-get install cuda
</span><span class='line'><span class="nv">$ </span>sudo reboot
</span></code></pre></td></tr></table></div></figure>


<h3>BLAS</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install libopenblas-dev
</span></code></pre></td></tr></table></div></figure>


<h3>OpenCV</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install git unzip
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /tmp
</span><span class='line'><span class="nv">$ </span>wget https://raw.githubusercontent.com/jayrambhia/Install-OpenCV/master/Ubuntu/2.4/opencv2_4_9.sh
</span><span class='line'><span class="nv">$ </span>sudo chmod +x opencv2_4_9.sh
</span><span class='line'><span class="nv">$ </span>./opencv2_4_9.sh
</span></code></pre></td></tr></table></div></figure>


<h3>Anaconda</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /tmp
</span><span class='line'><span class="nv">$ </span>wget http://09c8d0b2229f813c1b93-c95ac804525aac4b6dba79b00b39d1d3.r79.cf1.rackcdn.com/Anaconda-2.1.0-Linux-x86_64.sh
</span><span class='line'><span class="nv">$ </span>sudo bash Anaconda-2.1.0-Linux-x86.sh
</span><span class='line'><span class="c"># path: /usr/local/anaconda</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Boost</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install libboost-all-dev
</span></code></pre></td></tr></table></div></figure>


<h3>Caffe dependencies</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># reference: http://caffe.berkeleyvision.org/install_apt.html</span>
</span><span class='line'><span class="nv">$ </span>sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libboost-all-devlibhdf5-serial-dev
</span><span class='line'><span class="nv">$ </span>sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev protobuf-compiler
</span></code></pre></td></tr></table></div></figure>


<h3>Protobuf</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install python-pip
</span><span class='line'><span class="nv">$ </span>sudo pip install protobuf
</span></code></pre></td></tr></table></div></figure>


<h3>Caffe</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /usr/local
</span><span class='line'><span class="nv">$ </span>sudo git clone https://github.com/BVLC/caffe
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>caffe/
</span><span class='line'><span class="nv">$ </span>sudo cp Makefile.config.example Makefile.config
</span><span class='line'><span class="c"># modify Makefile.config if needed</span>
</span><span class='line'><span class="c">###################################################</span>
</span><span class='line'><span class="c"># CPU-only switch (uncomment to build without GPU support).</span>
</span><span class='line'>CPU_ONLY :<span class="o">=</span> 1
</span><span class='line'><span class="c">###################################################</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo make all
</span><span class='line'><span class="nv">$ </span>sudo make <span class="nb">test</span>
</span><span class='line'><span class="nv">$ </span>sudo vim ~/.bashrc              <span class="c"># update paths</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bashrc
</span><span class='line'><span class="nv">$ </span>make runtest
</span><span class='line'>...
</span><span class='line'><span class="o">[</span>----------<span class="o">]</span> Global <span class="nb">test </span>environment tear-down
</span><span class='line'><span class="o">[==========]</span> <span class="m">1019</span> tests from <span class="m">144</span> <span class="nb">test </span>cases ran. <span class="o">(</span><span class="m">34669</span> ms total<span class="o">)</span>
</span><span class='line'><span class="o">[</span>  PASSED  <span class="o">]</span> <span class="m">1019</span> tests.
</span></code></pre></td></tr></table></div></figure>


<p><code>~/.bashrc</code> config:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># CUDA</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span>/usr/local/cuda-7.5/bin:<span class="nv">$PATH</span>
</span><span class='line'><span class="nb">export </span><span class="nv">LD_LIBRARY_PATH</span><span class="o">=</span>/usr/local/cuda-7.5/lib64:<span class="nv">$LD_LIBRARY_PATH</span>
</span><span class='line'><span class="nb">export </span>PATH
</span><span class='line'><span class="c"># Anaconda</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span>/usr/local/anaconda/bin:<span class="nv">$PATH</span>
</span><span class='line'><span class="c"># Caffe Root</span>
</span><span class='line'><span class="nb">export </span><span class="nv">CAFFE_ROOT</span><span class="o">=</span>/usr/local/caffe
</span></code></pre></td></tr></table></div></figure>


<p>config python library</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo make pycaffe
</span><span class='line'><span class="nv">$ </span>sudo make distribute
</span><span class='line'><span class="c"># make dir for custom python modules, install caffe</span>
</span><span class='line'><span class="nv">$ </span>mkdir ~/pycaffe
</span><span class='line'><span class="nv">$ </span>mv distribute/python/caffe ~/pycaffe
</span><span class='line'><span class="c">#################################################################</span>
</span><span class='line'><span class="c"># set PYTHONPATH (this should go in your .bashrc or whatever</span>
</span><span class='line'><span class="c"># export PYTHONPATH=${HOME}/pycaffe:$PYTHONPATH</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PYTHONPATH</span><span class="o">=</span>/usr/local/caffe/python:<span class="nv">$PYTHONPATH</span>
</span><span class='line'><span class="c">#################################################################</span>
</span></code></pre></td></tr></table></div></figure>


<p>Install the python dependencies</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /usr/local/cafffe/python
</span><span class='line'><span class="nv">$ </span>sudo pip install -r requirements.txt
</span></code></pre></td></tr></table></div></figure>


<p>import caffe on IPython</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># fixed Anaconda issue</span>
</span><span class='line'><span class="nv">$ </span>sudo rm /usr/local/anaconda/lib/libm.*
</span><span class='line'><span class="nv">$ </span>ipython
</span><span class='line'><span class="nv">$ </span>conda install protobuf
</span><span class='line'><span class="c"># import caffe</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /usr/local/caffe/python
</span><span class='line'><span class="nv">$ </span>import caffe
</span></code></pre></td></tr></table></div></figure>


<p>import caffe on python script</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># import matplotlib for fixing the issue when importing caffe</span>
</span><span class='line'><span class="c"># so, matplotlib is a must</span>
</span><span class='line'>import matplotlib
</span><span class='line'>matplotlib.use<span class="o">(</span><span class="s1">&#39;Agg&#39;</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>import sys
</span><span class='line'>sys.path.insert<span class="o">(</span>0, <span class="s1">&#39;/usr/local/caffe/python/&#39;</span><span class="o">)</span>
</span><span class='line'>import caffe
</span></code></pre></td></tr></table></div></figure>


<h2>DeepDream</h2>

<h3>IPython Notebook (Optional)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo pip install ipython
</span><span class='line'><span class="nv">$ </span>sudo pip install jupyter
</span><span class='line'><span class="nv">$ </span>ipython notebook --ip 0.0.0.0
</span></code></pre></td></tr></table></div></figure>


<p>ipython notebook url: <a href="http://localhost:8888">http://localhost:8888</a></p>

<h3>Dependencies</h3>

<ul>
<li>Python: scipy, numpy, pillow</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># python</span>
</span><span class='line'><span class="nv">$ </span>sudo apt-get install python-dev python-virtualenv
</span><span class='line'><span class="c"># pillow</span>
</span><span class='line'><span class="nv">$ </span>sudo apt-get install libtiff5-dev libjpeg8-dev zlib1g-dev <span class="se">\</span>
</span><span class='line'>libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python-tk
</span><span class='line'><span class="c"># scipy</span>
</span><span class='line'><span class="nv">$ </span>sudo apt-get install libblas-dev liblapack-dev libatlas-base-dev gfortran
</span></code></pre></td></tr></table></div></figure>


<p><code>base.txt</code>: python requirements</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># NOTE: if it doesn&#39;t run on anaconda, `scikit-image` and `cython` </span>
</span><span class='line'><span class="c"># must be installed on PYTHONPATH. Otherwise, it will show some </span>
</span><span class='line'><span class="c"># errors when `import caffe`.</span>
</span><span class='line'><span class="nv">numpy</span><span class="o">==</span>1.10.4
</span><span class='line'><span class="nv">Pillow</span><span class="o">==</span>3.1.0
</span><span class='line'><span class="nv">scipy</span><span class="o">==</span>0.17.0
</span><span class='line'><span class="nv">protobuf</span><span class="o">==</span>2.6.1
</span><span class='line'>scikit-image<span class="o">==</span>0.11.3
</span><span class='line'><span class="nv">cython</span><span class="o">==</span>0.23.4
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo pip install -r base.txt
</span></code></pre></td></tr></table></div></figure>


<h3>Repo</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://github.com/google/deepdream.git
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>deepdream
</span></code></pre></td></tr></table></div></figure>


<h3>Models</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget wget -P /usr/local/caffe/models/bvlc_googlenet http://dl.caffe.berkeleyvision.org/bvlc_googlenet.caffemodel
</span></code></pre></td></tr></table></div></figure>


<h3>Run</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ipython notebook ./dream.ipynb
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solving a Technical Question]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/14/solving-a-technical-question/"/>
    <updated>2016-01-14T15:24:40+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/14/solving-a-technical-question</id>
    <content type="html"><![CDATA[<p>Source: Cracking the Coding Interview</p>

<p>5 Steps</p>

<ol>
<li>Ask questions.</li>
<li>Design a algorithm.</li>
<li>Pseudocode</li>
<li>Code</li>
<li>Test</li>
</ol>


<h2>1. Ask Questions</h2>

<ul>
<li>What are the data types?</li>
<li>How much data is there?</li>
<li>What assuptions do you need to solve the problem?</li>
<li>WHo is the user?</li>
</ul>


<h2>2. Design a algorithm</h2>

<ul>
<li>What are its space and time complexity?</li>
<li>What happens if there is a lot of data?</li>
<li>Does your design cause other issues? For example, if you&rsquo;re creating a modified version of a binary search tree, did your design impact the time for insert, find, or delete?</li>
<li>If there are other issues or limitations, did you make the right trade-offs? For which scenarios might the trade-off be less optimal?</li>
<li>If they gave you specific data (e.g., mentioned that the data is ages, or in sorted order), have you leveraged that information? Usually there&rsquo;s a reason that an inter- viewer gave you specific information.</li>
</ul>


<p>approaches</p>

<ul>
<li>examplify</li>
<li>pattern matching</li>
<li>simplify and generalize</li>
<li>base case and build</li>
<li>data structure brainstorm</li>
</ul>


<h2>3. Pseudocode</h2>

<h2>4. Code</h2>

<ul>
<li>correct: expected and unexpected inputs</li>
<li>efficient: time and space</li>
<li>simple</li>
<li>readable</li>
<li>maintainable</li>
</ul>


<h2>5. Test</h2>

<ul>
<li>Extremecases: 0, negative, null, maximums, minimums.</li>
<li>User error:What happens if the user passes in null or a negative value?</li>
<li>General cases: Test the normal case.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Power Table]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/14/power-table/"/>
    <updated>2016-01-14T15:08:07+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/14/power-table</id>
    <content type="html"><![CDATA[<table>
<thead>
<tr>
<th style="text-align:left;"> Power of 2 </th>
<th style="text-align:left;"> Exact Value (X)   </th>
<th style="text-align:left;"> Approx. Value </th>
<th style="text-align:left;"> X Bytes into MB, GB, etc </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> 7          </td>
<td style="text-align:left;"> 128               </td>
<td style="text-align:left;">               </td>
<td style="text-align:left;">                          </td>
</tr>
<tr>
<td style="text-align:left;"> 8          </td>
<td style="text-align:left;"> 256               </td>
<td style="text-align:left;">               </td>
<td style="text-align:left;">                          </td>
</tr>
<tr>
<td style="text-align:left;"> 10         </td>
<td style="text-align:left;"> 1024              </td>
<td style="text-align:left;"> 1 thousand    </td>
<td style="text-align:left;"> 1 K                      </td>
</tr>
<tr>
<td style="text-align:left;"> 16         </td>
<td style="text-align:left;"> 65,536            </td>
<td style="text-align:left;">               </td>
<td style="text-align:left;"> 64 K                     </td>
</tr>
<tr>
<td style="text-align:left;"> 20         </td>
<td style="text-align:left;"> 1,048,576         </td>
<td style="text-align:left;"> 1 million     </td>
<td style="text-align:left;"> 1 MB                     </td>
</tr>
<tr>
<td style="text-align:left;"> 30         </td>
<td style="text-align:left;"> 1,073,741,824     </td>
<td style="text-align:left;"> 1 billion     </td>
<td style="text-align:left;"> 1 GB                     </td>
</tr>
<tr>
<td style="text-align:left;"> 32         </td>
<td style="text-align:left;"> 4,294,967,296     </td>
<td style="text-align:left;">               </td>
<td style="text-align:left;"> 4 GB                     </td>
</tr>
<tr>
<td style="text-align:left;"> 40         </td>
<td style="text-align:left;"> 1,099,511,627,776 </td>
<td style="text-align:left;"> 1 trillion    </td>
<td style="text-align:left;"> 1 TB                     </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Data Visualization With D3]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/14/data-visualization-with-d3/"/>
    <updated>2016-01-14T13:06:49+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/14/data-visualization-with-d3</id>
    <content type="html"><![CDATA[<ul>
<li>Data Visualization</li>
<li>Charting</li>
<li>D3</li>
</ul>


<h2>Data Visualization</h2>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/19/7b/75/197b75f0249050370e5b248e6e854be2.jpg" /></p>

<h2>Charting</h2>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/ba/b3/69/bab36904d402394edb45d3cb15756fdf.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/94/6b/25/946b252a45ff38bbadfed39bf12b6acc.jpg" /></p>

<h2>D3</h2>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/d3/2e/19/d32e192b8b34ca65d646f774ae67ce91.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/c1/09/e7/c109e7bd15ea7b7a53ff1cdea2563d24.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/b6/38/72/b638722c1fd3b4ae0a612f9d0fca208b.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/87/75/ac/8775ac7f7c6313e014445fcf979b88c2.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/91/3a/d1/913ad1590890d42d7a351b51806c5d68.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Model Building and Validation]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/14/model-building-and-validation/"/>
    <updated>2016-01-14T12:43:15+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/14/model-building-and-validation</id>
    <content type="html"><![CDATA[<p>QMV Process</p>

<ul>
<li>Q: Questioning</li>
<li>M: Modelling</li>
<li>V: Validation</li>
</ul>


<h2>QMV Process</h2>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/6a/1f/04/6a1f048309142c91cd22ea6c2cc4058a.jpg" /></p>

<h2>Questioning</h2>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/cf/90/db/cf90dbb0d7938dc756a50ca5626def63.jpg" /></p>

<h2>Modelling</h2>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/43/ac/78/43ac78c79a3c72b654a6aa29b2ae1543.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/d3/5c/92/d35c92eeb5d2abcb049b2cc163214f42.jpg" /></p>

<h2>Validation</h2>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/62/fe/6e/62fe6ecdddbde137e5e52204ca522947.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/da/f6/be/daf6be7b4e7a69ce774b04f7e8a08738.jpg" /></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/6c/c0/86/6cc0860c7a360a43e32edea481c7ac80.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Commands]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/08/git-commands/"/>
    <updated>2016-01-08T18:06:55+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/08/git-commands</id>
    <content type="html"><![CDATA[<ul>
<li>config</li>
<li>remote</li>
<li>pull/commit</li>
<li>log</li>
</ul>


<h2>Config</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git config --global user.name <span class="s1">&#39;xxx&#39;</span>
</span><span class='line'><span class="nv">$ </span>git config --global user.email <span class="s1">&#39;xxx&#39;</span>
</span><span class='line'><span class="nv">$ </span>git config --local user.name <span class="s1">&#39;xxx&#39;</span>
</span><span class='line'><span class="nv">$ </span>git config --local user.email <span class="s1">&#39;xxx&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>git config --global alias.logtree <span class="s2">&quot;log --color --graph --pretty=format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#39; --abbrev-commit&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Remote</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git remote add origin https://xxxx                    <span class="c"># set remote url</span>
</span><span class='line'><span class="nv">$ </span>git remote <span class="nb">set</span>-url origin https://xxxx                <span class="c"># update remote url</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Pull</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git pull --rebase origin branch_name
</span><span class='line'><span class="nv">$ </span>git fetch origin
</span><span class='line'><span class="nv">$ </span>git rebase origin
</span></code></pre></td></tr></table></div></figure>


<h2>Commit</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git diff &lt;file&gt;
</span><span class='line'><span class="nv">$ </span>git add &lt;file<span class="o">(</span>s<span class="o">)</span>&gt;
</span><span class='line'><span class="nv">$ </span>git status
</span><span class='line'><span class="nv">$ </span>git reset HEAD &lt;file&gt;
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;xxx&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin &lt;branch_name&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>Log</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git log
</span><span class='line'><span class="nv">$ </span>git show &lt;id&gt;
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SNS]]></title>
    <link href="http://k.arttechresearch.com/life/2016/01/08/sns/"/>
    <updated>2016-01-08T17:11:58+08:00</updated>
    <id>http://k.arttechresearch.com/life/2016/01/08/sns</id>
    <content type="html"><![CDATA[<h2>社交网络</h2>

<p>由最初的邮件，到IM如ICQ，QQ等；再到博客，微博和轻博客；再到移动端诸如Instragram，Line，微信，沟通工具的变化，不过是由电脑，再而网络发展，由web1.0到2.0，再到移动端，电子设备和网络技术的更新换代，跟随着软件的相继更新，就像一个系列，一整套设备（软硬件）同时切换，但，人没有变，只不过切换了电子设备和应用软件，人谈论的话题也没有变。</p>

<p>最近越来越多的人进入了微信圈，让我想起了当初QQ的发展，最初只是国内的ICQ，国内有了QQ，逐渐由早期上网的用户，扩大到普罗大众，随着用户群体的扩张，腾讯完成了产品的纵向和横向扩展。而现在通用的微信，腾讯似乎在把QQ的用户群体，逐渐扩展到微信用户，而微信，亦如当年的QQ，一样地盛行起来。于是，由最初微信的小圈子，到现在微信扩展到由同事朋友，再到亲戚同学，无论人在世界何地，曾经的人和环境，因为网络的连接，不再感到距离。看着同学们谈论的话题，跟以前的QQ群并没有什么不同。宏观的定性，总是稳定的，千百年过去了，人性还是那么地亘古不变，经典和大师以及他们的作品，显得更加经典。</p>

<p>看着发展壮大的微信群，看着各个群里谈论的话题，社交网络，说到底，还是人的社会。物以类聚，人以群分，在群里也是相似的。正是因为用户多样化了，用户需求也多样化起来，产品功能也会不断增加或删减。</p>

<p>无论电子设备和应用软件如何更新换代，人的交流，依然是重质不重量。所以，我依然怀念着当年博客里纯粹思想的交流，博客是经过思考的文字，经过深层思考的话，更值得深入探讨。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Real-time Analytics With Apache Storm]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/07/real-time-analytics-with-apache-storm/"/>
    <updated>2016-01-07T23:26:08+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/07/real-time-analytics-with-apache-storm</id>
    <content type="html"><![CDATA[<h2>Toolkits</h2>

<table>
<thead>
<tr>
<th style="text-align:left;"> DevOps        </th>
<th style="text-align:left;">        </th>
<th style="text-align:left;">       </th>
<th style="text-align:left;"> Backend                                </th>
<th style="text-align:left;"> Frontend    </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> Vagrant       </td>
<td style="text-align:left;"> Ubuntu </td>
<td style="text-align:left;"> Storm </td>
<td style="text-align:left;"> Python (BeautifulSoup, Flask, Lettuce) </td>
<td style="text-align:left;"> Javascript  </td>
</tr>
<tr>
<td style="text-align:left;"> Vagrant Cloud </td>
<td style="text-align:left;"> Git    </td>
<td style="text-align:left;">       </td>
<td style="text-align:left;"> Java                                   </td>
<td style="text-align:left;"> D3          </td>
</tr>
<tr>
<td style="text-align:left;"> VirtualBox    </td>
<td style="text-align:left;"> Maven  </td>
<td style="text-align:left;">       </td>
<td style="text-align:left;"> Redis                                  </td>
<td style="text-align:left;">             </td>
</tr>
</tbody>
</table>


<p>Others</p>

<ul>
<li>Clojure</li>
<li>Cluster Administration</li>
<li>Ack</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MOOC]]></title>
    <link href="http://k.arttechresearch.com/life/2016/01/07/mooc/"/>
    <updated>2016-01-07T14:46:32+08:00</updated>
    <id>http://k.arttechresearch.com/life/2016/01/07/mooc</id>
    <content type="html"><![CDATA[<p>在MOOC的三大学习网站里，edX，Coursera，Udacity的定位是不同。</p>

<p>edX，以MIT和Harvard为主，引领着美国其他常春藤学校，精品课程较多，而文科和社科性质的课程，是很好的；而现在引入的工业协会和微软等，也是edX的核心竞争力之一。</p>

<p>Coursera，课程大而全，非常像综合性大学，汇聚了世界各大高校，而各个水平的高校和各个学科的课程，都可以在此找到；斯坦福的课程也主要在此。</p>

<p>Udacity，更像是理工科学校，而又以计算机科学为主，与工业界挂钩，计算机专业的人，可以在这里找到很好的企业培训，这边的课程以实用性为止，如果是计算机课程，我是非常喜欢Udacity的课程的。</p>

<p>但，如果是计算机专业，单是上网课是不足够的，项目，尤其是企业项目，才是进步最快的学习方式。以项目带动学习，在项目中碰到问题，然后再寻找课程学习具体的内容，这样的学习动机，效率是明显的。有意识地建立自己的知识架构，拓展枝叶，这是我的学习方式。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cloudera Hadoop by Example]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/06/cloudera-hadoop-by-example/"/>
    <updated>2016-01-06T22:05:08+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/06/cloudera-hadoop-by-example</id>
    <content type="html"><![CDATA[<p>Contents</p>

<ul>
<li>analyzing structured data (sqoop, impala)</li>
<li>analyzing unstructured data (beeline, impala)</li>
<li>analyzing data in realtime (spark)</li>
<li>indexing and searching data (solr)</li>
</ul>


<h2>Analyzing Structured Data: MySQL Data</h2>

<p>Tools:</p>

<ul>
<li>sqoop</li>
<li>hive</li>
<li>hdfs</li>
<li>avro</li>
<li>mysql</li>
<li>mapreduce</li>
</ul>


<h3>Loading data by sqoop</h3>

<p>Steps:</p>

<ul>
<li>connecting MySQL database</li>
<li>lauching MapReduce jobs</li>
<li>putting the export files in Avro format in HDFS, and creating the Avro schema</li>
<li>(later) loading Hive tables for use in Impala</li>
</ul>


<figure class='code'><figcaption><span>loading data from local to HDFS by sqoop</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/project
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sqoop import-all-tables <span class="se">\</span>
</span><span class='line'>-m <span class="m">1</span> <span class="se">\</span>
</span><span class='line'>--connect jdbc:mysql://quickstart:3306/retail_db <span class="se">\</span>
</span><span class='line'>--username<span class="o">=</span>retail_dba <span class="se">\</span>
</span><span class='line'>--password<span class="o">=</span>cloudera <span class="se">\</span>
</span><span class='line'>--compression-codec<span class="o">=</span>snappy <span class="se">\</span>
</span><span class='line'>--as-avrodatafile <span class="se">\</span>
</span><span class='line'>--warehouse-dir<span class="o">=</span>/user/hive/warehouse
</span></code></pre></td></tr></table></div></figure>


<h3>Validation</h3>

<p>NOTE: <code>*.avsc</code> files is located on the local system.</p>

<figure class='code'><figcaption><span>validating data in HDFS</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>hadoop fs -ls /user/hive/warehouse                     <span class="c"># HDFS</span>
</span><span class='line'><span class="nv">$ </span>hadoop fs -ls /user/hive/warehouse/categories/         <span class="c"># HDFS</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>ls -l *.avsc                                           <span class="c"># local, schema files</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Copying the schema files (<code>*.avsc</code>) to HDFS</h3>

<figure class='code'><figcaption><span>copying avro schemas to HDFS</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo -u hdfs hadoop fs -mkdir /user/examples
</span><span class='line'><span class="nv">$ </span>sudo -u hdfs hadoop fs -chmod +rw /user/examples
</span><span class='line'><span class="nv">$ </span>hadoop fs -copyFromLocal ./*.avsc /user/examples/
</span></code></pre></td></tr></table></div></figure>


<p>NOTES: Hive and Impala</p>

<p>Hive and Impala both read the data from files in HDFS, and they even share metadata about the tables.</p>

<p>Hive - executes queries by compiling them to MapReduce jobs, this means it can be more flexible, but is much slower.</p>

<p>Impala - is an MPP query engine that reads the data directly from the file system itself. This allows it to execute queries fast enough for interactive analysis and exploration.</p>

<h3>Creating tables</h3>

<p>tools:</p>

<ul>
<li>hue</li>
<li>impala</li>
</ul>


<p>Hue -> Impala: creating tables</p>

<figure class='code'><figcaption><span>creating table in Impala</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">CREATE</span> <span class="k">EXTERNAL</span> <span class="k">TABLE</span> <span class="n">categories</span> <span class="n">STORED</span> <span class="k">AS</span> <span class="n">AVRO</span>
</span><span class='line'><span class="k">LOCATION</span> <span class="s1">&#39;hdfs:///user/hive/warehouse/categories&#39;</span>
</span><span class='line'><span class="n">TBLPROPERTIES</span> <span class="p">(</span><span class="s1">&#39;avro.schema.url&#39;</span><span class="o">=</span><span class="s1">&#39;hdfs://quickstart/user/examples/sqoop_import_categories.avsc&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="k">EXTERNAL</span> <span class="k">TABLE</span> <span class="n">customers</span> <span class="n">STORED</span> <span class="k">AS</span> <span class="n">AVRO</span>
</span><span class='line'><span class="k">LOCATION</span> <span class="s1">&#39;hdfs:///user/hive/warehouse/customers&#39;</span>
</span><span class='line'><span class="n">TBLPROPERTIES</span> <span class="p">(</span><span class="s1">&#39;avro.schema.url&#39;</span><span class="o">=</span><span class="s1">&#39;hdfs://quickstart/user/examples/sqoop_import_customers.avsc&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="k">EXTERNAL</span> <span class="k">TABLE</span> <span class="n">departments</span> <span class="n">STORED</span> <span class="k">AS</span> <span class="n">AVRO</span>
</span><span class='line'><span class="k">LOCATION</span> <span class="s1">&#39;hdfs:///user/hive/warehouse/departments&#39;</span>
</span><span class='line'><span class="n">TBLPROPERTIES</span> <span class="p">(</span><span class="s1">&#39;avro.schema.url&#39;</span><span class="o">=</span><span class="s1">&#39;hdfs://quickstart/user/examples/sqoop_import_departments.avsc&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="k">EXTERNAL</span> <span class="k">TABLE</span> <span class="n">orders</span> <span class="n">STORED</span> <span class="k">AS</span> <span class="n">AVRO</span>
</span><span class='line'><span class="k">LOCATION</span> <span class="s1">&#39;hdfs:///user/hive/warehouse/orders&#39;</span>
</span><span class='line'><span class="n">TBLPROPERTIES</span> <span class="p">(</span><span class="s1">&#39;avro.schema.url&#39;</span><span class="o">=</span><span class="s1">&#39;hdfs://quickstart/user/examples/sqoop_import_orders.avsc&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="k">EXTERNAL</span> <span class="k">TABLE</span> <span class="n">order_items</span> <span class="n">STORED</span> <span class="k">AS</span> <span class="n">AVRO</span>
</span><span class='line'><span class="k">LOCATION</span> <span class="s1">&#39;hdfs:///user/hive/warehouse/order_items&#39;</span>
</span><span class='line'><span class="n">TBLPROPERTIES</span> <span class="p">(</span><span class="s1">&#39;avro.schema.url&#39;</span><span class="o">=</span><span class="s1">&#39;hdfs://quickstart/user/examples/sqoop_import_order_items.avsc&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="k">EXTERNAL</span> <span class="k">TABLE</span> <span class="n">products</span> <span class="n">STORED</span> <span class="k">AS</span> <span class="n">AVRO</span>
</span><span class='line'><span class="k">LOCATION</span> <span class="s1">&#39;hdfs:///user/hive/warehouse/products&#39;</span>
</span><span class='line'><span class="n">TBLPROPERTIES</span> <span class="p">(</span><span class="s1">&#39;avro.schema.url&#39;</span><span class="o">=</span><span class="s1">&#39;hdfs://quickstart/user/examples/sqoop_import_products.avsc&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">show</span> <span class="n">tables</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Exploring data</h3>

<p>queries</p>

<figure class='code'><figcaption><span>exploring data in Impala</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">-- Most popular product categories</span>
</span><span class='line'><span class="k">select</span> <span class="k">c</span><span class="p">.</span><span class="n">category_name</span><span class="p">,</span> <span class="k">count</span><span class="p">(</span><span class="n">order_item_quantity</span><span class="p">)</span> <span class="k">as</span> <span class="k">count</span>
</span><span class='line'><span class="k">from</span> <span class="n">order_items</span> <span class="n">oi</span>
</span><span class='line'><span class="k">inner</span> <span class="k">join</span> <span class="n">products</span> <span class="n">p</span> <span class="k">on</span> <span class="n">oi</span><span class="p">.</span><span class="n">order_item_product_id</span> <span class="o">=</span> <span class="n">p</span><span class="p">.</span><span class="n">product_id</span>
</span><span class='line'><span class="k">inner</span> <span class="k">join</span> <span class="n">categories</span> <span class="k">c</span> <span class="k">on</span> <span class="k">c</span><span class="p">.</span><span class="n">category_id</span> <span class="o">=</span> <span class="n">p</span><span class="p">.</span><span class="n">product_category_id</span>
</span><span class='line'><span class="k">group</span> <span class="k">by</span> <span class="k">c</span><span class="p">.</span><span class="n">category_name</span>
</span><span class='line'><span class="k">order</span> <span class="k">by</span> <span class="k">count</span> <span class="k">desc</span>
</span><span class='line'><span class="k">limit</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">-- top 10 revenue generating products</span>
</span><span class='line'><span class="k">select</span> <span class="n">p</span><span class="p">.</span><span class="n">product_id</span><span class="p">,</span> <span class="n">p</span><span class="p">.</span><span class="n">product_name</span><span class="p">,</span> <span class="n">r</span><span class="p">.</span><span class="n">revenue</span>
</span><span class='line'><span class="k">from</span> <span class="n">products</span> <span class="n">p</span>
</span><span class='line'><span class="k">inner</span> <span class="k">join</span> <span class="p">(</span>
</span><span class='line'>    <span class="k">select</span> <span class="n">oi</span><span class="p">.</span><span class="n">order_item_product_id</span><span class="p">,</span> <span class="k">sum</span><span class="p">(</span><span class="k">cast</span><span class="p">(</span><span class="n">oi</span><span class="p">.</span><span class="n">order_item_subtotal</span> <span class="k">as</span> <span class="nb">float</span><span class="p">))</span> <span class="k">as</span> <span class="n">revenue</span>
</span><span class='line'>    <span class="k">from</span> <span class="n">order_items</span> <span class="n">oi</span>
</span><span class='line'>    <span class="k">inner</span> <span class="k">join</span> <span class="n">orders</span> <span class="n">o</span> <span class="k">on</span> <span class="n">oi</span><span class="p">.</span><span class="n">order_item_order_id</span> <span class="o">=</span> <span class="n">o</span><span class="p">.</span><span class="n">order_id</span>
</span><span class='line'>    <span class="k">where</span> <span class="n">o</span><span class="p">.</span><span class="n">order_status</span> <span class="o">&lt;&gt;</span> <span class="err">‘</span><span class="n">CANCELED</span><span class="err">’</span> <span class="k">and</span> <span class="n">o</span><span class="p">.</span><span class="n">order_status</span> <span class="o">&lt;&gt;</span> <span class="err">’</span><span class="n">SUSPECTED_FRAUD</span><span class="err">’</span>
</span><span class='line'>    <span class="k">group</span> <span class="k">by</span> <span class="n">order_item_product_id</span>
</span><span class='line'><span class="p">)</span> <span class="n">r</span> <span class="k">on</span> <span class="n">p</span><span class="p">.</span><span class="n">product_id</span> <span class="o">=</span> <span class="n">r</span><span class="p">.</span><span class="n">order_item_product_id</span>
</span><span class='line'><span class="k">order</span> <span class="k">by</span> <span class="n">r</span><span class="p">.</span><span class="n">revenue</span> <span class="k">desc</span>
</span><span class='line'><span class="k">limit</span> <span class="mi">10</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Analyzing Unstructured data: log files</h2>

<p>tools:</p>

<ul>
<li>flume/beeline</li>
<li>hive</li>
<li>impala</li>
</ul>


<h3>Copying the log files to HDFS</h3>

<figure class='code'><figcaption><span>copy the log files to HDFS</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo -u hdfs hadoop fs -mkdir /user/hive/warehouse/original_access_logs
</span><span class='line'><span class="nv">$ </span>sudo -u hdfs hadoop fs -copyFromLocal /opt/examples/log_files/access.log.2 /user/hive/warehouse/original_access_logs
</span><span class='line'><span class="nv">$ </span>hadoop fs -ls /user/hive/warehouse/original_access_logs
</span></code></pre></td></tr></table></div></figure>


<h3>Creating Intermediate Table</h3>

<p>local logs -> intermediate table -> final table</p>

<figure class='code'><figcaption><span>loading log files to Hive</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>beeline -u adbc:hive2://quickstart:10000/default -n admin -d org.apache.hive.jdbc.HiveDriver
</span><span class='line'>
</span><span class='line'>0: jdbc:hive2://quickstart:10000/default&gt; CREATE EXTERNAL TABLE intermediate_access_logs <span class="o">(</span>
</span><span class='line'>ip STRING,
</span><span class='line'>date STRING,
</span><span class='line'>method STRING,
</span><span class='line'>url STRING,
</span><span class='line'>http_version STRING,
</span><span class='line'>code1 STRING,
</span><span class='line'>code2 STRING,
</span><span class='line'>dash STRING,
</span><span class='line'>user_agent STRING<span class="o">)</span>
</span><span class='line'>ROW FORMAT SERDE ‘org.apache.hadoop.hive.contrib.serde2.RegexSerDe’
</span><span class='line'>WITH SERDEPROPERTIES <span class="o">(</span>
</span><span class='line'>‘input.regex’ <span class="o">=</span> ‘<span class="o">([</span>^ <span class="o">}</span>*<span class="o">)</span> - - <span class="se">\\</span><span class="o">[([</span>^<span class="se">\\</span><span class="o">]]</span>*<span class="o">)</span><span class="se">\\</span><span class="o">]</span> “<span class="o">([</span>^<span class="se">\ </span><span class="o">]</span>*<span class="o">)</span> <span class="o">([</span>^<span class="se">\ </span><span class="o">]</span>*<span class="o">)</span> <span class="o">([</span>^<span class="se">\ </span><span class="o">]</span>*<span class="o">)</span>” <span class="o">(</span><span class="se">\\</span>d*<span class="o">)</span> <span class="o">(</span><span class="se">\\</span>d*<span class="o">)</span> “<span class="o">([</span>^”<span class="o">]</span>*<span class="o">)</span>” “<span class="o">([</span>^”<span class="o">]</span>*”’,
</span><span class='line'>‘output.format.string’ <span class="o">=</span> “%1<span class="nv">$s</span> %2<span class="nv">$s</span> %3<span class="nv">$s</span> %4<span class="nv">$s</span> %5<span class="nv">$s</span> %6<span class="nv">$s</span> %7<span class="nv">$s</span> %8<span class="nv">$s</span> %9<span class="nv">$s</span>”
</span><span class='line'><span class="o">)</span>
</span><span class='line'>LOCATION ‘/user/hive/warehouse/original_access_logs’<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>0: jdbc:hive2://quickstart:10000/default&gt; CREATE EXTERNAL TABLE tokenized_access_log <span class="o">(</span>
</span><span class='line'>ip STRING,
</span><span class='line'>date STRING,
</span><span class='line'>method STRING,
</span><span class='line'>url STRING,
</span><span class='line'>http_version STRING,
</span><span class='line'>code1 STRING,
</span><span class='line'>code2 STRING,
</span><span class='line'>dash STRING,
</span><span class='line'>user_agent STRING<span class="o">)</span>
</span><span class='line'>ROW FORMAT DELIMITED FIELDS TERMINATED BY ‘,’
</span><span class='line'>LOCATION ‘/user/hive/warehouse/tokenized_access_logs<span class="err">&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>0: jdbc:hive2://quickstart:10000/default&gt; ADD JAR /usr/lib/hive/lib/hive-contrib.jar
</span><span class='line'>0: jdbc:hive2://quickstart:10000/default&gt; INSERT OVERWRITE TABLE tokenized_access_logs SELECT * FROM intermediate_access_logs<span class="p">;</span>
</span><span class='line'>0: jdbc:hive2://quickstart:10000/default&gt; !quit
</span></code></pre></td></tr></table></div></figure>


<h3>Validating in Impala</h3>

<figure class='code'><figcaption><span>validating tables in Impala</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">invalidate</span> <span class="n">metadata</span><span class="p">;</span>
</span><span class='line'><span class="k">show</span> <span class="n">tables</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">select</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">),</span>  <span class="n">url</span> <span class="k">from</span> <span class="n">tokenized_access_logs</span>
</span><span class='line'><span class="k">where</span> <span class="n">url</span> <span class="k">like</span> <span class="err">‘</span><span class="o">%</span><span class="err">\</span><span class="o">/</span><span class="n">product</span><span class="err">\</span><span class="o">/%</span><span class="err">’</span>
</span><span class='line'><span class="k">group</span> <span class="k">by</span> <span class="n">url</span>
</span><span class='line'><span class="k">order</span> <span class="k">by</span> <span class="k">count</span><span class="p">(</span><span class="o">*</span><span class="p">)</span> <span class="k">desc</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Analyzing data with Spark</h2>

<h3>Start Spark</h3>

<figure class='code'><figcaption><span>start Spark</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>spark-shell —jars /usr/lib/avro/avro-mapred.jar <span class="se">\</span>
</span><span class='line'>—conf spark.serializer<span class="o">=</span>org.apache.spark.serializer.KryoSerializer
</span></code></pre></td></tr></table></div></figure>


<h3>Programming in Scala</h3>

<figure class='code'><figcaption><span>relationship strengh analytics</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="c1">// First we&#39;re going to import the classes we need and open some of the files</span>
</span><span class='line'><span class="c1">// we imported from our relational database into Hadoop with Sqoop</span>
</span><span class='line'>
</span><span class='line'><span class="k">import</span> <span class="nn">org.apache.avro.generic.GenericRecord</span>
</span><span class='line'><span class="k">import</span> <span class="nn">org.apache.avro.mapred.</span><span class="o">{</span><span class="nc">AvroInputFormat</span><span class="o">,</span> <span class="nc">AvroWrapper</span><span class="o">}</span>
</span><span class='line'><span class="k">import</span> <span class="nn">org.apache.hadoop.io.NullWritable</span>
</span><span class='line'>
</span><span class='line'><span class="k">val</span> <span class="n">warehouse</span> <span class="k">=</span> <span class="s">&quot;hdfs://quickstart/user/hive/warehouse&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">val</span> <span class="n">order_items_path</span> <span class="k">=</span> <span class="n">warehouse</span> <span class="o">+</span> <span class="s">&quot;order_items&quot;</span>
</span><span class='line'><span class="k">val</span> <span class="n">order_items</span> <span class="k">=</span> <span class="n">sc</span><span class="o">.</span><span class="n">hadoopFile</span><span class="o">[</span><span class="kt">AvroWrapper</span><span class="o">[</span><span class="kt">GenericRecord</span><span class="o">]</span>, <span class="kt">NullWritable</span>, <span class="kt">AvroInputFormat</span><span class="o">[</span><span class="kt">GenericRecord</span><span class="o">]](</span><span class="n">order_items_path</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">val</span> <span class="n">products_path</span> <span class="k">=</span> <span class="n">warehouse</span> <span class="o">+</span> <span class="s">&quot;products&quot;</span>
</span><span class='line'><span class="k">val</span> <span class="n">products</span> <span class="k">=</span> <span class="n">sc</span><span class="o">.</span><span class="n">hadoopFile</span><span class="o">[</span><span class="kt">AvroWrapper</span><span class="o">[</span><span class="kt">GenericRecord</span><span class="o">]</span>, <span class="kt">NullWritable</span>, <span class="kt">AvroInputFormat</span><span class="o">[</span><span class="kt">GenericRecord</span><span class="o">]](</span><span class="n">product_path</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// Next, we extract the fields from order_items and products that we care about</span>
</span><span class='line'><span class="c1">// and get a list of every product, its name and quantity, grouped by order</span>
</span><span class='line'>
</span><span class='line'><span class="k">val</span> <span class="n">orders</span> <span class="k">=</span> <span class="n">order_items</span><span class="o">.</span><span class="n">map</span> <span class="o">{</span> <span class="n">x</span> <span class="k">=&gt;</span> <span class="o">(</span>
</span><span class='line'>  <span class="n">x</span><span class="o">.</span><span class="n">_1</span><span class="o">.</span><span class="n">datum</span><span class="o">.</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;order_item_product_id&quot;</span><span class="o">),</span>
</span><span class='line'>  <span class="o">(</span><span class="n">x</span><span class="o">.</span><span class="n">_1</span><span class="o">.</span><span class="n">datum</span><span class="o">.</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;order_item_order_id&quot;</span><span class="o">),</span> <span class="n">x</span><span class="o">.</span><span class="n">_1</span><span class="o">.</span><span class="n">datum</span><span class="o">.</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;order_item_quantity&quot;</span><span class="o">))</span>
</span><span class='line'><span class="o">)}.</span><span class="n">join</span><span class="o">(</span>
</span><span class='line'>  <span class="n">products</span><span class="o">.</span><span class="n">map</span> <span class="o">{</span> <span class="n">x</span> <span class="k">=&gt;</span> <span class="o">(</span>
</span><span class='line'>    <span class="n">x</span><span class="o">.</span><span class="n">_1</span><span class="o">.</span><span class="n">datum</span><span class="o">.</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;product_id&quot;</span><span class="o">),</span>
</span><span class='line'>    <span class="o">(</span><span class="n">x</span><span class="o">.</span><span class="n">_1</span><span class="o">.</span><span class="n">datum</span><span class="o">.</span><span class="n">get</span><span class="o">(</span><span class="s">&quot;product_name&quot;</span><span class="o">))</span>
</span><span class='line'><span class="o">)}).</span><span class="n">map</span><span class="o">(</span><span class="n">x</span> <span class="k">=&gt;</span> <span class="o">(</span>
</span><span class='line'>  <span class="n">scala</span><span class="o">.</span><span class="nc">Int</span><span class="o">.</span><span class="n">unbox</span><span class="o">(</span><span class="n">x</span><span class="o">.</span><span class="n">_2</span><span class="o">.</span><span class="n">_1</span><span class="o">.</span><span class="n">_1</span><span class="o">),</span> <span class="c1">// order_id</span>
</span><span class='line'>  <span class="o">(</span>
</span><span class='line'>    <span class="n">scala</span><span class="o">.</span><span class="nc">Int</span><span class="o">.</span><span class="n">unbox</span><span class="o">(</span><span class="n">x</span><span class="o">.</span><span class="n">_2</span><span class="o">.</span><span class="n">_1</span><span class="o">.</span><span class="n">_2</span><span class="o">),</span> <span class="c1">// quantity</span>
</span><span class='line'>    <span class="n">x</span><span class="o">.</span><span class="n">_2</span><span class="o">.</span><span class="n">_2</span><span class="o">.</span><span class="n">toString</span> <span class="c1">// product_name</span>
</span><span class='line'>  <span class="o">)</span>
</span><span class='line'><span class="o">)).</span><span class="n">groupByKey</span><span class="o">()</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">// Finally, we tally how many times each combination of products appears</span>
</span><span class='line'><span class="c1">// together in an order, and print the 10 most common combinations.</span>
</span><span class='line'>
</span><span class='line'><span class="k">val</span> <span class="n">cooccurrences</span> <span class="k">=</span> <span class="n">orders</span><span class="o">.</span><span class="n">map</span><span class="o">(</span><span class="n">order</span> <span class="k">=&gt;</span> <span class="o">(</span>
</span><span class='line'>  <span class="n">order</span><span class="o">.</span><span class="n">_1</span><span class="o">,</span>
</span><span class='line'>  <span class="n">order</span><span class="o">.</span><span class="n">_2</span><span class="o">.</span><span class="n">toList</span><span class="o">.</span><span class="n">combinations</span><span class="o">(</span><span class="mi">2</span><span class="o">).</span><span class="n">map</span><span class="o">(</span><span class="n">order_pair</span> <span class="k">=&gt;</span> <span class="o">(</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">order_pair</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="n">_2</span> <span class="o">&lt;</span> <span class="n">order_pair</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="n">_2</span><span class="o">)</span> <span class="o">(</span><span class="n">order_pair</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="n">_2</span><span class="o">,</span> <span class="n">order_pair</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="n">_2</span><span class="o">)</span>
</span><span class='line'>    <span class="k">else</span> <span class="o">(</span><span class="n">order_pair</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="n">_2</span><span class="o">,</span> <span class="n">order_pair</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="n">_2</span><span class="o">),</span> <span class="n">order_pair</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="n">_1</span> <span class="o">*</span> <span class="n">order_pair</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="n">_1</span>
</span><span class='line'>  <span class="o">))</span>
</span><span class='line'><span class="o">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">val</span> <span class="n">combos</span> <span class="k">=</span> <span class="n">cooccurrrences</span><span class="o">.</span><span class="n">flatMap</span><span class="o">(</span><span class="n">x</span> <span class="k">=&gt;</span> <span class="n">x</span><span class="o">.</span><span class="n">_2</span><span class="o">).</span><span class="n">reduceByKey</span><span class="o">((</span><span class="n">a</span><span class="o">,</span><span class="n">b</span><span class="o">)</span> <span class="k">=&gt;</span> <span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">)</span>
</span><span class='line'><span class="k">val</span> <span class="n">mostCommon</span> <span class="k">=</span> <span class="n">combos</span><span class="o">.</span><span class="n">map</span><span class="o">(</span><span class="n">x</span> <span class="k">=&gt;</span> <span class="o">(</span><span class="n">x</span><span class="o">.</span><span class="n">_2</span><span class="o">,</span> <span class="n">x</span><span class="o">.</span><span class="n">_1</span><span class="o">)).</span><span class="n">sortByKey</span><span class="o">(</span><span class="kc">false</span><span class="o">).</span><span class="n">take</span><span class="o">(</span><span class="mi">10</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">println</span><span class="o">(</span><span class="n">mostCommon</span><span class="o">.</span><span class="n">deep</span><span class="o">.</span><span class="n">mkString</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">exit</span>
</span></code></pre></td></tr></table></div></figure>


<p>NOTE:</p>

<p>When we do a &lsquo;map&rsquo;, we specify a function that will take each record and output a modified record. This is useful when we only need a couple of fields from each record  or when we need the record to use a different field as the key: we simply invoke map with a function that takes in the entire record, and returns a new record with the fields and the key we want.</p>

<p>The &lsquo;reduce&rsquo; operations - like &lsquo;join&rsquo; and &lsquo;groupBy&rsquo; - will organise these records by their keys so we can group similar records together and then process them as a group.</p>

<h2>Indexing data and search by Solr</h2>

<h3>Creating a search schema</h3>

<p>steps</p>

<ul>
<li>creating an empty configuration</li>
<li>editing your schema</li>
<li>uploading your configuration</li>
<li>creating your collection</li>
</ul>


<figure class='code'><figcaption><span>creating a search schame by Solr</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>solrctl --zk quickstart:2181/solr instancedir --generate solr_configs
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /opt/examples/flume
</span><span class='line'><span class="nv">$ </span>solrctl --zk quickstart:2181/solr instancedir --create live_logs ./solr_configs
</span><span class='line'><span class="nv">$ </span>solrctl --zk quickstart:2181/solr collection --create live_logs -s 1
</span></code></pre></td></tr></table></div></figure>


<h3>Loading data into Solr</h3>

<p>tools</p>

<ul>
<li>flume - a tool for ingesting streams of data into your cluster from sources such as log files, network streams, and more; is a system for collecting, aggregating, and moving large amounts of log data from many different sources to a centralised data source.</li>
<li>morphines - a Java library for doing ETL on-the-fly.</li>
</ul>


<figure class='code'><figcaption><span>loading data by flume</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>start_logs
</span><span class='line'><span class="nv">$ </span>tail_logs
</span><span class='line'><span class="nv">$ </span>stop_logs
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>flume-ng agent <span class="se">\</span>
</span><span class='line'>--conf /opt/examples/flume/conf <span class="se">\</span>
</span><span class='line'>--conf-file /opt/examples/flume/conf/flume.conf <span class="se">\</span>
</span><span class='line'>--name agent1 <span class="se">\</span>
</span><span class='line'>-Dflume.root.logger<span class="o">=</span>DEBUG,INFO,console
</span></code></pre></td></tr></table></div></figure>


<h3>Playing data in Solr</h3>

<p>Hue -> Search -> Solr Search -> Dashboard</p>

<ul>
<li>browsing the data</li>
<li>charting</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Comparison of Programming Languages Libraries]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/06/the-comparison-of-programming-languages-libraries/"/>
    <updated>2016-01-06T01:44:45+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/06/the-comparison-of-programming-languages-libraries</id>
    <content type="html"><![CDATA[<h2>Web</h2>

<table>
<thead>
<tr>
<th style="text-align:left;"> Language </th>
<th style="text-align:left;"> Web Framework          </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> Python   </td>
<td style="text-align:left;"> Django, Tornado, Flask </td>
</tr>
<tr>
<td style="text-align:left;"> Ruby     </td>
<td style="text-align:left;"> Rails                  </td>
</tr>
<tr>
<td style="text-align:left;"> Node.js  </td>
<td style="text-align:left;"> Express                </td>
</tr>
<tr>
<td style="text-align:left;"> Scala    </td>
<td style="text-align:left;"> Life                   </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes on Programming in Scala]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/04/notes-on-programming-in-scala/"/>
    <updated>2016-01-04T15:15:52+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/04/notes-on-programming-in-scala</id>
    <content type="html"><![CDATA[<p>Programming in Scala: <a href="http://www.artima.com/pins1ed/">http://www.artima.com/pins1ed/</a></p>

<h2>Funtional Language and Scala</h2>

<h3>Functional Language</h3>

<p>object object-orientaed programming</p>

<p>In principle, the motivation for object-oriented programming is very simple: all but
the most the trivial programs need some sort of structure. The most straightforward way
to do this is to put data and operations into some form of containers. The great idea of
object-oriented programming is to make these containers fully general, so that they can
contain operations as well as data, and that they are themselves values that can be stored
in other containers, or passed as paramters to operations. Such containers are called
objects.</p>

<p>Alan Kay, the inventor of Smalltalk, remarked that in this way the simplest object has
the same construction principle as a full computer: it combines data with operations
under a formalized interface. So objects have a lot to do with language scalability:
the same techniques apply to the construction of small as well as large programs.</p>

<h3>Scala</h3>

<ul>
<li>compatibility</li>
<li>brevity</li>
<li>high-level abstractions</li>
<li>advanced static typing</li>
</ul>


<p><img src="https://s-media-cache-ak0.pinimg.com/474x/52/c2/15/52c2157c0b2f25cfae2d295e67ef32f8.jpg" /></p>

<h2>Scala Elements</h2>

<h3>Val vs Var</h3>

<p>Prefer vals, immutable objects, and methods without side effects. Reach for them first.</p>

<p>Use vars, mutable objects, and methods with side effects when you have a specific need and justification for them.</p>

<h3>Types and Operations</h3>

<ul>
<li>types</li>
<li>literals</li>
<li>operations</li>
</ul>


<p><img src="https://s-media-cache-ak0.pinimg.com/736x/b3/98/ab/b398ab10483fd8a9892880e0fe324326.jpg" /></p>

<p>image source: Table 5.1 · Some basic types, Chpater 5, Programming in Scala, page 118</p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/fc/91/b6/fc91b687d2acfcf714bf5278ef37c4f9.jpg" /></p>

<p>image source: Rich types, Chapter 5, Programming in Scala, page 138</p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/cb/ce/46/cbce46c71c592e1fe97448e3a5fc1ed4.jpg" /></p>

<p>image source: Chapter 5, Programming in Scala</p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/b3/0e/50/b30e502bcc31787ad660c38ea4104b3c.jpg" /></p>

<p>image source: Operator precedence, Chapter 5, Programming in Scala, p135</p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/92/85/5b/92855b63af3053f3cd522150b3d1c7b4.jpg" /></p>

<p>image source: Rich Operations, Chapter 5, Programming in Scala, page 138</p>

<h3>Collections</h3>

<ul>
<li>array</li>
<li>list</li>
<li>tuple</li>
<li>set</li>
<li>map</li>
</ul>


<p><img src="https://s-media-cache-ak0.pinimg.com/736x/1e/ac/60/1eac6035eaee581df8a0b46eecd14d3a.jpg" /></p>

<p>image source: Class hierarchy for Scala sets, Chapter 3, Programming in Scala, page 92</p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/d3/af/00/d3af004af2898246aee87b91006895fd.jpg" /></p>

<p>image source: Class hierarchy for Scala maps, Chapter 3, Programming in Scala, page 94</p>

<h3>Class and Objects</h3>

<ul>
<li>class</li>
<li>object</li>
<li>app</li>
</ul>


<p><img src="https://s-media-cache-ak0.pinimg.com/736x/93/7c/06/937c06add4c4e06b27e77a096a5e0975.jpg" /></p>

<p>image source: Scala Class Hierarchy, Chapter 10, Programming in Scala</p>

<p>Trait or not trait</p>

<ul>
<li>If the behavior will not be reused, then make it a concrete class. It is not reusable behavior after all.</li>
<li>If it might be reused in multiple, unrelated classes, make it a trait. Only traits can be mixed into different parts of the class hierarchy.</li>
<li>If you want to inherit from it in Java code, use an abstract class, use an abstract class. Since traits with code do not have a close Java analog, it tends to be awkward to inherit from a trait in a Java class. Inheriting from a Scala class, meanwhile, is exactly like inheriting from a Java class. As one exception, a Scala trait with only abstract members translates directly to a Java interface, so you should feel free to define such traits even if you expect Java code to inherit from it. See Chapter 31 for more information on working with Java and Scala together.</li>
<li>If you plan to distribute it in compiled form, and you expect outside groups to write classes inheriting from it, you might lean towards using an abstract class. The issue is that when a trait gains or loses a member, any classes that inherit from it must be recompiled, even if they have not changed. If outside clients will only call into the behavior, instead of inheriting from it, then using a trait is fine.</li>
<li>If efficiency is very important, lean towards using a class. Most Java
runtimes make a virtual method invocation of a class member a faster oper- ation than an interface method invocation. Traits get compiled to interfaces and therefore may pay a slight performance overhead. However, you should make this choice only if you know that the trait in question constitutes a per- formance bottleneck and have evidence that using a class instead actually solves the problem.</li>
<li>If you still do not know, after considering the above, then start by making it as a trait. You can always change it later, and in general using a trait keeps more options open.</li>
</ul>


<p><img src="https://s-media-cache-ak0.pinimg.com/736x/50/e0/b6/50e0b6173313209d85c1b08647f06709.jpg" /></p>

<p>image source: Collection hierarchy, Chapter 24, Programming in Scala, Page 536</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Scala]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/04/installing-scala/"/>
    <updated>2016-01-04T13:06:34+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/04/installing-scala</id>
    <content type="html"><![CDATA[<h2>Prequisition</h2>

<p>Java</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo add-apt-repository -y ppa:webupd8team/java
</span><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudo apt-get -y install oracle-java8-installer
</span></code></pre></td></tr></table></div></figure>


<h2>Installation</h2>

<h3>Ubuntu 14.04</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /tmp
</span><span class='line'><span class="nv">$ </span>wget http://www.scala-lang.org/files/archive/scala-2.11.6.deb
</span><span class='line'><span class="nv">$ </span>sudo dpkg -i scala-2.11.6.deb
</span><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudo apt-get install scala
</span></code></pre></td></tr></table></div></figure>


<h3>OS X</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew update
</span><span class='line'><span class="nv">$ </span>brew install scala
</span><span class='line'><span class="nv">$ </span>brew install sbt
</span></code></pre></td></tr></table></div></figure>


<h2>Testing</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant@vagrant-ubuntu-trusty-64:/vagrant/scala<span class="nv">$ </span>scala
</span><span class='line'>Welcome to Scala version 2.11.6 <span class="o">(</span>Java HotSpot<span class="o">(</span>TM<span class="o">)</span> 64-Bit Server VM, Java 1.8.0_66<span class="o">)</span>.
</span><span class='line'>Type in expressions to have them evaluated.
</span><span class='line'>Type :help <span class="k">for</span> more information.
</span><span class='line'>
</span><span class='line'>scala&gt; 1+1
</span><span class='line'>res0: <span class="nv">Int</span> <span class="o">=</span> 2
</span><span class='line'>
</span><span class='line'>scala&gt; println<span class="o">(</span><span class="s2">&quot;Hello&quot;</span><span class="o">)</span>
</span><span class='line'>Hello
</span><span class='line'>
</span><span class='line'>scala&gt;:quit
</span></code></pre></td></tr></table></div></figure>


<h2>Vim Configuration</h2>

<p>syntax highlight: <a href="https://github.com/derekwyatt/vim-scala">vim-scala</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># wget</span>
</span><span class='line'><span class="nv">$ </span>mkdir -p ~/.vim/<span class="o">{</span>ftdetect,indent,syntax<span class="o">}</span> <span class="o">&amp;&amp;</span> <span class="k">for</span> d in ftdetect indent syntax <span class="p">;</span> <span class="k">do</span> wget -O ~/.vim/<span class="nv">$d</span>/scala.vim https://raw.githubusercontent.com/derekwyatt/vim-scala/master/<span class="nv">$d</span>/scala.vim<span class="p">;</span> <span class="k">done</span>
</span><span class='line'>
</span><span class='line'><span class="c"># curl</span>
</span><span class='line'><span class="nv">$ </span>mkdir -p ~/.vim/<span class="o">{</span>ftdetect,indent,syntax<span class="o">}</span> <span class="o">&amp;&amp;</span> <span class="k">for</span> d in ftdetect indent syntax <span class="p">;</span> <span class="k">do</span> curl -o ~/.vim/<span class="nv">$d</span>/scala.vim https://raw.githubusercontent.com/derekwyatt/vim-scala/master/<span class="nv">$d</span>/scala.vim<span class="p">;</span> <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Advanced Commands]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/03/linux-advanced-commands/"/>
    <updated>2016-01-03T22:20:08+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/03/linux-advanced-commands</id>
    <content type="html"><![CDATA[<h2>mkdir</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir -p project/<span class="o">{</span>bin,venvs,app/<span class="o">{</span>requirements,app/tests,docs,scripts<span class="o">}}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>tar</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>tar xvf -C /path/to/dest xxx.tar.gz
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/dest <span class="o">&amp;&amp;</span> tar xvf xxx.tar.gz
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/dest <span class="o">||</span> mkdir -p /path/to/dest
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/dest <span class="o">||</span> mkdir -p /path/to/dest <span class="o">&amp;&amp;</span> tar xvf -C /path/to/dest xxx.tar.gz
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/dest <span class="o">||</span> <span class="se">\</span>
</span><span class='line'>&gt; mkdir -p /path/to/dest <span class="o">&amp;&amp;</span> <span class="se">\</span>
</span><span class='line'>&gt; tar xvf -C /path/to/dest xxx.tar.gz
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="o">(</span> <span class="nb">cd</span> /path/to/dest <span class="o">||</span> mkdir -p /path/to/dest <span class="o">&amp;&amp;</span> <span class="se">\</span>
</span><span class='line'>&gt; <span class="nv">VAR</span><span class="o">=</span><span class="nv">$PWD</span><span class="p">;</span> <span class="nb">cd</span> ~<span class="p">;</span> tar xvf -C <span class="nv">$VAR</span> archive.tar <span class="o">)</span> <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>&gt; mailx admin -S <span class="s2">&quot;Archive contents&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="o">{</span> cp <span class="k">$(</span>VAR<span class="k">)</span>a . <span class="o">&amp;&amp;</span> chown -R guest.guest a <span class="o">&amp;&amp;</span> <span class="se">\</span>
</span><span class='line'>&gt; tar cvf newarchive.tar a<span class="p">;</span> <span class="o">}</span> <span class="p">|</span> <span class="se">\</span>
</span><span class='line'>&gt; mailx admin -S <span class="s2">&quot;New archive&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>patterns</h2>

<h3>file name: xargs</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>find some-file-criteria some-file-path <span class="p">|</span> xargs some-great-command-that-needs-filename-arguements
</span></code></pre></td></tr></table></div></figure>


<h3>file contents: grep</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">time </span>grep and tmp/a/longfile.txt <span class="p">|</span> wc -l             <span class="c"># multiple files</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">time </span>grep -c and tmp/a/longfile.txt                  <span class="c"># single file</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>grep -o and tmp/a/longfile.txt <span class="p">|</span> wc -l
</span></code></pre></td></tr></table></div></figure>


<h3>content lines: awk</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls -la <span class="p">|</span> awk <span class="s1">&#39;$6 == &quot;Dec&quot;&#39;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flask-Restless]]></title>
    <link href="http://k.arttechresearch.com/tech/2016/01/03/flask-restless/"/>
    <updated>2016-01-03T00:09:13+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2016/01/03/flask-restless</id>
    <content type="html"><![CDATA[<p>Source Codes:</p>

<ul>
<li>original: <a href="https://github.com/jfinkels/flask-restless">https://github.com/jfinkels/flask-restless</a></li>
<li>refactored: <a href="https://github.com/KellyChan/flask-restless">https://github.com/KellyChan/flask-restless</a></li>
</ul>


<p>Notes:
Flask-restless was developed by jfinkels, this article is the study notes
of his source code, and refactoring some codes by personal purpose.</p>

<p>All the commands and codes below are based on the <a href="https://github.com/KellyChan/flask-restless">refactored codes</a>.</p>

<h2>Setup DevEnv</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://github.com/KellyChan/flask-restless
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>flask-restless
</span><span class='line'>
</span><span class='line'><span class="c"># update Vagrantfile (Virtualbox + Vagrant)</span>
</span><span class='line'><span class="c"># then create the project and setup the virtualenv</span>
</span><span class='line'><span class="nv">$ </span>virtualenv venvs/flask-restless
</span><span class='line'><span class="nv">$ </span><span class="nb">source </span>venvs/flask-restless/bin/activate
</span><span class='line'>
</span><span class='line'><span class="c"># install requirements</span>
</span><span class='line'><span class="nv">$ </span>pip install -r requirements/base.txt
</span><span class='line'><span class="nv">$ </span>pip install -r requirements/test.txt
</span><span class='line'><span class="nv">$ </span>pip install -r requirements/docs.txt
</span></code></pre></td></tr></table></div></figure>


<h2>Project Structure</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Dev
</span><span class='line'>  <span class="p">|</span>---- requirements/
</span><span class='line'>  <span class="p">|</span>---- flask_restless/
</span><span class='line'>  <span class="p">|</span>---- artwork/
</span><span class='line'>
</span><span class='line'>DevOps
</span><span class='line'>  <span class="p">|</span>---- setup.cfg
</span><span class='line'>  <span class="p">|</span>---- setup.py
</span><span class='line'>  <span class="p">|</span>---- scripts/
</span><span class='line'>
</span><span class='line'>Tests
</span><span class='line'>  <span class="p">|</span>---- tests/
</span><span class='line'>
</span><span class='line'>Docs
</span><span class='line'>  <span class="p">|</span>---- docs/
</span><span class='line'>  <span class="p">|</span>---- examples/
</span><span class='line'>
</span><span class='line'>Others
</span><span class='line'>  <span class="p">|</span>---- AUTHORS
</span><span class='line'>  <span class="p">|</span>---- licenses/
</span><span class='line'>  <span class="p">|</span>---- CHANGES
</span><span class='line'>  <span class="p">|</span>---- README.md
</span></code></pre></td></tr></table></div></figure>


<h2>Dev</h2>

<p>files</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>flask-restless/
</span><span class='line'>    <span class="p">|</span>---- helpers.py                   <span class="c"># utils, mostly about SQLalchemy objects</span>
</span><span class='line'>    <span class="p">|</span>---- manager.py                   <span class="c"># API creator</span>
</span><span class='line'>    <span class="p">|</span>---- search.py                    <span class="c"># seraching database</span>
</span><span class='line'>    <span class="p">|</span>---- views.py                     <span class="c"># views</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Test</h2>

<h3>cli</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>nosetests
</span><span class='line'><span class="nv">$ </span>python setup.py <span class="nb">test</span>
</span><span class='line'><span class="nv">$ </span>nosetests --with-coverage --cover-package<span class="o">=</span>flask_restless --cover-html <span class="se">\</span>
</span><span class='line'>    --cover-html-dir<span class="o">=</span>&lt;somedir&gt;
</span><span class='line'><span class="nv">$ </span>savalidation
</span></code></pre></td></tr></table></div></figure>


<h2>Docs</h2>

<h3>cli</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule update --init
</span><span class='line'><span class="nv">$ </span>python setup.py develop
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>docs
</span><span class='line'><span class="nv">$ </span>make html
</span><span class='line'><span class="nv">$ </span>sphinx-autobuild ./ _build/html/
</span></code></pre></td></tr></table></div></figure>


<h3>theming</h3>

<h2>DevOps</h2>

<p>installation</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python setup.py --help
</span><span class='line'><span class="nv">$ </span>python setup.py install
</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Sphinx]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/12/31/python-sphinx/"/>
    <updated>2015-12-31T01:25:59+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/12/31/python-sphinx</id>
    <content type="html"><![CDATA[<p>Sphinx is a Python documentation generator. To write the project documentation with
Sphinx, here are the steps:</p>

<ol>
<li>Installing Sphinx and setting up a project</li>
<li>Configuring Sphinx</li>
<li>Customizing the theme</li>
<li>Writing the docs</li>
</ol>


<h2>Sphinx Setup</h2>

<p>Sphinx and plugins</p>

<ul>
<li>sphinx</li>
<li>sphinx-autobuild: live html preview</li>
</ul>


<h3>Installation</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>pip install sphinx
</span><span class='line'><span class="nv">$ </span>pip install sphinx-autobuild
</span></code></pre></td></tr></table></div></figure>


<h3>Quick Start</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sphinx-quickstart
</span><span class='line'>
</span><span class='line'><span class="c"># sphinx-autobuild &lt;DOCS_PATH&gt; &lt;DOCS_PATH/BUILD/HTML&gt;</span>
</span><span class='line'><span class="nv">$ </span>sphinx-autobuild docs docs/_build/html
</span></code></pre></td></tr></table></div></figure>


<p>other commands</p>

<figure class='code'><figcaption><span>make.bat</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">if</span> <span class="s2">&quot;%1&quot;</span> <span class="o">==</span> <span class="s2">&quot;help&quot;</span> <span class="o">(</span>
</span><span class='line'>        :help
</span><span class='line'>        echo.Please use <span class="sb">`</span>make ^&lt;target^&gt;<span class="sb">`</span> where ^&lt;target^&gt; is one of
</span><span class='line'>        echo.  html       to make standalone HTML files
</span><span class='line'>        echo.  dirhtml    to make HTML files named index.html in directories
</span><span class='line'>        echo.  singlehtml to make a single large HTML file
</span><span class='line'>        echo.  pickle     to make pickle files
</span><span class='line'>        echo.  json       to make JSON files
</span><span class='line'>        echo.  htmlhelp   to make HTML files and a HTML <span class="nb">help </span>project
</span><span class='line'>        echo.  qthelp     to make HTML files and a qthelp project
</span><span class='line'>        echo.  devhelp    to make HTML files and a Devhelp project
</span><span class='line'>        echo.  epub       to make an epub
</span><span class='line'>        echo.  latex      to make LaTeX files, you can <span class="nb">set </span><span class="nv">PAPER</span><span class="o">=</span>a4 or <span class="nv">PAPER</span><span class="o">=</span>letter
</span><span class='line'>        echo.  text       to make text files
</span><span class='line'>        echo.  man        to make manual pages
</span><span class='line'>        echo.  texinfo    to make Texinfo files
</span><span class='line'>        echo.  gettext    to make PO message catalogs
</span><span class='line'>        echo.  changes    to make an overview over all changed/added/deprecated items
</span><span class='line'>        echo.  xml        to make Docutils-native XML files
</span><span class='line'>        echo.  pseudoxml  to make pseudoxml-XML files <span class="k">for</span> display purposes
</span><span class='line'>        echo.  linkcheck  to check all external links <span class="k">for</span> integrity
</span><span class='line'>        echo.  doctest    to run all doctests embedded in the documentation <span class="k">if</span> enabled
</span><span class='line'>        echo.  coverage   to run coverage check of the documentation <span class="k">if</span> enabled
</span><span class='line'>        goto end
</span><span class='line'><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Sphinx Settings</h2>

<figure class='code'><figcaption><span>conf.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -- General configuration ------------------------------------------------</span>
</span><span class='line'><span class="c"># -- Options for HTML output ----------------------------------------------</span>
</span><span class='line'><span class="c"># -- Options for LaTeX output ---------------------------------------------</span>
</span><span class='line'><span class="c"># -- Options for manual page output ---------------------------------------</span>
</span><span class='line'><span class="c"># -- Options for Texinfo output -------------------------------------------</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Sphinx Theming</h2>

<p>There are two options to create a theme:</p>

<ul>
<li>one is to change a default theme,</li>
<li>another is to create a new one by yourself.</li>
</ul>


<h3>Default Themes</h3>

<p>All html configurations are stored in <code>conf.py</code>. Official docs is <a href="http://sphinx-doc.org/theming.html">here</a>.</p>

<figure class='code'><figcaption><span>conf.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># -- Options for HTML output ----------------------------------------------</span>
</span><span class='line'>
</span><span class='line'><span class="c"># The theme to use for HTML and HTML Help pages.  See the documentation for</span>
</span><span class='line'><span class="c"># a list of builtin themes.</span>
</span><span class='line'><span class="c"># default themes: alabaster, sphinx_rtd_theme, classic, sphinxdoc,</span>
</span><span class='line'><span class="c">#     scrolls, agogo, traditional, nature, haiku, pyramid, bizstyle</span>
</span><span class='line'><span class="n">html_theme</span> <span class="o">=</span> <span class="s">&#39;nature&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Theme options are theme-specific and customize the look and feel of a theme</span>
</span><span class='line'><span class="c"># further.  For a list of options available for each theme, see the</span>
</span><span class='line'><span class="c"># documentation.</span>
</span><span class='line'><span class="c"># html_theme_options = {</span>
</span><span class='line'><span class="c">#     &quot;rightsidebar&quot;: &quot;true&quot;,</span>
</span><span class='line'><span class="c">#     &quot;relbarbgcolor&quot;: &quot;black&quot;</span>
</span><span class='line'><span class="c"># }</span>
</span><span class='line'><span class="n">html_theme_options</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Add any paths that contain custom themes here, relative to this directory.</span>
</span><span class='line'><span class="c"># html_theme_path = [&quot;.&quot;]</span>
</span><span class='line'><span class="n">html_theme_path</span> <span class="o">=</span> <span class="p">[]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Custom Themes</h3>

<h2>RST</h2>

<h3>Makeup Constructs</h3>

<p>Official docs is <a href="http://sphinx-doc.org/markup/index.html">here</a>.</p>

<h4>toctree</h4>

<figure class='code'><figcaption><span>toctree</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">..</span> <span class="n">toctree</span><span class="p">::</span>
</span><span class='line'>   <span class="p">:</span><span class="n">maxdepth</span><span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">toctree</span><span class="p">::</span>
</span><span class='line'>   <span class="p">:</span><span class="n">numbered</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">toctree</span><span class="p">::</span>
</span><span class='line'>   <span class="p">:</span><span class="n">caption</span><span class="p">:</span> <span class="n">Table</span> <span class="n">of</span> <span class="n">Contents</span>
</span><span class='line'>   <span class="p">:</span><span class="n">name</span><span class="p">:</span> <span class="n">mastertoc</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">toctree</span><span class="p">::</span>
</span><span class='line'>   <span class="p">:</span><span class="n">titlesonly</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">toctree</span><span class="p">::</span>
</span><span class='line'>   <span class="p">:</span><span class="n">glob</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">toctree</span><span class="p">::</span>
</span><span class='line'>   <span class="p">:</span><span class="n">hidden</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">toctree</span><span class="p">::</span>
</span><span class='line'>   <span class="p">:</span><span class="n">includehidden</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure>


<h4>paragraph-level makeup</h4>

<figure class='code'><figcaption><span>paragraph-level</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">..</span> <span class="n">note</span><span class="p">::</span>
</span><span class='line'><span class="o">..</span> <span class="n">warning</span><span class="p">::</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">versionadded</span><span class="p">::</span> <span class="mf">2.5</span>
</span><span class='line'><span class="o">..</span> <span class="n">versionchanged</span><span class="p">::</span> <span class="n">version</span>
</span><span class='line'><span class="o">..</span> <span class="n">deprecated</span><span class="p">::</span> <span class="mf">3.1</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">seealso</span><span class="p">::</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">rubric</span><span class="p">::</span> <span class="n">title</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">centered</span><span class="p">::</span> <span class="n">LICENSE</span> <span class="n">AGREEMENT</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">hlist</span><span class="p">::</span>
</span><span class='line'>   <span class="p">:</span><span class="n">columns</span><span class="p">:</span> <span class="mi">3</span>
</span><span class='line'>
</span><span class='line'>   <span class="o">*</span> <span class="n">A</span> <span class="nb">list</span> <span class="n">of</span>
</span><span class='line'>   <span class="o">*</span> <span class="n">short</span> <span class="n">items</span>
</span><span class='line'>   <span class="o">*</span> <span class="n">that</span> <span class="n">should</span> <span class="n">be</span>
</span><span class='line'>   <span class="o">*</span> <span class="n">displayed</span>
</span><span class='line'>   <span class="o">*</span> <span class="n">horizontally</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">glossary</span><span class="p">::</span>
</span><span class='line'><span class="o">..</span> <span class="n">productionlist</span><span class="p">::</span>
</span></code></pre></td></tr></table></div></figure>


<h4>codes</h4>

<p>Official docs is <a href="http://sphinx-doc.org/markup/code.html">here</a>.</p>

<figure class='code'><figcaption><span>codes</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">..</span> <span class="n">highlight</span><span class="p">::</span> <span class="n">c</span>
</span><span class='line'><span class="o">..</span> <span class="n">code</span><span class="o">-</span><span class="n">block</span><span class="p">::</span> <span class="n">ruby</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">highlight</span><span class="p">::</span> <span class="n">python</span>
</span><span class='line'>   <span class="p">:</span><span class="n">linenothreshold</span><span class="p">:</span> <span class="mi">5</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">code</span><span class="o">-</span><span class="n">block</span><span class="p">::</span> <span class="n">ruby</span>
</span><span class='line'>   <span class="p">:</span><span class="n">linenos</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">code</span><span class="o">-</span><span class="n">block</span><span class="p">::</span> <span class="n">python</span>
</span><span class='line'>   <span class="p">:</span><span class="n">emphasize</span><span class="o">-</span><span class="n">lines</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span><span class="mi">5</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">literalinclude</span><span class="p">::</span> <span class="n">example</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">literalinclude</span><span class="p">::</span> <span class="n">example</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'>   <span class="p">:</span><span class="n">language</span><span class="p">:</span> <span class="n">ruby</span>
</span><span class='line'>   <span class="p">:</span><span class="n">emphasize</span><span class="o">-</span><span class="n">lines</span><span class="p">:</span> <span class="mi">12</span><span class="p">,</span><span class="mi">15</span><span class="o">-</span><span class="mi">18</span>
</span><span class='line'>   <span class="p">:</span><span class="n">linenos</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">literalinclude</span><span class="p">::</span> <span class="n">example</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'>   <span class="p">:</span><span class="n">encoding</span><span class="p">:</span> <span class="n">latin</span><span class="o">-</span><span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">literalinclude</span><span class="p">::</span> <span class="n">example</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'>   <span class="p">:</span><span class="n">pyobject</span><span class="p">:</span> <span class="n">Timer</span><span class="o">.</span><span class="n">start</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">literalinclude</span><span class="p">::</span> <span class="n">example</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'>   <span class="p">:</span><span class="n">lines</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="o">-</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">literalinclude</span><span class="p">::</span> <span class="n">example</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'>   <span class="p">:</span><span class="n">diff</span><span class="p">:</span> <span class="n">example</span><span class="o">.</span><span class="n">py</span><span class="o">.</span><span class="n">orig</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">code</span><span class="o">-</span><span class="n">block</span><span class="p">::</span> <span class="n">python</span>
</span><span class='line'>   <span class="p">:</span><span class="n">caption</span><span class="p">:</span> <span class="n">this</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'>   <span class="p">:</span><span class="n">name</span><span class="p">:</span> <span class="n">this</span><span class="o">-</span><span class="n">py</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">literalinclude</span><span class="p">::</span> <span class="n">example</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'>   <span class="p">:</span><span class="n">language</span><span class="p">:</span> <span class="n">ruby</span>
</span><span class='line'>   <span class="p">:</span><span class="n">dedent</span><span class="p">:</span> <span class="mi">4</span>
</span><span class='line'>   <span class="p">:</span><span class="n">lines</span><span class="p">:</span> <span class="mi">10</span><span class="o">-</span><span class="mi">15</span>
</span></code></pre></td></tr></table></div></figure>


<h4>inline makeup</h4>

<p>Official docs is <a href="http://sphinx-doc.org/markup/inline.html">here</a>.</p>

<figure class='code'><figcaption><span>inline</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">:</span><span class="nb">any</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">ref</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">doc</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="n">download</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="n">numref</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="n">envvar</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">token</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">keyword</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">option</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">term</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="p">:</span><span class="n">abbr</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">command</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">dfn</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="nb">file</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">guilabel</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">kbd</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">mailheader</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">makevar</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">manpage</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">menuselection</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">mimetype</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">newsgroup</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">program</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">regexp</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">samp</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">pep</span><span class="p">:</span>
</span><span class='line'><span class="p">:</span><span class="n">rfc</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="o">|</span><span class="n">release</span><span class="o">|</span>
</span><span class='line'><span class="o">|</span><span class="n">version</span><span class="o">|</span>
</span><span class='line'><span class="o">|</span><span class="n">today</span><span class="o">|</span>
</span></code></pre></td></tr></table></div></figure>


<h4>others</h4>

<figure class='code'><figcaption><span>otheres</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="p">:</span><span class="n">fieldname</span><span class="p">:</span> <span class="n">Field</span> <span class="n">content</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">sectionauthor</span><span class="p">::</span> <span class="n">name</span> <span class="o">&lt;</span><span class="n">email</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">..</span> <span class="n">sectionauthor</span><span class="p">::</span> <span class="n">Guido</span> <span class="n">van</span> <span class="n">Rossum</span> <span class="o">&lt;</span><span class="n">guido</span><span class="nd">@python.org</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">..</span> <span class="n">codeauthor</span><span class="p">::</span> <span class="n">name</span> <span class="o">&lt;</span><span class="n">email</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">index</span><span class="p">::</span> <span class="o">&lt;</span><span class="n">entries</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">..</span> <span class="n">index</span><span class="p">::</span>
</span><span class='line'>   <span class="n">single</span><span class="p">:</span> <span class="n">execution</span><span class="p">;</span> <span class="n">context</span>
</span><span class='line'>   <span class="n">module</span><span class="p">:</span> <span class="n">__main__</span>
</span><span class='line'>   <span class="n">module</span><span class="p">:</span> <span class="n">sys</span>
</span><span class='line'>   <span class="n">triple</span><span class="p">:</span> <span class="n">module</span><span class="p">;</span> <span class="n">search</span><span class="p">;</span> <span class="n">path</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">index</span><span class="p">::</span> <span class="n">Python</span>
</span><span class='line'><span class="o">..</span> <span class="n">index</span><span class="p">::</span> <span class="err">!</span> <span class="n">Python</span>
</span><span class='line'><span class="o">..</span> <span class="n">index</span><span class="p">::</span> <span class="n">BNF</span><span class="p">,</span> <span class="n">grammar</span><span class="p">,</span> <span class="n">syntax</span><span class="p">,</span> <span class="n">notation</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">only</span><span class="p">::</span> <span class="o">&lt;</span><span class="n">expression</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">..</span> <span class="n">only</span><span class="p">::</span> <span class="n">html</span> <span class="ow">and</span> <span class="n">draft</span>
</span><span class='line'>
</span><span class='line'><span class="o">..</span> <span class="n">tabularcolumns</span><span class="p">::</span> <span class="n">column</span> <span class="n">spec</span>
</span><span class='line'><span class="o">|</span><span class="n">l</span><span class="o">|</span><span class="n">l</span><span class="o">|</span><span class="n">l</span><span class="o">|</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Primer</h3>

<p>Official docs is <a href="http://sphinx-doc.org/rest.html">here</a>.</p>

<h2>References</h2>

<ul>
<li><a href="http://sphinx-doc.org/contents.html">Official Docs</a></li>
<li><a href="https://pythonhosted.org/sphinxcontrib-httpdomain/">sphinxcontrib-httpdomain</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Knowledge Refactoring]]></title>
    <link href="http://k.arttechresearch.com/life/2015/12/31/knowledge-refactoring/"/>
    <updated>2015-12-31T00:24:26+08:00</updated>
    <id>http://k.arttechresearch.com/life/2015/12/31/knowledge-refactoring</id>
    <content type="html"><![CDATA[<h2>知识的重构</h2>

<p>1</p>

<p>从模糊到清晰，再从清晰到模糊，如何结构化自己的知识体系？</p>

<p>知识总在更新迭代，每一次的更新，都可能推翻过去的认知，重建起新的结构，就如代码的重构。
我尝试过去结构化自己的知识技能树，但，整体而言，需要大量的笔记为依托。微博适合记录一闪
而过的灵感，因为轻松，短小，可以自由地天马行空；博客，适合做稍微长篇的记录，重构一小块
的知识树；再整体的体系，是书籍，要写成一本书籍，还是需要大量的笔记为依托，再重新编排这
些笔记，使之结构化。记录，总是好的开始，也是灵感的重现，为日后作参考提供了有效的线索。</p>

<p>所以，我喜欢记笔记，包括在写代码的时候，边开发边记录的开发步骤，也为今后的步骤重现，提
供了极大的方便。</p>

<p>文字是清理思绪的有效方法。回顾过去，依然觉得在曾经的博客岁月里，文思泉涌，思维活跃；另
外，文字可以帮助清晰表达自己的观点；而在编写文字的时候，脑子的思路会变得越来越清晰，并
且，可能会出现新的想法，或发现新的结构。</p>

<p>总结：</p>

<p>－ 微博：记录一闪而过的灵感<br/>
－ 博客：梳理小模块的知识<br/>
－ 书籍：整理知识树</p>

<p>2</p>

<p>如何系统地获取知识树？</p>

<p>如果是专业知识和概念，若初始没有太多的了解，维基百科是很好的开始，然后顺着维基百科的
总结，做笔记，顺藤摸瓜，再对应的参考文章链接，再阅读，再找对应的参考链接，可以尽快地
找到该领域的知识结构。</p>

<p>另外一个途径，是谷歌的论文搜索，可以了解前人已经做了什么。</p>

<p>若需系统化地了解专业知识，书籍是非常好的选择。</p>

<p>若是代码，起了一个新想法，先在Github或谷歌搜索一下项目，看看前人是否已经做了相应的工
作，如果碰到好的实现，就不必再重复造轮子；如果实现尚可，可以改进代码；如果碰不到或没
有好的实现，再自己重新起一个新项目。</p>

<p>3</p>

<p>知识是如何迭代的？</p>

<p>随着认知的深入，知识树会更新，重构原有的知识树，重新结构化；然后再深入了解更多的内容，
再结构化，经过几轮的迭代更新，会出现比较完整的知识树。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web APIs]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/12/30/web-apis/"/>
    <updated>2015-12-30T16:21:13+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/12/30/web-apis</id>
    <content type="html"><![CDATA[<h2>Definition</h2>

<p>Web API is a set of Hypertext Transfer Protocol (HTTP) request mesages along with the structure of reponse messages (XML or JSON format).</p>

<p>Types:</p>

<ul>
<li>Simple Object Access Protocol (SOAP)</li>
<li>REpresentational State Transfer (REST)</li>
</ul>


<h2>SOAP</h2>

<p>SOAP is a protocol specification for exchanging structured inforamtion of web service (XML based) by Hypertext Transfer Protocol (HTTP) or Simple Mail Transfer Protocol (SMTP).</p>

<h2>REST</h2>

<h3>Definition</h3>

<p>REST was definied by Roy Thomas Fieldiing in his 2000 PhD dissertation <a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm">&ldquo;Architectural Styles and the Design of Network-based Software Architectures&rdquo;</a>.</p>

<p>Referring to Wikipedia, <a href="https://en.wikipedia.org/wiki/Representational_state_transfer">REST</a> communicates over Hypertext Transfer Protocal (HTTP) with the same HTTP verbs (GET, POST, PUT, DELETE, etc.) that web browsers user to retrieve web pages and to send data to remote servers.</p>

<p>REST architectural style</p>

<ul>
<li>Performance</li>
<li>Scalability</li>
<li>Simplicity of interfaces</li>
<li>Modifiability of components to meet changing needs (even while the application is running)</li>
<li>Visibility of communication between components by service agents</li>
<li>Portability of components by moving program code with the data</li>
<li>Reliability is the resistance to failure at the system level in the presence of failures within components, connectors, or data</li>
</ul>


<h3>RESTful APIs</h3>

<p>elements</p>

<ul>
<li>URI</li>
<li>JSON data</li>
<li>HTTP methods: GET, POST, PUT, DELETE, etc</li>
</ul>


<p>design rules</p>

<ul>
<li>client-server: there should be a sepration between the server that offers a service, and the client that consumes it.</li>
<li>stateless: each requests from a client must contain all the inforamtion required by the server to carry out the request.</li>
<li>cacheable: the server must indicate to the client if requests can be cached or not.</li>
<li>layered system: communication between a client and a server should be standarized in such a way that allows intermediaries to respond to requests instead of the end server, without the client having to do anything different.</li>
<li>code on demand: servers can provide executable code or scripts for clients to execute in their context.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Framework vs Library]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/12/30/framework-vs-library/"/>
    <updated>2015-12-30T15:11:22+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/12/30/framework-vs-library</id>
    <content type="html"><![CDATA[<p><img src="https://s-media-cache-ak0.pinimg.com/474x/fe/4e/3b/fe4e3b8680d390b80d9bf64976af1b0a.jpg" /></p>

<p>image source: <a href="http://tom.lokhorst.eu/2010/09/why-libraries-are-better-than-frameworks">http://tom.lokhorst.eu/2010/09/why-libraries-are-better-than-frameworks</a></p>

<h2>Framework</h2>

<p>Referring to the Wikipedia, <a href="https://en.wikipedia.org/wiki/Software_framework">framework</a> is</p>

<ul>
<li>an abstraction of providing generic functionality which can be rewritten by users</li>
<li>a universal, resuable software environment that provides particular functionality</li>
<li>including support programs, compilers, code libraries, tool sets and APIs, etc</li>
</ul>


<p>4 Features</p>

<ul>
<li>inversion of control</li>
<li>default behavior</li>
<li>extensibility</li>
<li>non-modifiable framwork code</li>
</ul>


<h2>Library</h2>

<p>Referring to the Wikipedia, <a href="https://en.wikipedia.org/wiki/Library_(computing)">library</a> is</p>

<ul>
<li>a collection of non-volatile resources used by computer programs</li>
<li>a collection of implementation of behavior, written in terms of a language with well-defined interface by which the behavir is invoked</li>
<li>including configration data, documentation, help data, message templates, pre-written code and
sub routines, classes, values or type specifications</li>
</ul>


<p>Types</p>

<ul>
<li>static libraries</li>
<li>shared libraries

<ul>
<li>memory sharing</li>
<li>dynamic linking</li>
<li>optimizations</li>
<li>dynamic loading</li>
</ul>
</li>
<li>remote libraries</li>
<li>code generation libraries</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Logstack ElasticSearch Kibana on Ubuntu]]></title>
    <link href="http://k.arttechresearch.com/tech/2015/12/29/installing-logstack-elasticsearch-kibana-on-ubuntu/"/>
    <updated>2015-12-29T14:52:55+08:00</updated>
    <id>http://k.arttechresearch.com/tech/2015/12/29/installing-logstack-elasticsearch-kibana-on-ubuntu</id>
    <content type="html"><![CDATA[<h2>Installation Steps</h2>

<ul>
<li>Step 1. java</li>
<li>Step 2. elasticsearch</li>
<li>Step 3. kibana/nginx</li>
<li>Step 4. logstack</li>
<li>Step 5. filebeat</li>
</ul>


<h2>Process</h2>

<p>Applications:</p>

<ul>
<li>filebeat: ship logs</li>
<li>logstack: process and index logs</li>
<li>elasticsearch: store logs</li>
<li>kibana: search and visualize logs</li>
<li>nginx: reverse proxy</li>
</ul>


<p>Process:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>App Server - filebeat -|
</span><span class='line'>                       |-&gt; logstack -&gt; elasticsearch -&gt; kibana -&gt; nginx
</span><span class='line'>DB Server  - filebeat -|</span></code></pre></td></tr></table></div></figure>


<h2>Prequisitions</h2>

<ul>
<li>Ubuntu 14.04</li>
<li>Java 8</li>
<li>Logstack</li>
<li>ElasticSearch</li>
<li>Kibana</li>
<li>Filebeat</li>
</ul>


<h2>Java 8</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo add-apt-repository -y ppa:webupd8team/java
</span><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudo apt-get -y install oracle-java8-installer
</span></code></pre></td></tr></table></div></figure>


<h2>ElasticSearch</h2>

<h3>Install ElasticSearch</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch <span class="p">|</span> sudo apt-key add -
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;deb http://packages.elastic.co/elasticsearch/2.x/debian stable main&quot;</span> <span class="p">|</span> sudo tee -a /etc/apt/sources.list.d/elasticsearch-2.x.list
</span><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudo apt-get -y install elasticsearch
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo vim /etc/elasticsearch/elasticsearch.yml
</span><span class='line'><span class="c"># network.host: 192.168.0.1</span>
</span><span class='line'><span class="c"># network.host: localhost</span>
</span><span class='line'>network.host: 0.0.0.0
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo service elasticsearch restart
</span><span class='line'><span class="nv">$ </span>sudo update-rc.d elasticsearch defaults <span class="m">95</span> 10
</span></code></pre></td></tr></table></div></figure>


<p>Website: <a href="http://localhost:9200">http://localhost:9200</a></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/b0/81/cc/b081cc477c42be5c5d48f55fed6c6a09.jpg" /></p>

<h3>Install ElasticSearch-Head</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo /usr/share/elasticsearch/bin/plugin install mobz/elasticsearch-head
</span></code></pre></td></tr></table></div></figure>


<p>Website: <a href="http://localhost:9200/_plugin/head/">http://localhost:9200/_plugin/head/</a></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/24/94/7c/24947c5722c70134ef4bd199fe7ca114.jpg" /></p>

<h2>Kibana</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo groupadd -g <span class="m">1999</span> kibana
</span><span class='line'><span class="nv">$ </span>sudo useradd -u <span class="m">1999</span> -g <span class="m">1999</span> kibana
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /tmp
</span><span class='line'><span class="nv">$ </span>wget https://download.elastic.co/kibana/kibana/kibana-4.3.0-linux-x64.tar.gz
</span><span class='line'><span class="nv">$ </span>tar xvf kibana-*.tar.gz
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>kibana-4.3.0-linux-x64
</span><span class='line'><span class="nv">$ </span>vim config/kibana.yml      <span class="c"># update some configurations</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo mkdir -p /opt/kibana
</span><span class='line'><span class="nv">$ </span>sudo cp -R kibana-4.3.0-linux-x64/* /opt/kibana/
</span><span class='line'><span class="nv">$ </span>ls /opt/kibana/
</span><span class='line'><span class="nv">$ </span>sudo chown -R kibana: /opt/kibana
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /etc/init.d <span class="o">&amp;&amp;</span> sudo curl -o kibana https://gist.githubusercontent.com/thisismitch/8b15ac909aed214ad04a/raw/fc5025c3fc499ad8262aff34ba7fde8c87ead7c0/kibana-4.x-init
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /etc/default <span class="o">&amp;&amp;</span> sudo curl -o kibana https://gist.githubusercontent.com/thisismitch/8b15ac909aed214ad04a/raw/fc5025c3fc499ad8262aff34ba7fde8c87ead7c0/kibana-4.x-default
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo chmod +x /etc/init.d/kibana
</span><span class='line'><span class="nv">$ </span>sudo update-rc.d kibana defaults <span class="m">96</span> 9
</span><span class='line'><span class="nv">$ </span>sudo service kibana start
</span></code></pre></td></tr></table></div></figure>


<p>test: <a href="http://localhost:5601">http://localhost:5601</a></p>

<p><img src="https://s-media-cache-ak0.pinimg.com/736x/cf/05/2c/cf052c0e3e1b3781238082cb844e33e1.jpg" /></p>

<h3>Nginx</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install nginx apache2-utils
</span><span class='line'><span class="nv">$ </span>sudo htpasswd -c /etc/nginx/htpasswd.users kibanaadmin
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/kibana <span class="c"># update config</span>
</span><span class='line'><span class="nv">$ </span>sudo ln /etc/nginx/sites-available/kibana /etc/nginx/sites-enabled/kibana
</span><span class='line'><span class="nv">$ </span>sudo service nginx restart
</span></code></pre></td></tr></table></div></figure>


<p>/etc/nginx/sites-available/kibana</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server <span class="o">{</span>
</span><span class='line'>    listen 80<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    server_name example.com<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    auth_basic <span class="s2">&quot;Restricted Access&quot;</span><span class="p">;</span>
</span><span class='line'>    auth_basic_user_file /etc/nginx/htpasswd.users<span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    location / <span class="o">{</span>
</span><span class='line'>        proxy_pass http://localhost:5601<span class="p">;</span>
</span><span class='line'>        proxy_http_version 1.1<span class="p">;</span>
</span><span class='line'>        proxy_set_header Upgrade <span class="nv">$http_upgrade</span><span class="p">;</span>
</span><span class='line'>        proxy_set_header Connection <span class="s1">&#39;upgrade&#39;</span><span class="p">;</span>
</span><span class='line'>        proxy_set_header Host <span class="nv">$host</span><span class="p">;</span>
</span><span class='line'>        proxy_cache_bypass <span class="nv">$http_upgrade</span><span class="p">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Logstack</h2>

<h3>Install Logstack</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;deb http://packages.elasticsearch.org/logstash/2.1/debian stable main&#39;</span> <span class="p">|</span> sudo tee /etc/apt/sources.list.d/logstash.list
</span><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudo apt-get install logstash
</span></code></pre></td></tr></table></div></figure>


<h3>SSL Certificate</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo mkdir -p /etc/pki/tls/certs
</span><span class='line'><span class="nv">$ </span>sudo mkdir /etc/pki/tls/private
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /etc/pki/tls<span class="p">;</span> sudo openssl req -subj <span class="s1">&#39;/CN=logstash_server_fqdn/&#39;</span> -x509 -days <span class="m">3650</span> -batch -nodes -newkey rsa:2048 -keyout private/logstash-forwarder.key -out certs/logstash-forwarder.crt
</span></code></pre></td></tr></table></div></figure>


<h3>Config Logstack</h3>

<ul>
<li>/etc/logstash/conf.d/02-filebeat-input.conf</li>
<li>/etc/logstash/conf.d/10-syslog.conf</li>
<li>/etc/logstash/conf.d/30-elasticsearch-output.conf</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo vi /etc/logstash/conf.d/02-filebeat-input.conf
</span></code></pre></td></tr></table></div></figure>


<p>02-filebeat-input.conf</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>input <span class="o">{</span>
</span><span class='line'>  beats <span class="o">{</span>
</span><span class='line'>    <span class="nv">port</span> <span class="o">=</span>&gt; 5044
</span><span class='line'>    <span class="nb">type</span> <span class="o">=</span>&gt; <span class="s2">&quot;logs&quot;</span>
</span><span class='line'>    <span class="nv">ssl</span> <span class="o">=</span>&gt; <span class="nb">true</span>
</span><span class='line'><span class="nb">    </span><span class="nv">ssl_certificate</span> <span class="o">=</span>&gt; <span class="s2">&quot;/etc/pki/tls/certs/logstash-forwarder.crt&quot;</span>
</span><span class='line'>    <span class="nv">ssl_key</span> <span class="o">=</span>&gt; <span class="s2">&quot;/etc/pki/tls/private/logstash-forwarder.key&quot;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo vi /etc/logstash/conf.d/10-syslog.conf
</span></code></pre></td></tr></table></div></figure>


<p>10-syslog.conf</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>filter <span class="o">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">[</span><span class="nb">type</span><span class="o">]</span> <span class="o">==</span> <span class="s2">&quot;syslog&quot;</span> <span class="o">{</span>
</span><span class='line'>    grok <span class="o">{</span>
</span><span class='line'>      <span class="nv">match</span> <span class="o">=</span>&gt; <span class="o">{</span> <span class="s2">&quot;message&quot;</span> <span class="o">=</span>&gt; <span class="s2">&quot;%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}&quot;</span> <span class="o">}</span>
</span><span class='line'>      <span class="nv">add_field</span> <span class="o">=</span>&gt; <span class="o">[</span> <span class="s2">&quot;received_at&quot;</span>, <span class="s2">&quot;%{@timestamp}&quot;</span> <span class="o">]</span>
</span><span class='line'>      <span class="nv">add_field</span> <span class="o">=</span>&gt; <span class="o">[</span> <span class="s2">&quot;received_from&quot;</span>, <span class="s2">&quot;%{host}&quot;</span> <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    syslog_pri <span class="o">{</span> <span class="o">}</span>
</span><span class='line'>    date <span class="o">{</span>
</span><span class='line'>      <span class="nv">match</span> <span class="o">=</span>&gt; <span class="o">[</span> <span class="s2">&quot;syslog_timestamp&quot;</span>, <span class="s2">&quot;MMM  d HH:mm:ss&quot;</span>, <span class="s2">&quot;MMM dd HH:mm:ss&quot;</span> <span class="o">]</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo vi /etc/logstash/conf.d/30-elasticsearch-output.conf
</span></code></pre></td></tr></table></div></figure>


<p>30-elasticsearch-output.conf</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>output <span class="o">{</span>
</span><span class='line'>  elasticsearch <span class="o">{</span> <span class="nv">hosts</span> <span class="o">=</span>&gt; <span class="o">[</span><span class="s2">&quot;localhost:9200&quot;</span><span class="o">]</span> <span class="o">}</span>
</span><span class='line'>  stdout <span class="o">{</span> <span class="nv">codec</span> <span class="o">=</span>&gt; rubydebug <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>test</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo service logstash configtest
</span><span class='line'><span class="nv">$ </span>sudo service logstash restart
</span><span class='line'><span class="nv">$ </span>sudo update-rc.d logstash defaults <span class="m">96</span> 9
</span></code></pre></td></tr></table></div></figure>


<h2>Filebeat (Client)</h2>

<h3>SSL Certificate</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scp /etc/pki/tls/certs/logstash-forwarder.crt user@client_server_private_address:/tmp
</span></code></pre></td></tr></table></div></figure>


<h3>Install Filebeat</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;deb https://packages.elastic.co/beats/apt stable main&quot;</span> <span class="p">|</span>  sudo tee -a /etc/apt/sources.list.d/beats.list
</span><span class='line'><span class="nv">$ </span>wget -qO - https://packages.elastic.co/GPG-KEY-elasticsearch <span class="p">|</span> sudo apt-key add -
</span><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudo apt-get install filebeat
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo mkdir -p /etc/pki/tls/certs
</span><span class='line'><span class="nv">$ </span>sudo cp /tmp/logstash-forwarder.crt /etc/pki/tls/certs/
</span></code></pre></td></tr></table></div></figure>


<h3>Config Filebeat</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo vi /etc/filebeat/filebeat.yml
</span></code></pre></td></tr></table></div></figure>


<p>/etc/filebeat/filebeat.yml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>...
</span><span class='line'>      paths:
</span><span class='line'>         - /var/log/auth.log
</span><span class='line'>         - /var/log/syslog
</span><span class='line'><span class="c">#        - /var/log/*.log</span>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>      document_type: syslog
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>output:
</span><span class='line'>
</span><span class='line'>  <span class="c">### Elasticsearch as output</span>
</span><span class='line'>  elasticsearch:
</span><span class='line'>    enabled: <span class="nb">false</span>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>  <span class="c">### Logstash as output</span>
</span><span class='line'>  logstash:
</span><span class='line'>    <span class="c"># The Logstash hosts</span>
</span><span class='line'>    hosts: <span class="o">[</span><span class="s2">&quot;ELK_server_private_IP:5044&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>    tls:
</span><span class='line'>      <span class="c"># List of root certificates for HTTPS server verifications</span>
</span><span class='line'>      certificate_authorities: <span class="o">[</span><span class="s2">&quot;/etc/pki/tls/certs/logstash-forwarder.crt&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>test</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo service filebeat restart
</span><span class='line'><span class="nv">$ </span>sudo update-rc.d filebeat defaults <span class="m">95</span> 10
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
